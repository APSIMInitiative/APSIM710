// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Web Services Description Language Utility
//Mono Framework v4.0.30319.1
//


/// <remarks/>
/// <remarks>
///Apsim Condor Web Services
///</remarks>
[System.Web.Services.WebServiceBinding(Name="ApsimCondorSoap", Namespace="https://apsrunet.apsim.info/condor/service")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ApsimCondor : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback AddJobOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback ListFieldsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ListJobsOperationCompleted;
    
    private System.Threading.SendOrPostCallback RemoveJobOperationCompleted;
    
    private System.Threading.SendOrPostCallback RmFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetFieldOperationCompleted;
    
    public ApsimCondor() {
        this.Url = "https://apsrunet.apsim.info/condor/service/op";
    }
    
    public event AddJobCompletedEventHandler AddJobCompleted;
    
    public event GetFieldCompletedEventHandler GetFieldCompleted;
    
    public event ListFieldsCompletedEventHandler ListFieldsCompleted;
    
    public event ListJobsCompletedEventHandler ListJobsCompleted;
    
    public event RemoveJobCompletedEventHandler RemoveJobCompleted;
    
    public event RmFieldCompletedEventHandler RmFieldCompleted;
    
    public event SetFieldCompletedEventHandler SetFieldCompleted;
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ApsimCondor:AddJob", RequestElementName="AddJobRequest", ResponseElementName="AddJobResults", RequestNamespace="https://apsrunet.apsim.info/condor/service", ResponseNamespace="https://apsrunet.apsim.info/condor/service", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string AddJob([System.Xml.Serialization.XmlElementAttribute("Path")] string[] Path) {
        object[] results = this.Invoke("AddJob", new object[] {
                    Path});
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginAddJob(string[] Path, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddJob", new object[] {
                    Path}, callback, asyncState);
    }
    
    public string EndAddJob(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    public void AddJobAsync(string[] Path) {
        this.AddJobAsync(Path, null);
    }
    
    public void AddJobAsync(string[] Path, object userState) {
        if ((this.AddJobOperationCompleted == null)) {
            this.AddJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddJobCompleted);
        }
        this.InvokeAsync("AddJob", new object[] {
                    Path}, this.AddJobOperationCompleted, userState);
    }
    
    private void OnAddJobCompleted(object arg) {
        if ((this.AddJobCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddJobCompleted(this, new AddJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ApsimCondor:GetField", RequestElementName="GetFieldRequest", ResponseElementName="GetFieldResults", RequestNamespace="https://apsrunet.apsim.info/condor/service", ResponseNamespace="https://apsrunet.apsim.info/condor/service", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string GetField(string Id, string Field) {
        object[] results = this.Invoke("GetField", new object[] {
                    Id,
                    Field});
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginGetField(string Id, string Field, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetField", new object[] {
                    Id,
                    Field}, callback, asyncState);
    }
    
    public string EndGetField(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    public void GetFieldAsync(string Id, string Field) {
        this.GetFieldAsync(Id, Field, null);
    }
    
    public void GetFieldAsync(string Id, string Field, object userState) {
        if ((this.GetFieldOperationCompleted == null)) {
            this.GetFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFieldCompleted);
        }
        this.InvokeAsync("GetField", new object[] {
                    Id,
                    Field}, this.GetFieldOperationCompleted, userState);
    }
    
    private void OnGetFieldCompleted(object arg) {
        if ((this.GetFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetFieldCompleted(this, new GetFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ApsimCondor:ListFields", RequestElementName="ListFieldsRequest", ResponseElementName="ListFieldsResults", RequestNamespace="https://apsrunet.apsim.info/condor/service", ResponseNamespace="https://apsrunet.apsim.info/condor/service", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("ListFieldsResult")]
    public string[] ListFields(string Id) {
        object[] results = this.Invoke("ListFields", new object[] {
                    Id});
        return ((string[])(results[0]));
    }
    
    public System.IAsyncResult BeginListFields(string Id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ListFields", new object[] {
                    Id}, callback, asyncState);
    }
    
    public string[] EndListFields(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    public void ListFieldsAsync(string Id) {
        this.ListFieldsAsync(Id, null);
    }
    
    public void ListFieldsAsync(string Id, object userState) {
        if ((this.ListFieldsOperationCompleted == null)) {
            this.ListFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListFieldsCompleted);
        }
        this.InvokeAsync("ListFields", new object[] {
                    Id}, this.ListFieldsOperationCompleted, userState);
    }
    
    private void OnListFieldsCompleted(object arg) {
        if ((this.ListFieldsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListFieldsCompleted(this, new ListFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ApsimCondor:ListJobs", RequestElementName="ListJobsRequest", ResponseElementName="ListJobsResults", RequestNamespace="https://apsrunet.apsim.info/condor/service", ResponseNamespace="https://apsrunet.apsim.info/condor/service", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    [return: System.Xml.Serialization.XmlElementAttribute("ListJobsResult")]
    public string[] ListJobs() {
        object[] results = this.Invoke("ListJobs", new object[0]);
        return ((string[])(results[0]));
    }
    
    public System.IAsyncResult BeginListJobs(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ListJobs", new object[0], callback, asyncState);
    }
    
    public string[] EndListJobs(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    public void ListJobsAsync() {
        this.ListJobsAsync(null);
    }
    
    public void ListJobsAsync(object userState) {
        if ((this.ListJobsOperationCompleted == null)) {
            this.ListJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListJobsCompleted);
        }
        this.InvokeAsync("ListJobs", new object[0], this.ListJobsOperationCompleted, userState);
    }
    
    private void OnListJobsCompleted(object arg) {
        if ((this.ListJobsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListJobsCompleted(this, new ListJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ApsimCondor:RemoveJob", RequestElementName="RemoveJobRequest", ResponseElementName="RemoveJobResults", RequestNamespace="https://apsrunet.apsim.info/condor/service", ResponseNamespace="https://apsrunet.apsim.info/condor/service", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public bool RemoveJob(string Id) {
        object[] results = this.Invoke("RemoveJob", new object[] {
                    Id});
        return ((bool)(results[0]));
    }
    
    public System.IAsyncResult BeginRemoveJob(string Id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoveJob", new object[] {
                    Id}, callback, asyncState);
    }
    
    public bool EndRemoveJob(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    public void RemoveJobAsync(string Id) {
        this.RemoveJobAsync(Id, null);
    }
    
    public void RemoveJobAsync(string Id, object userState) {
        if ((this.RemoveJobOperationCompleted == null)) {
            this.RemoveJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveJobCompleted);
        }
        this.InvokeAsync("RemoveJob", new object[] {
                    Id}, this.RemoveJobOperationCompleted, userState);
    }
    
    private void OnRemoveJobCompleted(object arg) {
        if ((this.RemoveJobCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoveJobCompleted(this, new RemoveJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ApsimCondor:RmField", RequestElementName="RmFieldRequest", ResponseElementName="RmFieldResults", RequestNamespace="https://apsrunet.apsim.info/condor/service", ResponseNamespace="https://apsrunet.apsim.info/condor/service", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string RmField(string Id, string Field) {
        object[] results = this.Invoke("RmField", new object[] {
                    Id,
                    Field});
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginRmField(string Id, string Field, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RmField", new object[] {
                    Id,
                    Field}, callback, asyncState);
    }
    
    public string EndRmField(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    public void RmFieldAsync(string Id, string Field) {
        this.RmFieldAsync(Id, Field, null);
    }
    
    public void RmFieldAsync(string Id, string Field, object userState) {
        if ((this.RmFieldOperationCompleted == null)) {
            this.RmFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRmFieldCompleted);
        }
        this.InvokeAsync("RmField", new object[] {
                    Id,
                    Field}, this.RmFieldOperationCompleted, userState);
    }
    
    private void OnRmFieldCompleted(object arg) {
        if ((this.RmFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RmFieldCompleted(this, new RmFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ApsimCondor:SetField", RequestElementName="SetFieldRequest", ResponseElementName="SetFieldResults", RequestNamespace="https://apsrunet.apsim.info/condor/service", ResponseNamespace="https://apsrunet.apsim.info/condor/service", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string SetField(string Id, string Field, string Value) {
        object[] results = this.Invoke("SetField", new object[] {
                    Id,
                    Field,
                    Value});
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginSetField(string Id, string Field, string Value, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetField", new object[] {
                    Id,
                    Field,
                    Value}, callback, asyncState);
    }
    
    public string EndSetField(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    public void SetFieldAsync(string Id, string Field, string Value) {
        this.SetFieldAsync(Id, Field, Value, null);
    }
    
    public void SetFieldAsync(string Id, string Field, string Value, object userState) {
        if ((this.SetFieldOperationCompleted == null)) {
            this.SetFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFieldCompleted);
        }
        this.InvokeAsync("SetField", new object[] {
                    Id,
                    Field,
                    Value}, this.SetFieldOperationCompleted, userState);
    }
    
    private void OnSetFieldCompleted(object arg) {
        if ((this.SetFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetFieldCompleted(this, new SetFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
}

public partial class AddJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

public delegate void AddJobCompletedEventHandler(object sender, AddJobCompletedEventArgs args);

public partial class GetFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

public delegate void GetFieldCompletedEventHandler(object sender, GetFieldCompletedEventArgs args);

public partial class ListFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ListFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

public delegate void ListFieldsCompletedEventHandler(object sender, ListFieldsCompletedEventArgs args);

public partial class ListJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ListJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

public delegate void ListJobsCompletedEventHandler(object sender, ListJobsCompletedEventArgs args);

public partial class RemoveJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RemoveJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

public delegate void RemoveJobCompletedEventHandler(object sender, RemoveJobCompletedEventArgs args);

public partial class RmFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RmFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

public delegate void RmFieldCompletedEventHandler(object sender, RmFieldCompletedEventArgs args);

public partial class SetFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

public delegate void SetFieldCompletedEventHandler(object sender, SetFieldCompletedEventArgs args);
