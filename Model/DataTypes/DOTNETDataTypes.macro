##################################################
[file DOTNETDataTypes.h]
// ------------------------------------------------------------------
// NB: Autogenerated. Do not modify manually.
// ------------------------------------------------------------------
#pragma once
#include "../DotNetComponentInterface/Interfaces.h"
using namespace System::Collections;
using namespace System::Runtime::InteropServices;

   //------ ApsimType ------
   public interface class ApsimType
      {
      virtual void pack(char* MessageData);
      virtual void unpack(char* MessageData);
      virtual unsigned memorySize();
      virtual String^ DDML();
      };
   inline void pack(char* messageData, ApsimType^ Data)   {return Data->pack(messageData);}
   inline void unpack(char* messageData, ApsimType^ Data) {return Data->unpack(messageData);}
   inline unsigned memorySize(ApsimType^ Data)            {return Data->memorySize();}
   inline String^ DDML(ApsimType^ Data)                   {return Data->DDML();}

   //------ NullType ------
   public ref class NullType : public ApsimType
      {
      public:
         virtual void pack(char* MessageData)   { }
         virtual void unpack(char* MessageData) { }
         virtual unsigned memorySize()          {return 0;}
         virtual String^ DDML()                 {return "<type/>";}
      };
   public delegate void NullTypeDelegate();
[foreach types.builtin]
   //------ [builtin.name] ------
   public ref class [builtin.name]Type : public ApsimType
      {
      public:
      [builtin.dotnettype] Value;
         virtual void pack(char* MessageData);
         virtual void unpack(char* MessageData);
         virtual unsigned memorySize();
         virtual String^ DDML();
      };
[endfor]
[foreach types.type]

   //------ [type.name] ------
   public ref class [type.name]Type : public ApsimType
      {
      public:
      [foreach type.field]
      [field.dotnettype] [field.name];
      [endfor]
         virtual void pack(char* MessageData);
         virtual void unpack(char* MessageData);
         virtual unsigned memorySize();
         virtual String^ DDML();
      };
[endfor]
[endfile]
##################################################
[file DOTNETDataTypes.cpp]
// ------------------------------------------------------------------
// NB: Autogenerated. Do not modify manually.
// ------------------------------------------------------------------
#include "DOTNETDataTypes.h"
#include "../DotNetComponentInterface/MessageData.h"

[foreach types.builtin]
   //------ [builtin.name] ------
   void [builtin.name]Type::pack(char* MessageData)
      { ::pack(MessageData, Value);	}
   void [builtin.name]Type::unpack(char* MessageData)
      { ::unpackWithConverter(MessageData, Value); }
   unsigned [builtin.name]Type::memorySize()
      { return ::memorySize(Value); }
   String^ [builtin.name]Type::DDML()
      { return [builtin.cddml]; } 
   public delegate void [builtin.name]Delegate([builtin.name]Type^ Data);
[endfor]
[foreach types.type]
   // ------ [type.name] ------
   void [type.name]Type::pack(char* messageData)
      {
      [foreach type.field]
      ::pack(messageData, [field.name]);
      [endfor]
      }
   void [type.name]Type::unpack(char* messageData)
      {
      [foreach type.field]
      [if [field.arrayofstructures] = T]
      ::unpackArrayOfStructures(messageData, [field.name]);
      [elseif [field.structure] = T]
      ::unpack(messageData, [field.name]);
      [else]
      ::unpack(messageData, [field.name], "[field.name]");
      [endif]
      [endfor]
      }
   unsigned [type.name]Type::memorySize()
      {
      return 0
       [foreach type.field]              + ::memorySize([field.name])
       [endfor]              ;
      }
   String^ [type.name]Type::DDML()
      {return [type.cddml];}
   public delegate void [type.name]Delegate([type.name]Type^ Data);

[endfor]
[endfile]
