<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="editor1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>150, 15</value>
  </metadata>
  <data name="editor1.Chart" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFJUZWVDaGFydCwgVmVyc2lvbj0yLjAuMjMwNi4yNjIzMiwgQ3Vs
        dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05YzgxMjYyNzZjNzdiZGI3DAMAAABRU3lzdGVtLkRy
        YXdpbmcsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNm
        NWY3ZjExZDUwYTNhBQEAAAAWU3RlZW1hLlRlZUNoYXJ0LlRDaGFydHkAAAAGLldpZHRoBy5IZWlnaHQR
        LlBhbmVsLk1hcmdpbkxlZnQSLlBhbmVsLk1hcmdpblJpZ2h0Ey5QYW5lbC5NYXJnaW5Cb3R0b20XLlBh
        bmVsLkltYWdlQmV2ZWwuV2lkdGgSLlBhbmVsLkJldmVsLk91dGVyFS5QYW5lbC5TaGFkb3cuVmlzaWJs
        ZRIuUGFuZWwuQnJ1c2guQ29sb3ISLkxlZ2VuZC5DaGVja0JveGVzEy5MZWdlbmQuTGVnZW5kU3R5bGUX
        LkxlZ2VuZC5UaXRsZS5Gb250LkJvbGQhLkxlZ2VuZC5UaXRsZS5Gb250LlNoYWRvdy5WaXNpYmxlHC5M
        ZWdlbmQuVGl0bGUuU2hhZG93LlZpc2libGUZLkxlZ2VuZC5UaXRsZS5QZW4uVmlzaWJsZRsuTGVnZW5k
        LkZvbnQuU2hhZG93LlZpc2libGUWLkxlZ2VuZC5TaGFkb3cuVmlzaWJsZRMuTGVnZW5kLlBlbi5WaXNp
        YmxlDS5IZWFkZXIuTGluZXMbLkhlYWRlci5Gb250LlNoYWRvdy5WaXNpYmxlFi5IZWFkZXIuU2hhZG93
        LlZpc2libGUeLlN1YkhlYWRlci5Gb250LlNoYWRvdy5WaXNpYmxlGS5TdWJIZWFkZXIuU2hhZG93LlZp
        c2libGUbLkZvb3Rlci5Gb250LlNoYWRvdy5WaXNpYmxlFi5Gb290ZXIuU2hhZG93LlZpc2libGUeLlN1
        YkZvb3Rlci5Gb250LlNoYWRvdy5WaXNpYmxlGS5TdWJGb290ZXIuU2hhZG93LlZpc2libGUVLkFzcGVj
        dC5Sb3RhdGlvbkZsb2F0Fi5Bc3BlY3QuRWxldmF0aW9uRmxvYXQZLkFzcGVjdC5Db2xvclBhbGV0dGVJ
        bmRleA4uQXNwZWN0LlZpZXczRBUuR3JhcGhpY3MzRC5QZW4uQ29sb3IXLkdyYXBoaWNzM0QuQnJ1c2gu
        Q29sb3IZLkdyYXBoaWNzM0QuQnJ1c2guVmlzaWJsZR8uR3JhcGhpY3MzRC5Gb250LlNoYWRvdy5WaXNp
        YmxlEy5HcmFwaGljczNELlhDZW50ZXITLkdyYXBoaWNzM0QuWUNlbnRlchkuR3JhcGhpY3MzRC5TbW9v
        dGhpbmdNb2RlHS5HcmFwaGljczNELlRleHRSZW5kZXJpbmdIaW50Gi5HcmFwaGljczNELlN1cHBvcnRz
        M0RUZXh0FS5HcmFwaGljczNELkJhY2tDb2xvchUuR3JhcGhpY3MzRC5Vc2VCdWZmZXIcLkdyYXBoaWNz
        M0QuUm90YXRpb25DZW50ZXIuWBwuR3JhcGhpY3MzRC5Sb3RhdGlvbkNlbnRlci5ZHC5HcmFwaGljczNE
        LlJvdGF0aW9uQ2VudGVyLloULldhbGxzLkxlZnQuQXV0b0hpZGUaLldhbGxzLkxlZnQuU2hhZG93LlZp
        c2libGUVLldhbGxzLlJpZ2h0LkF1dG9IaWRlGy5XYWxscy5SaWdodC5TaGFkb3cuVmlzaWJsZRQuV2Fs
        bHMuQmFjay5BdXRvSGlkZRouV2FsbHMuQmFjay5TaGFkb3cuVmlzaWJsZRYuV2FsbHMuQm90dG9tLkF1
        dG9IaWRlHC5XYWxscy5Cb3R0b20uU2hhZG93LlZpc2libGUOLldhbGxzLlZpc2libGUlLkF4ZXMuTGVm
        dC5MYWJlbHMuRm9udC5TaGFkb3cuVmlzaWJsZSAuQXhlcy5MZWZ0LkxhYmVscy5TaGFkb3cuVmlzaWJs
        ZRsuQXhlcy5MZWZ0LkF1dG9tYXRpY01pbmltdW0YLkF4ZXMuTGVmdC5BeGlzUGVuLldpZHRoFS5BeGVz
        LkxlZnQuR3JpZC5TdHlsZRkuQXhlcy5MZWZ0LkdyaWQuWlBvc2l0aW9uFy5BeGVzLkxlZnQuR3JpZC5W
        aXNpYmxlFC5BeGVzLkxlZnQuSW5jcmVtZW50Ey5BeGVzLkxlZnQuSW52ZXJ0ZWQYLkF4ZXMuTGVmdC5N
        YXhpbXVtT2Zmc2V0Ei5BeGVzLkxlZnQuTWluaW11bR0uQXhlcy5MZWZ0Lk1pbm9yVGlja3MuVmlzaWJs
        ZRcuQXhlcy5MZWZ0LlRpY2tzLkxlbmd0aBwuQXhlcy5MZWZ0LlRpY2tzSW5uZXIuTGVuZ3RoGC5BeGVz
        LkxlZnQuVGl0bGUuQ2FwdGlvbhYuQXhlcy5MZWZ0LlRpdGxlLkxpbmVzJC5BeGVzLkxlZnQuVGl0bGUu
        Rm9udC5TaGFkb3cuVmlzaWJsZR8uQXhlcy5MZWZ0LlRpdGxlLlNoYWRvdy5WaXNpYmxlJC5BeGVzLlRv
        cC5MYWJlbHMuRm9udC5TaGFkb3cuVmlzaWJsZR8uQXhlcy5Ub3AuTGFiZWxzLlNoYWRvdy5WaXNpYmxl
        Gi5BeGVzLlRvcC5BdXRvbWF0aWNNaW5pbXVtFy5BeGVzLlRvcC5BeGlzUGVuLldpZHRoFC5BeGVzLlRv
        cC5HcmlkLlN0eWxlGC5BeGVzLlRvcC5HcmlkLlpQb3NpdGlvbhYuQXhlcy5Ub3AuR3JpZC5WaXNpYmxl
        Ey5BeGVzLlRvcC5JbmNyZW1lbnQXLkF4ZXMuVG9wLk1heGltdW1PZmZzZXQRLkF4ZXMuVG9wLk1pbmlt
        dW0cLkF4ZXMuVG9wLk1pbm9yVGlja3MuVmlzaWJsZRYuQXhlcy5Ub3AuVGlja3MuTGVuZ3RoFy5BeGVz
        LlRvcC5UaWNrcy5WaXNpYmxlGy5BeGVzLlRvcC5UaWNrc0lubmVyLkxlbmd0aBcuQXhlcy5Ub3AuVGl0
        bGUuQ2FwdGlvbhUuQXhlcy5Ub3AuVGl0bGUuTGluZXMjLkF4ZXMuVG9wLlRpdGxlLkZvbnQuU2hhZG93
        LlZpc2libGUeLkF4ZXMuVG9wLlRpdGxlLlNoYWRvdy5WaXNpYmxlJi5BeGVzLlJpZ2h0LkxhYmVscy5G
        b250LlNoYWRvdy5WaXNpYmxlIS5BeGVzLlJpZ2h0LkxhYmVscy5TaGFkb3cuVmlzaWJsZRUuQXhlcy5S
        aWdodC5BdXRvbWF0aWMWLkF4ZXMuUmlnaHQuR3JpZC5TdHlsZRouQXhlcy5SaWdodC5HcmlkLlpQb3Np
        dGlvbiUuQXhlcy5SaWdodC5UaXRsZS5Gb250LlNoYWRvdy5WaXNpYmxlIC5BeGVzLlJpZ2h0LlRpdGxl
        LlNoYWRvdy5WaXNpYmxlEy5BeGVzLlJpZ2h0LlZpc2libGUnLkF4ZXMuQm90dG9tLkxhYmVscy5Gb250
        LlNoYWRvdy5WaXNpYmxlIi5BeGVzLkJvdHRvbS5MYWJlbHMuU2hhZG93LlZpc2libGUWLkF4ZXMuQm90
        dG9tLkF1dG9tYXRpYxcuQXhlcy5Cb3R0b20uR3JpZC5TdHlsZRsuQXhlcy5Cb3R0b20uR3JpZC5aUG9z
        aXRpb24ZLkF4ZXMuQm90dG9tLkdyaWQuVmlzaWJsZSYuQXhlcy5Cb3R0b20uVGl0bGUuRm9udC5TaGFk
        b3cuVmlzaWJsZSEuQXhlcy5Cb3R0b20uVGl0bGUuU2hhZG93LlZpc2libGUULkF4ZXMuQm90dG9tLlZp
        c2libGUpLkF4ZXMuRGVwdGhUb3AuTGFiZWxzLkZvbnQuU2hhZG93LlZpc2libGUkLkF4ZXMuRGVwdGhU
        b3AuTGFiZWxzLlNoYWRvdy5WaXNpYmxlGC5BeGVzLkRlcHRoVG9wLkF1dG9tYXRpYxkuQXhlcy5EZXB0
        aFRvcC5HcmlkLlN0eWxlHS5BeGVzLkRlcHRoVG9wLkdyaWQuWlBvc2l0aW9uKC5BeGVzLkRlcHRoVG9w
        LlRpdGxlLkZvbnQuU2hhZG93LlZpc2libGUjLkF4ZXMuRGVwdGhUb3AuVGl0bGUuU2hhZG93LlZpc2li
        bGUmLkF4ZXMuRGVwdGguTGFiZWxzLkZvbnQuU2hhZG93LlZpc2libGUhLkF4ZXMuRGVwdGguTGFiZWxz
        LlNoYWRvdy5WaXNpYmxlFS5BeGVzLkRlcHRoLkF1dG9tYXRpYxYuQXhlcy5EZXB0aC5HcmlkLlN0eWxl
        Gi5BeGVzLkRlcHRoLkdyaWQuWlBvc2l0aW9uJS5BeGVzLkRlcHRoLlRpdGxlLkZvbnQuU2hhZG93LlZp
        c2libGUgLkF4ZXMuRGVwdGguVGl0bGUuU2hhZG93LlZpc2libGUAAAAAAAAEAAQABAAAAAAAAAAGAAAA
        AAAAAAAAAAAABAQAAAAABAQABAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAEGAAAAAAAABAAAAAAA
        AAAAAAEGAAAAAAAEAAAAAAAAAAQAAAAAAAAAAAQAAAAAAAAEAAAACAgGBgYII1N0ZWVtYS5UZWVDaGFy
        dC5EcmF3aW5nLkJldmVsU3R5bGVzAgAAAAEUU3lzdGVtLkRyYXdpbmcuQ29sb3IDAAAAARxTdGVlbWEu
        VGVlQ2hhcnQuTGVnZW5kU3R5bGVzAgAAAAEBAQEBAQEBAQEBAQEBAQYGCAEUU3lzdGVtLkRyYXdpbmcu
        Q29sb3IDAAAAFFN5c3RlbS5EcmF3aW5nLkNvbG9yAwAAAAEBCAgmU3lzdGVtLkRyYXdpbmcuRHJhd2lu
        ZzJELlNtb290aGluZ01vZGUDAAAAJVN5c3RlbS5EcmF3aW5nLlRleHQuVGV4dFJlbmRlcmluZ0hpbnQD
        AAAAARRTeXN0ZW0uRHJhd2luZy5Db2xvcgMAAAABCAgIAQEBAQEBAQEBAQEBCCJTeXN0ZW0uRHJhd2lu
        Zy5EcmF3aW5nMkQuRGFzaFN0eWxlAwAAAAYBBgEIBgEICAEBAQEBCCJTeXN0ZW0uRHJhd2luZy5EcmF3
        aW5nMkQuRGFzaFN0eWxlAwAAAAYBBggGAQgBCAEBAQEBIlN5c3RlbS5EcmF3aW5nLkRyYXdpbmcyRC5E
        YXNoU3R5bGUDAAAABgEBAQEBASJTeXN0ZW0uRHJhd2luZy5EcmF3aW5nMkQuRGFzaFN0eWxlAwAAAAYB
        AQEBAQEBIlN5c3RlbS5EcmF3aW5nLkRyYXdpbmcyRC5EYXNoU3R5bGUDAAAABgEBAQEBIlN5c3RlbS5E
        cmF3aW5nLkRyYXdpbmcyRC5EYXNoU3R5bGUDAAAABgEBAgAAAIgCAABYAgAAAAAAAAAAHEAAAAAAAAAc
        QAAAAAAAACBAAQAAAAX8////I1N0ZWVtYS5UZWVDaGFydC5EcmF3aW5nLkJldmVsU3R5bGVzAQAAAAd2
        YWx1ZV9fAAgCAAAAAAAAAAAF+////xRTeXN0ZW0uRHJhd2luZy5Db2xvcgQAAAAEbmFtZQV2YWx1ZQpr
        bm93bkNvbG9yBXN0YXRlAQAAAAkHBwMAAAAK/////wAAAAAAAAIAAQX6////HFN0ZWVtYS5UZWVDaGFy
        dC5MZWdlbmRTdHlsZXMBAAAAB3ZhbHVlX18ACAIAAAABAAAAAQAAAAAAAAkHAAAAAAAAAAAAAAAAAAAA
        AJB1QAAAAAAAkHVA/////wAB+P////v///8KAAAAAAAAAAA0AAEAAff////7////Cv////8AAAAAAAAC
        AAAATAEAADgBAAAF9v///yZTeXN0ZW0uRHJhd2luZy5EcmF3aW5nMkQuU21vb3RoaW5nTW9kZQEAAAAH
        dmFsdWVfXwAIAwAAAAEAAAAF9f///yVTeXN0ZW0uRHJhd2luZy5UZXh0LlRleHRSZW5kZXJpbmdIaW50
        AQAAAAd2YWx1ZV9fAAgDAAAAAAAAAAAB9P////v///8K/////wAAAAAAAAIAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAEAAAAF8////yJTeXN0ZW0uRHJhd2luZy5EcmF3aW5nMkQuRGFzaFN0eWxlAQAAAAd2
        YWx1ZV9fAAgDAAAAAQAAAAAAAAAAAAAAAAAAAAAAAElAAQIAAAAAAAAAAAAAAAAAAAAABQAAAAYOAAAA
        CkRlcHRoIChtbSkJDwAAAAAAAAAAAQAAAAHw////8////wEAAAAAAAAAAAAAAAAAAAAAAAAUQAIAAAAA
        AAAAAAAAAAAAAAAAAAUAAAAGEQAAABRWb2x1bWV0cmljIFdhdGVyICglKQkSAAAAAAAAAAEB7f////P/
        //8BAAAAAAAAAAAAAAAAAAAAAAEB7P////P///8BAAAAAAAAAAAAAAAAAAAAAAABAev////z////AQAA
        AAAAAAAAAAAAAAAAAAEB6v////P///8BAAAAAAAAAAAAAAAAABEHAAAAAQAAAAYXAAAAABEPAAAAAQAA
        AAYYAAAACkRlcHRoIChtbSkREgAAAAEAAAAGGQAAABRWb2x1bWV0cmljIFdhdGVyICglKQs=
</value>
  </data>
  <metadata name="dataSet1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>236, 15</value>
  </metadata>
</root>