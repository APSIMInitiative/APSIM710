<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>10, 1</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAU
        CwAAAk1TRnQBSQFMAgEBBAEAAQkBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AEgABwgEAAQ0BLQEFAYwBHAEJ
        AZoBbQEAAVABzQEAAQQMAAFlAQABVwFgAQABVAGwAQABHA8AAZkBMx8AAZkBMxkAAbACEQFoAjQBdQJZ
        AZECJEUAAV4BAAFdARgBRAH2ARkBTQH4ARABMQHSASgBAgGLAbUBAAEaAwAB0gIAAVkBAAFmAQkBKAHX
        AQkBLgHXAQMBEwGzAV0BAAFgCQABmQEzAQABmQEzAQABmQEzAQABmQEzAQABmQEzAQABmQEzAQABmQEz
        AQABmQEzAQABmQEzAQABmQEzAQABmQEzAQABmQEzAQABmQEzAQABmQEzEAABvwIYAZoCUQF3AmIBrQKD
        AXsCYQGeAnkBwgIIGwABxwEIAQABPQFcAQABFgF8AQUBiQExHAABKAECAZIBJAFRAfkBHwFSAf8BHQFP
        Af8BFwFEAegBFAEKAqMBAAEoAVYBAAFmAQ0BLgHdAREBQgH5AQ0BPQH1AQsBOwHwAQQBGgG8AYYBAAE8
        CQABmQEzHwABmQEzDQAByAIdAawCXAG1ApQB3AK9AZ0CiwFtAlIBgAJkAZoCeQGdAhoYAAHIAQgBAAEw
        AW4BAAETAawBJwEVAbMBKwEJAZIBDgGJATMZAAGcAQABLQEYATIB2wEoAVsB/wEkAVYB/wEiAVMB/wEb
        AUsB8QEIAQ0BrgEPATAB3QEWAUoB/gETAUQB+QEQAUEB9gEOAT4B9gEKATwB8AE1AQABdwkAAZkBMx8A
        AZkBMwoAAcMCSQHDAqMB2QLAAeQC0wH2Au8D/wFUAkwBdQJhAe4CwQGYAjEVAAHJAQgBAAEyAXEBAAEW
        Aa4BLgEXAbIBMQEUAa0BKgETAbEBKQEJAZABCwGMATIWAAGQAQABPAEfATcB3QE6AW8B/wEsAV4B/wEp
        AVoB/wEmAVcB/wEgAVIB/AEcAU8B/wEZAUoB/QEWAUYB+gEUAUUB+gEPAT0B8gEWAQkBoAGcAQABLAkA
        AZkBMwgAAYIBtQEAAYsBuwEAAYYBtwEAAX8BsQEAAXkBrAEAAW8BogYAAZkBMwoAAcUCnwHvAuUB/QL5
        A/8BvgKxAZoCfQHVAq0B5wLCAfICzgGhAksSAAHLAQcBAAE0AXQBAAEZAbIBMwEcAbYBOgEYAbMCNAG8
        AU0BFwGwATABEwGwASoBCgGOAQsBjwEwEwAB0gIAAX8BAAFQAR0BGwG8AT0BagH7ATUBZwH/ASwBXQH/
        ASgBWQH/ASIBUwH/AR0BTgH/ARoBTQH/ARIBPQHtASsBAgGJAb0BAAETDAABmQEzCAABlAHEAQABxQHt
        AQABvAHmAQABrgHbAQABngHPAQABewGuBgABmQEzCgAB0AJ2Af4C+gHWAq4BjQJHAeACtwHjAr8B4gLE
        AeMCyAH0AtkBqwJkEgABSAFyAQ8BHwG3AT4BIAG6AUIBHwG4AUABEQGoASQBEwGCAQEBYgHHAXEBGQGy
        ATIBEwGxASsBCwGOAQsBkgEuFgABvAEAARYBOQEAAYUBLgFOAecBNgFoAf8BLgFeAf8BKAFZAf8BIgFU
        Af8BFgE9AeoBNgEAAX0BygEAAQcPAAGZATMIAAGbAcsBAAHVAfwBAAHNAfUBAAG7AeUBAAGqAdgBAAGC
        AbUGAAGZATMKAAHTAgUB0wIiAdICAwGrAiEB6QLMAecCzQHmAtAB6ALTAfgC5wG1An8SAAE3AaQBMwFC
        AcgBZQEfAbsBRgEVAbMBLAFUAWIBAAHHAQkBAAEuAXMBAAFhAcgBcQEZAbEBMQETAbIBLAEMAYwBCwGW
        ASsWAAGTAQABOgElAT8B3wE7AW0B/wE0AWQB/wEuAV4B/wEnAVkB/wEbAUYB6gEoAQEBjAHMAQABBQ8A
        AZkBMwgAAaMB0AEAAeMB/wEAAdgB/wEAAcgB7wEAAbUB4QEAAYoBuwYAAZkBMxMAAb8CHwHjAswB7QLa
        Ae0C3AHvAuIB/QLyAb4CnBIAAYUBSQEOAUQBwgFVATYBvAFOAVIBawEFAdIFAAHGAQsBAAEqAXUBAAFj
        AcoBcgEXAbEBMQEUAbEBLAENAYwBCQGXASwTAAE1AQIBlwFLAXwB/wFBAXAB/wE7AWsB/wE5AWwB/wEt
        AV4B/wElAVgB/wETATYB1wFZAQABaQ8AAZkBMwgAAagB0wEAAeoB/wEAAdwB/wEAAcsB8gEAAbcB4wEA
        AY0BvwYAAZkBMxMAAcoCFwHgAs0B9gLrAfUC6wH3Au8D/wHIAr0BzgIEAbcCCQGWAhUBygIDCQABsAEm
        AQYBlgE6AQoB0QEBCgABxAEMAQABJwF4AQEBYwHKAXIBFwGxATEBFAGzAS0BDQGLAQkBmwEmDQABrwEA
        ASUBJwE8AdoBUAGAAf8BRQF1Af8BNgFiAfoBDgEUAcIBPAFtAf8BKgFbAf8BIAFTAf0BDQEdAcIBmAEA
        ATUMAAGZATMIAAGbAcwBAAGpAdQBAAGjAdIBAAGdAc0BAAGWAccBAAGKAb0GAAGZATMTAAHNAg0B2ALQ
        Af4D/AL5Af8C/gP/AesC6QF8AjcBdgJcAf8C5gGPAkgeAAHCAQ4BAAEkAXsBAAFkAcsBdQEVAbEBMQEW
        AbMBMAEVAX0BBAwAAWABAAFvAVIBfAH6AVABgQH/AUsBfQH/ARsBEQG4AZwBAAEwAR8BEwG2ATgBagH/
        ASQBVgH/ARoBSgHyARkBBgGfAccBAAELCQABmQEzHwABmQEzEwAB0wIAAdMCyw//AZICbwF/Al0B/wLX
        AacCdiEAAcABDwEAASEBgAEDAWYBzQF4ASoBvAFGASQBcgECDAABKwEZAcIBagGcAf8BVwGIAf8BKwFG
        AecBhwEAAUoDAAGqAQABKAEZARoBwQEwAWUB/wEfAVEB/wEUATkB3QFSAQABbAkAAZkBMx8AAZkBMxYA
        AdsCng//AecC5QGlAoIBngJvAasCHyQAAb0BEAEAASsBdgEBASkBeAEFAawBGA0AAVsBAAF+ATsBUgHj
        AVcBggH7ATMBAQGeCQABmAEAATkBGAElAdIBJgFaAf8BDwEuAeMBKQECAZUGAAGZATMBAAGZATMBAAGZ
        ATMBAAGZATMBAAGZATMBAAGZATMBAAGZATMBAAGZATMBAAGZATMBAAGZATMBAAGZATMBAAGZATMBAAGZ
        ATMBAAGZATMTAAHNAkwJ/wHtAuYBwQKkAbECWAG0Ah0BzwIEQgABoQEAATEBSwEAAXsBqwEAAScMAAGB
        AQABTAE3AQEBiAGXAQABNAHRAQABAQkAAZkBMx8AAZkBMxYAAdICBwHBAnkBxAKdAbACTwG3AhsB0AID
        zwABQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/4EACv8BgwHHAd8B+wH8AT8C/wGB
        AQMBgAEBAfABHwHwAf8BgAEBAd8B+wHAAR8B4AF/AYABAQHfAfsBgAEfAcABPwGAAQEB2AEbAYABHwGA
        AR8BgAEDAdgBGwGAAR8BgAEPAeABBwHYARsBgAEfAYABBwHwAQcB2AEbAfABHwGCAQMB8AEHAdgBGwHw
        AQEBxwEBAeABAwHYARsB8AEBAf8BgQHgAQEB3wH7AfABAQH/AcEB4AGBAd8B+wH4AQEB/wLhAcEBgAEB
        AfgBAwL/AfEB4QHfAfsB+AEfCP8L
</value>
  </data>
  <metadata name="dlgOpen.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>115, 1</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>31</value>
  </metadata>
</root>