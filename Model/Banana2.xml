<Type version="36" creator="Apsim 7.6-r3493" name="banana2">
  <MetaData>
    <UItype>CSUserInterface.EmptyUI</UItype>
    <IsCrop>Yes</IsCrop>
    <ShowInMainTree>Yes</ShowInMainTree>
    <Image>%apsim%\UserInterface\Images\banana.jpg</Image>
    <Description>NOTE: Prototype only.  This module is not to be used in model applications.  Most APSIM crop or plant modules do not require extra user input.  Crop specific parameters are either provided for your chosen soil, or are captured as part of the standard model validation process.</Description>
    <Documentation name="Generic plant documentation">%apsim%\Documentation\4 Module Reference\Plant.htm</Documentation>
    <LargeIcon>%apsim%\UserInterface\Images\banana32.png</LargeIcon>
    <SmallIcon>%apsim%\UserInterface\Images\banana16.png</SmallIcon>
    <dll>%apsim%\Model\Plant2.dll</dll>
    <drops>
      <drop>toolbox</drop>
      <drop>area</drop>
      <drop>simulation</drop>
      <drop>folder</drop>
    </drops>
    <variables link="%apsim%\Documentation\ModelInfo\banana.xml" />
    <events link="%apsim%\Documentation\ModelInfo\banana.xml" />
    <ApsimToSim>
      <component name="[InstanceName]" executable="[dll]" class="Plant2.banana2">
        <executable name="[dll]" version="1.0" />
        <initdata>
               [Model]
               <ll>[soil.[InstanceName] ll]</ll><kl>[soil.[InstanceName] kl]</kl><xf>[soil.[InstanceName] xf]</xf></initdata>
      </component>
    </ApsimToSim>
  </MetaData>
  <Model>
    <Plant>
      <CropType type="text" description="CropType">banana</CropType>
      <Arbitrator>
        <NArbitrationOption type="text" description="NArbitrationOption">PrioritythenRelativeAllocation</NArbitrationOption>
        <DMArbitrationOption type="text" description="DMArbitrationOption">RelativeAllocation</DMArbitrationOption>
        <Memo>  There are a number of passes involved in the allocation of Weight (Wt).  
	  Wt_Step 1. Set up DM supplies and demands.  Each organ may have a demand for Structural, Metabolic and Non-structural Wt.  Each organ may supply Fresh DM from photosynthesis and/or stored DM from retranslocation of its Non-structural pool.
	  Wt_Step 2. In this step freshly fixed Wt is partitioned to organs based on their relative Structural and Metabolic demands such that if there is not enough freshly fixed Wt to meet these demands the organs with the highest demands get the greatest share of the photosynthesis.
	  Wt_Step 3. In the second step any freshly fixed DM that was surplus to Structural and Metabolic demands is partitioned to sink organs.  An organ will be a sink if it is parameterised to have a Non-structural (mobile) component and the capacity of each organ to receive excess DM depends on its structural fraction (which determines the Non-structural Fraction and subsequent sink capacity).  If there is still fresh DM unallocated after the second pass this remains unallocated with the assumption that in this case the plant would down regulate photosynthesis due to lack of sink capacity.
	  Wt_Step 4. In this step, Non-structural DM is reallocated from Non-Structural pools if there was insufficient DM to meet the structural and metabolic DM demands of organs.
	  The arbitrator then sends a potential DM allocation to each organ that they use to calculate their N demands and then steps through N partitioning routines.  The final pass in biomass partitioning comes after N partitioning
	  
	  N_Step 1. Set up N supplies and demands.  Each organ may (or may not) supply N in a number of ways.  Each organ has (potentially) a structural, metabolic and Non-structural N Demand.  The structural N demand is that required to grow immobile biomass components, Metabolic N is that required to produce working biomass such as the photosynthetic mechanism in the leaves.  The Non-structural N demand is considered to be the luxury uptake and storage of highly mobile N compounds such as nitrate.
      Each of the following 4 steps have a number of processes in common; Firstly the arbitrator determines each organs current N demand (that outstanding after previous N partitioning steps), then it allocates N to each demanding organ (There are three ways that N can be allocated, see below), then it sets for each supplying organ the amount of N that was taken up.
	  N_Step 2. NReallocation.  This is the supply of N within the plant by the reallocation of sensing and/or Non-structural N which is the lowest energy form of N available to the plant so is partitioned first.
	  N_Step 3. NUptake.  This is the supply of mineral N from the environment (typically by roots from the soil). In this step the arbitrator partitions the potential N uptake supply to satisfy all organs N demands (Structural, Metabolic and Non-structural).  If supply is sufficient this will replenish all Non-structural N that was reallocated in the previous step.  If not the N conc of organs with a Non-structural N component will begin to fall.  If total N demand is less than the uptake supply the crop will leave the surplus mineral N in the soil.
	  N_Step 4. NFixation.  This is the supply of symbiotically fixed N and is redundant for Non-fixers!  The arbitrator will asks all N fixing organs (typically nodules) for their potential N fixation supply and then partition this to meet the Structural and Metabolic N demands of organs.  The arbitrator will not fix N to meet Non-structural N demands to minimise the biomass cost of fixation which is metabolically expensive.  Fixation follows uptake to enable the arbitrator to capture the "Lazy" N fixing behaviour of some legumes.  Once fixation is calculated the arbitrator determines the DM cost of this fixation.
	  N_Step 5. NRetranslocation.  This is only invoked under sever N shortage when NReallocation and Uptake (and fixation if appropriate) cannot meet structural and metabolic N demands.  It this step the arbitrator will remove Metabolic N from older leaf cohorts to meet the N demand of new leaves and reproductive organs.

	
      In all of these N partitioning steps there are three options the developer may chose for determining the allocation of N between demanding organs.
	  1. RelativeAllocation.  If this option is used all N is partitioned to organs relative to their demand so that the organs with the larger N demand get a larger share of a limited N supply.
	  2. PriorityAllocation.  If this option is used the arbitrator steps through all organs in order of priority (set by the order they appear in the IDE) allocating N to meet all of the first organs structural and metabolic N demands before partitioning any to the next organ in the hierarchy.  Once it has stepped through all organs and allocated their minimum (structural and metabolic) N demands it will then step through them again and allocate their luxury (Non-structural) N demands in the same way.
	  3. PrioritythenRelativeAllocation.  If this option is used the arbitrator steps through all organs in order of priority allocating N to meet minimum N demands.  However on the second pass it allocated N relative to the organs outstanding demands such that the organ with the greatest luxury N demand will get the greatest share of the N allocation.
	  
	  Wt_Step 5. Once N is allocated the arbitrator then reduces the Wt allocation of each organ to account for the metabolic cost of N fixation.  The Wt reduction is spread around all organs and an organ will only have its Wt allocation limited until it reaches maximum N conc.
	  Wt_Step 6. Then the arbitrator determines if the N allocated to each organ is sufficient for that organ to reach its minimum N concentration.  If not the arbitrator will constrain the biomass growth of that organ and discards the surplus biomass.  This assume that under sever N stress photosynthesis would be down regulated due to N inadequacy limiting sink strength.  
      
	  Once these steps are complete the Arbitrator finally communicates to each organ its state changes as a result of arbitration.
		   
        </Memo>
      </Arbitrator>
      <Phenology>
        <AirTemperatureFunction name="ThermalTime">
          <XYPairs>
            <XY>14 0</XY>
            <XY>30 16</XY>
            <XY>40 0</XY>
          </XYPairs>
        </AirTemperatureFunction>
        <PhotoperiodFunction name="Photoperiod">
          <Twilight type="text" description="Twilight">-6</Twilight>
        </PhotoperiodFunction>
        <VernalisationCW>
          <VernSens type="text" description="VernSens">1.5</VernSens>
          <PhotopSens type="text" description="PhotopSens">3.0</PhotopSens>
          <Twilight type="text" description="Twilight">-6.0</Twilight>
          <StartStageForEffects type="text" description="StartStageForEffects">Emergence</StartStageForEffects>
          <EndStageForEffects type="text" description="EndStageForEffects">FloralInitiation</EndStageForEffects>
          <StartStageForCumulativeVD type="text" description="StartStageForCumulativeVD">Germination</StartStageForCumulativeVD>
          <EndStageForCumulativeVD type="text" description="EndStageForCumulativeVD">FloralInitiation</EndStageForCumulativeVD>
        </VernalisationCW>
        <GerminatingPhase name="Germinating">
          <Start type="text" description="Start">Sowing</Start>
          <End type="text" description="End">Germination</End>
        </GerminatingPhase>
        <EmergingPhase name="Emerging">
          <Start type="text" description="Start">Germination</Start>
          <End type="text" description="End">Emergence</End>
          <ShootLag type="text" description="Time lag before linear coleoptile growth starts (deg days)">0</ShootLag>
          <ShootRate type="text" description="Growing deg day increase with depth for coleoptile (deg day/mm depth)">1.5</ShootRate>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
        </EmergingPhase>
        <GenericPhase name="DependantVegetative">
          <Start type="text" description="Start">Emergence</Start>
          <End type="text" description="End">EndDependance</End>
          <Constant name="Target">
            <Value type="text" description="Value">472</Value>
          </Constant>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
        </GenericPhase>
        <GenericPhase name="IndependantVegetative">
          <Start type="text" description="Start">EndDependance</Start>
          <End type="text" description="End">FloralInitiation</End>
          <Constant name="Target">
            <Value type="text" description="Value">1018</Value>
          </Constant>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
        </GenericPhase>
        <GenericPhase name="FloralInitiationToFinalLeaf">
          <Start type="text" description="Start">FloralInitiation</Start>
          <End type="text" description="End">FinalLeaf</End>
          <Constant name="Target">
            <Value type="text" description="Value">800</Value>
          </Constant>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
        </GenericPhase>
        <GenericPhase name="FinalLeafToFlowering">
          <Start type="text" description="Start">FinalLeaf</Start>
          <End type="text" description="End">Flowering</End>
          <Constant name="Target">
            <Value type="text" description="Value">185</Value>
          </Constant>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
        </GenericPhase>
        <GenericPhase name="FloweringToFruitFilling">
          <Start type="text" description="Start">Flowering</Start>
          <End type="text" description="End">StartFruitFill</End>
          <Constant name="Target">
            <Value type="text" description="Value">385</Value>
          </Constant>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
        </GenericPhase>
        <GenericPhase name="FruitFilling">
          <Start type="text" description="Start">StartFruitFill</Start>
          <End type="text" description="End">EndFruitFill</End>
          <Constant name="Target">
            <Value type="text" description="Value">1500</Value>
          </Constant>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
          <Memo>Set TT as 1500. Will be more than 1300 minus 385 (TT BE to BH in JDA expt4 minus TT BE to fruit filling)</Memo>
        </GenericPhase>
        <GenericPhase name="Ripening">
          <Start type="text" description="Start">EndFruitFill</Start>
          <End type="text" description="End">Maturity</End>
          <Constant name="Target">
            <Value type="text" description="Value">100</Value>
          </Constant>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
        </GenericPhase>
        <GenericPhase name="MaturityToHarvestRipe">
          <Start type="text" description="Start">Maturity</Start>
          <End type="text" description="End">HarvestRipe</End>
          <Constant name="Target">
            <Value type="text" description="Value">100</Value>
          </Constant>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
        </GenericPhase>
        <EndPhase name="ReadyForHarvesting">
          <Start type="text" description="Start">HarvestRipe</Start>
          <End type="text" description="End">Unused</End>
          <AirTemperatureFunction name="ThermalTime" shortcut="/banana2/Model/Plant/Phenology/ThermalTime" />
        </EndPhase>
        <AccumulateFunction name="AccumulatedThermalTime">
          <StartStageName type="text" description="StartStageName">Emergence</StartStageName>
          <EndStageName type="text" description="StartStageName">HarvestRipe</EndStageName>
          <Memo>This function accumlates the daily values of all childern functions between the start and end phases.</Memo>
          <VariableReference>
            <VariableName type="text" description="Variable Name">Phenology.ThermalTime.Value</VariableName>
            <Memo>Returns the value of a nominated Plant2 variable.</Memo>
          </VariableReference>
        </AccumulateFunction>
      </Phenology>
      <Structure>
        <PrimaryBudNo type="text" description="PrimaryBudNo">1</PrimaryBudNo>
        <InitialiseStage type="text" description="InitialiseStage">Emergence</InitialiseStage>
        <PhaseLookupValue name="MainStemPrimordiaInitiationRate">
          <Start type="text" description="Start">Emergence</Start>
          <End type="text" description="End">Maturity</End>
          <Constant name="Function">
            <Value type="text" description="Value">72.7</Value>
          </Constant>
          <Memo>Determines how quickly Nodes are initiatted on the Apex of the mainstem</Memo>
        </PhaseLookupValue>
        <PhaseLookupValue name="MainStemNodeAppearanceRate">
          <Start type="text" description="Start">Emergence</Start>
          <End type="text" description="End">Maturity</End>
          <Memo>Determines how quickly nodes appear</Memo>
          <LinearInterpolationFunction name="Phyllochron">
            <XProperty type="text" description="XProperty">Structure.MainStemNodeNo</XProperty>
            <XYPairs>
              <XY>1 72.7</XY>
              <XY>30 72.2</XY>
            </XYPairs>
            <Memo>Determines how quickly nodes appear</Memo>
          </LinearInterpolationFunction>
        </PhaseLookupValue>
        <Constant name="MainStemFinalNodeNumber">
          <Value type="text" description="Value">40</Value>
        </Constant>
        <LinearInterpolationFunction name="Height">
          <XProperty type="text" description="XProperty">StageCode.Value</XProperty>
          <XYPairs>
            <XY>3 100</XY>
            <XY>6 4000</XY>
          </XYPairs>
        </LinearInterpolationFunction>
        <MultiplyFunction name="BranchingRate">
          <Memo>Multiplies the values of the children of this node</Memo>
          <LinearInterpolationFunction name="Potential_Branching_Rate">
            <XProperty>Structure.MainStemNodeNo</XProperty>
            <XYPairs>
              <XY>0 0</XY>
              <XY>4 0</XY>
              <XY>5 0</XY>
              <XY>6 0</XY>
              <XY>7 0</XY>
              <XY>34 0</XY>
            </XYPairs>
          </LinearInterpolationFunction>
          <LinearInterpolationFunction name="Cover_response">
            <XProperty type="text" description="XProperty">leaf.CoverGreen</XProperty>
            <XYPairs>
              <XY>0 1</XY>
              <XY>0.17 1</XY>
              <XY>0.25 0</XY>
            </XYPairs>
          </LinearInterpolationFunction>
          <Memo name="Memo1">The branching rates sets the number of new branches initiated.  If we have a plant with one stem and branching rate is set as zero this plant will continue to have only one stem.  If this value increases to 1 for the appearance of 1 mainstem node and then reduces to zero again the plant will produce one branch on its mainstem that has the same properties as the mainstem.  The higher this number is and the longer is remains above 0 the more branches the plant will produce.
For Potato the potential branching rate is the branching pattern that would be observed in wide spaced plantings.  There is a cover response factor to reduce branching rates in closer spacings.</Memo>
        </MultiplyFunction>
        <Constant name="ShadeInducedBranchMortality">
          <Value type="text" description="Value">0</Value>
        </Constant>
        <Constant name="DroughtInducedBranchMortality">
          <Value type="text" description="Value">0</Value>
        </Constant>
        <AirTemperatureFunction name="ThermalTime">
          <XYPairs>
            <XY>4.5 0</XY>
            <XY>30 25.5</XY>
            <XY>40 0</XY>
          </XYPairs>
        </AirTemperatureFunction>
      </Structure>
      <ReproductiveOrgan name="Fruit">
        <MaximumSize type="text" description="MaximumSize">0.042</MaximumSize>
        <RipeStage type="text" description="RipeStage">HarvestRipe</RipeStage>
        <Biomass name="Live" />
        <Biomass name="Dead" />
        <Constant name="NConc">
          <Value type="text" description="Value">0.003</Value>
        </Constant>
        <StageBasedInterpolation name="WaterContent">
          <Stages type="text" description="Stages"> StartFruitFill      EndFruitFill      Maturity       HarvestRipe</Stages>
          <Values type="text" description="Values">  0.12                       0.12                    0.12               0.12      </Values>
        </StageBasedInterpolation>
        <Constant name="MaxNConcDailyGrowth">
          <Value type="text" description="Value">0.03</Value>
        </Constant>
        <StageBasedInterpolation name="MinimumNConc">
          <Stages type="text" description="Stages">Flowering StartFruitFill Maturity</Stages>
          <Values type="text" description="Values">0.006           0.006          0.006 </Values>
        </StageBasedInterpolation>
        <StageBasedInterpolation name="MaximumNConc">
          <Stages type="text" description="Stages"> Flowering StartFruitFill Maturity</Stages>
          <Values type="text" description="Values">0.022           0.022          0.022 </Values>
        </StageBasedInterpolation>
        <PhaseLookup name="FillingRate">
          <PhaseLookupValue name="EarlyFruitGrowth">
            <Start>Flowering</Start>
            <End>StartFruitFill</End>
            <AirTemperatureFunction name="Function">
              <XYPairs>
                <XY>0 0</XY>
                <XY>26 0.001</XY>
                <XY>30 0.001</XY>
                <XY>35 0.001</XY>
              </XYPairs>
            </AirTemperatureFunction>
          </PhaseLookupValue>
          <PhaseLookupValue name="LateFruitGrowth">
            <Start>StartFruitFill</Start>
            <End>Maturity</End>
            <AirTemperatureFunction name="Function">
              <XYPairs>
                <XY>0 0</XY>
                <XY>26 0.002</XY>
                <XY>30 0.002</XY>
                <XY>35 0.002</XY>
              </XYPairs>
            </AirTemperatureFunction>
          </PhaseLookupValue>
        </PhaseLookup>
        <PhaseLookup name="NFillingRate">
          <PhaseLookupValue name="EarlyFruitGrowth">
            <Start>Flowering</Start>
            <End>Maturity</End>
            <AirTemperatureFunction name="Function">
              <XYPairs>
                <XY>0 0</XY>
                <XY>25 5.5E-05</XY>
                <XY>30 5.5E-05</XY>
                <XY>35 5.5E-05</XY>
              </XYPairs>
            </AirTemperatureFunction>
          </PhaseLookupValue>
        </PhaseLookup>
        <PhaseBasedSwitch name="NitrogenDemandSwitch">
          <Start type="text" description="Start">Germination</Start>
          <End type="text" description="End">Maturity</End>
          <Memo>Returns a value of 1 if crop is between start and finish stages and zero if not.  
		Applied in model code but can not be nested with other functions.
        </Memo>
        </PhaseBasedSwitch>
        <OnEventFunction name="NumberFunction">
          <SetEvent type="text" description="SetEvent">Flowering</SetEvent>
          <ReSetEvent type="text" description="ReSetEvent">never</ReSetEvent>
          <Constant name="PreEventValue">
            <Value type="text" description="Value">0</Value>
          </Constant>
          <LinearInterpolationFunction name="PostEventValue">
            <XProperty>Stem.Live.Wt</XProperty>
            <XYPairs>
              <XY>0 0</XY>
              <XY>1000 25000</XY>
            </XYPairs>
          </LinearInterpolationFunction>
        </OnEventFunction>
      </ReproductiveOrgan>
      <Root>
        <ll type="text" description="ll">   0.29  0.29  0.32  0.32  0.35   0.38  0.41  0.48  0.47  0.46  0.44 </ll>
        <kl type="text" description="kl">   0.10  0.10  0.08  0.06  0.04  0.02  0.01  0.00  0.00  0.00  0.00 </kl>
        <xf type="text" description="xf">   1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00  0.00 </xf>
        <InitialDM type="text" description="InitialDM">0.02</InitialDM>
        <SpecificRootLength type="text" description="SpecificRootLength">40000</SpecificRootLength>
        <KNO3 type="text" description="KNO3">0.02</KNO3>
        <KNH4 type="text" description="KNH4">0.0</KNH4>
        <CompositeBiomass name="Live">
          <Property>Root.LayerLive[]</Property>
        </CompositeBiomass>
        <CompositeBiomass name="Dead">
          <Property>Root.LayerDead[]</Property>
        </CompositeBiomass>
        <Memo>Optional paramaters

1. SenescenceRate.  Default value is 0 which means the organ will not seness.  If senesence is required place a function on the organ named SenescenceRate.  It needs to be a number for 0 - 1 that represents the proportion of total biomass that is senessed each day.
2.  NitrogenDemandSwitch.  Default value is 1 which means the organ always has a N demand if its N content is below maximum N conc.  If N demand needs to be switched off place a function on the organ named NitrogenDemandSwitch which returns a value of 1 when no demand is expressed.
</Memo>
        <LinearInterpolationFunction name="KLModifier">
          <XProperty>Leaf.LAI</XProperty>
          <XYPairs>
            <XY>0 1</XY>
            <XY>3 1</XY>
          </XYPairs>
        </LinearInterpolationFunction>
        <AirTemperatureFunction name="TemperatureEffect">
          <XYPairs>
            <XY>0 0</XY>
            <XY>25 1</XY>
            <XY>35 0</XY>
          </XYPairs>
        </AirTemperatureFunction>
        <Constant name="MaxDailyNUptake">
          <Value>6.0</Value>
        </Constant>
        <PhaseLookup name="SenescenceRate">
          <PhaseLookupValue name="PreEmergence">
            <Start>Germination</Start>
            <End>Emergence</End>
            <Constant name="Function">
              <Value type="text" description="Value">0</Value>
            </Constant>
          </PhaseLookupValue>
          <PhaseLookupValue name="PostEmergence">
            <Start>Emergence</Start>
            <End>Flowering</End>
            <Constant name="Function">
              <Value type="text" description="Value">0.005</Value>
            </Constant>
          </PhaseLookupValue>
          <PhaseLookupValue name="PostFlowering">
            <Start>Flowering</Start>
            <End>Maturity</End>
            <Constant name="Function">
              <Value type="text" description="Value">0.005</Value>
            </Constant>
          </PhaseLookupValue>
        </PhaseLookup>
        <PhaseLookup name="RootFrontVelocity">
          <PhaseLookupValue name="PreEmergence">
            <Start>Germination</Start>
            <End>Emergence</End>
            <Constant name="Function">
              <Value type="text" description="Value">5</Value>
            </Constant>
          </PhaseLookupValue>
          <PhaseLookupValue name="PostEmergence">
            <Start type="text" description="Start">Emergence</Start>
            <End type="text" description="End">Flowering</End>
            <Constant name="Function">
              <Value type="text" description="Value">30</Value>
            </Constant>
          </PhaseLookupValue>
          <PhaseLookupValue name="PostFlowering">
            <Start type="text" description="Start">Flowering</Start>
            <End type="text" description="End">Maturity</End>
            <Constant name="Function">
              <Value type="text" description="Value">0</Value>
            </Constant>
          </PhaseLookupValue>
        </PhaseLookup>
        <PhaseLookup name="PartitionFraction">
          <PhaseLookupValue name="Early">
            <Start type="text" description="Start">Emergence</Start>
            <End type="text" description="End">FloralInitiation</End>
            <Constant name="Function">
              <Value type="text" description="Value">0.25</Value>
            </Constant>
          </PhaseLookupValue>
          <PhaseLookupValue name="Middle">
            <Start type="text" description="Start">FloralInitiation</Start>
            <End type="text" description="End">StartFruitFill</End>
            <Constant name="Function">
              <Value type="text" description="Value">0.25</Value>
            </Constant>
          </PhaseLookupValue>
          <PhaseLookupValue name="Late">
            <Start>StartFruitFill</Start>
            <End>Maturity</End>
            <Constant name="Function">
              <Value type="text" description="Value">0.25</Value>
            </Constant>
          </PhaseLookupValue>
        </PhaseLookup>
        <Constant name="MaximumNConc">
          <Value type="text" description="Value">0.01</Value>
          <Memo>This is the highest N concentration that the organ can achieve.  This sets the upper limit to N demand and includes essential and Luxury N demands.  Essential N demand is set by the MinimumNConc of the organ.  Luxary N Demand is N is set by Live.Wt * (MaximumNConc - MinimumNConc) and is N the organ may take up in surples to its growth requirements and store in its Non-Structural pool for reallocation -</Memo>
        </Constant>
        <Constant name="MinimumNConc">
          <Value type="text" description="Value">0.01</Value>
          <Memo>The MinimumNconc determins the organs essential N demand.  Essential N Demand is N is set by Live.Wt * MinimumNConc and is N the organ must take up to achieve its potential growth.  If the organ is not supplied with sufficient N to maintain MinimunNConc its growth will be constrained by the arbitrator.  All N taken up to MinimunNConc is placed in the StructuralPool and is not mobile</Memo>
        </Constant>
      </Root>
      <Leaf>
        <MaxCover type="text" description="MaxCover">1.0</MaxCover>
        <KDead type="text" description="KDead">0.5</KDead>
        <LeafCohort name="InitialLeaves[1]">
          <Rank type="text" description="Rank">1</Rank>
          <Area type="text" description="Area">200</Area>
        </LeafCohort>
        <LeafCohort name="InitialLeaves[2]">
          <Rank type="text" description="Rank">2</Rank>
          <Area type="text" description="Area">0</Area>
        </LeafCohort>
        <LeafCohort name="InitialLeaves[3]">
          <Rank type="text" description="Rank">3</Rank>
          <Area type="text" description="Area">0</Area>
        </LeafCohort>
        <CompositeBiomass name="Live">
          <Property>Leaf.Leaves[].Live</Property>
        </CompositeBiomass>
        <CompositeBiomass name="Dead">
          <Property>Leaf.Leaves[].Dead</Property>
        </CompositeBiomass>
        <ArrayBiomass name="CohortLive">
          <ArraySize>Leaf.MaxNodeNo</ArraySize>
          <Property>Leaf.Leaves[].Live</Property>
        </ArrayBiomass>
        <ArrayBiomass name="CohortDead">
          <ArraySize>Leaf.MaxNodeNo</ArraySize>
          <Property>Leaf.Leaves[].Dead</Property>
        </ArrayBiomass>
        <AirTemperatureFunction name="ThermalTime">
          <XYPairs>
            <XY>4.5 0</XY>
            <XY>30 25.5</XY>
            <XY>40 0</XY>
          </XYPairs>
        </AirTemperatureFunction>
        <LinearInterpolationFunction name="GrowthDuration">
          <XProperty type="text" description="XProperty">Structure.MainStemNodeNo</XProperty>
          <XYPairs>
            <XY>1 72.7</XY>
            <XY>10 72.7</XY>
          </XYPairs>
          <Memo>gives the amount of thermal time that each leaf requires to reach full expansion (MaxArea)</Memo>
        </LinearInterpolationFunction>
        <LinearInterpolationFunction name="MaxArea">
          <XProperty type="text" description="XProperty">Structure.MainStemNodeNo</XProperty>
          <XYPairs>
            <XY>1 32050</XY>
            <XY>7 63881</XY>
            <XY>12 217616</XY>
            <XY>21 940584</XY>
            <XY>25 1124816</XY>
          </XYPairs>
          <Memo>Gives the size of individual leaves when they are fully expanded (mm2)</Memo>
        </LinearInterpolationFunction>
        <LinearInterpolationFunction name="LagDuration">
          <XProperty type="text" description="XProperty">Structure.MainStemNodeNo</XProperty>
          <XYPairs>
            <XY>1 679</XY>
            <XY>22.6 679</XY>
            <XY>22.7 10000</XY>
          </XYPairs>
          <Memo>Gives the amount of thermal time that a leaf may spend at full expansion.  The leaves area may begin to decrease before the lag period is complete if the cover overlying it exceeds that specified in SenescenceInducingCover or if the crop enters N shortage and begins remobilising N from older leaves.</Memo>
        </LinearInterpolationFunction>
        <LinearInterpolationFunction name="SenescenceDuration">
          <XProperty type="text" description="XProperty">Structure.MainStemNodeNo</XProperty>
          <XYPairs>
            <XY>5 1</XY>
            <XY>30 1</XY>
          </XYPairs>
          <Memo>This is the amount of thermal time it takes for leaves to complete senesence in the absence of shading and N stress.</Memo>
        </LinearInterpolationFunction>
        <Constant name="DetachmentLagDuration">
          <Value type="text" description="Value">1</Value>
        </Constant>
        <Constant name="DetachmentDuration">
          <Value type="text" description="Value">1</Value>
        </Constant>
        <LinearInterpolationFunction name="ExtinctionCoeff">
          <XProperty>Leaf.LAI</XProperty>
          <XYPairs>
            <XY>0 0.7</XY>
            <XY>0.45 0.7</XY>
          </XYPairs>
          <Memo>Quantifies the relationship between Leaf area index and radiation interception.  The PotentialExtinctionCoeff is the unstressed value and extinction coefficient declines in response to water stress as leaves wilt to reduce their radiation load</Memo>
        </LinearInterpolationFunction>
        <RUEModel name="Photosynthesis">
          <Constant name="RUE">
            <Value type="text" description="Value">1.7</Value>
          </Constant>
          <WeightedTemperatureFunction name="FT">
            <MaximumTemperatureWeighting type="text" description="MaximumTemperatureWeighting">0.75</MaximumTemperatureWeighting>
            <XYPairs>
              <XY>14 0</XY>
              <XY>30 1</XY>
              <XY>40 0</XY>
            </XYPairs>
          </WeightedTemperatureFunction>
          <LinearInterpolationFunction name="FVPD">
            <XProperty type="text" description="XProperty">Leaf.Photosynthesis.VPD</XProperty>
            <XYPairs>
              <XY>0 1</XY>
              <XY>10 1</XY>
              <XY>50 1</XY>
            </XYPairs>
          </LinearInterpolationFunction>
          <LinearInterpolationFunction name="FN">
            <XProperty type="text" description="XProperty">Leaf.Fn</XProperty>
            <XYPairs>
              <XY>0 0</XY>
              <XY>1 1</XY>
              <XY>1.5 1</XY>
            </XYPairs>
          </LinearInterpolationFunction>
          <LinearInterpolationFunction name="FW">
            <XProperty type="text" description="XProperty">Leaf.Fw</XProperty>
            <XYPairs>
              <XY>0 0</XY>
              <XY>0.4 1</XY>
              <XY>1.5 1</XY>
            </XYPairs>
          </LinearInterpolationFunction>
          <RUECO2Function name="Fco2">
            <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          </RUECO2Function>
          <Memo>Potential photosynthesis is set by the radiation use efficiency (RUE in gDM/MJ).  Stress and CO2 adjustments are applied as:
Photosynthesis =  RadnInt * RUE * Min(Ft, Min(Fn Fvpd)) * Fw * Fco2</Memo>
        </RUEModel>
        <LinearInterpolationFunction name="SpecificLeafAreaMax">
          <XProperty type="text" description="XProperty">Leaf.LAI</XProperty>
          <XYPairs>
            <XY>0 60989</XY>
            <XY>30 60989</XY>
          </XYPairs>
          <Memo>The Maximum SLA set the lowest density the leaves can become and is used to calculate Structural DM demand as DeltaPotentialArea / SpecificLeafAreaMax.  </Memo>
        </LinearInterpolationFunction>
        <Constant name="StructuralFraction">
          <Value type="text" description="Value">.5</Value>
          <Memo>StructuralFraction sets the size of the metabolic pool with Metabolic DM demand calculated as: 
(StructuralDMDemand * (1 / StructuralFraction)) - StructuralDMDemand such that the actual SLA of leaves will normally be less than SpecificLeafAreaMax.  If the leaf cohort is not partitioned sufficient biomass to meet both structural and metabolic N demands it will reduce the growth of both proportinatly.  With moderate DM limitations leaves will get less dense but when they reach SpecificLeafAreaMax and then leaf size will become constrained.</Memo>
        </Constant>
        <LinearInterpolationFunction name="SpecificLeafAreaMin">
          <XProperty type="text" description="XProperty">Structure.MainStemNodeNo</XProperty>
          <XYPairs>
            <XY>0 8155</XY>
            <XY>30 8155</XY>
          </XYPairs>
          <Memo>sets the maximum density that leaves can obtain and sets up the potential size of the Non-Structural pool.  If leaf is partitioned enough DM to meet Structural and Metabolic Demands its SLA will be (DeltaStructuralWt * SpecificLeafAreaMax)/(DeltaStructuralWt* 1/StructuralFraction).  However, if there is surpless DM after all organs are allocated their DM demands it will be partitioned back to the leaf (assuming this would actually be stored as sugar of starch in such a situation) and the leaves can become more dense until they reach SpecificLeafAreaMin.  If leaf area expansion is constrained by water stress leaves will also get more dense until they reach SpecificLeafAreaMin.  Once leaves reach SpecificLeafAreaMin they can not absorb any further excess DM and if there are no other DM sinks available the leaf will discard potential biomass production, assuming that in this situation the leaf would down regulate photosynthesis due to source limitation.</Memo>
        </LinearInterpolationFunction>
        <LinearInterpolationFunction name="ExpansionStress">
          <XProperty>WaterSupplyDemandRatio</XProperty>
          <XYPairs>
            <XY>0 0</XY>
            <XY>1 1</XY>
          </XYPairs>
          <Memo>This controls the effect of water stress on leaf area expansion</Memo>
        </LinearInterpolationFunction>
        <StageBasedInterpolation name="MinimumNConc">
          <Stages>Germination Emergence EndDependance FloralInitiation FinalLeaf Flowering StartFruitFill EndFruitFill Maturity HarvestRipe </Stages>
          <Values>   0.025      0.025     0.021            0.016    0.010       0.0075       0.005    0.005     0.005     0.005    </Values>
          <Memo>The MinimumNconc determins the organs essential N demand.  Essential N Demand is N is set by Live.Wt * MinimumNConc and is N the organ must take up to achieve its potential growth.  If the organ is not supplied with sufficient N to maintain MinimunNConc its growth will be constrained by the arbitrator.  All N taken up to MinimunNConc is placed in the StructuralPool and is not mobile</Memo>
        </StageBasedInterpolation>
        <StageBasedInterpolation name="CriticalNConc">
          <Stages type="text" description="Stages">Germination Emergence EndDependance FloralInitiation FinalLeaf Flowering StartFruitFill EndFruitFill Maturity HarvestRipe </Stages>
          <Values type="text" description="Values">    0.063     0.063     0.032     0.032       0.020     0.015       0.012         0.008        0.008     0.008 </Values>
          <Memo>Returns value interpolated between the specified values depending on the progress between phases </Memo>
          <Memo name="Memo1">The CriticalNconc determins the leaves essential N demand for metabolic N.  MetabolicN is essential for leaf growth and is N the leaves must take up this N to achieve its potential growth.  If the leaf is not supplied with sufficient N to achieve CriticalNConc its growth will be constrained.  N taken up between CriticalNConc and MinimumNConc is placed in the MetabolicPool and is may be remobolised or reallocated</Memo>
          <Memo name="Memo2">Sets the amount of Metabolic N that is required.  MetabolicN conc = ((CritNC - (MinNC * StructuralFraction)) * (1 / (1 - StructuralFraction)).  The value of MetabolicNConc will change with structural fraction so that the leaf aims to reach its critical N concentration.  If the arbitrator does not partition the leaf enough N to reach CriticalNConc the biomass growth of the leaf will be constrained.  MetabolicN is available for retranslocation to other growing organs.  This only occurs under sever N shortage and begins with the oldest cohorts.  This N is also available of reallocation when the leaf is senesing from age or shading.</Memo>
        </StageBasedInterpolation>
        <StageBasedInterpolation name="MaximumNConc">
          <Stages>Germination Emergence EndDependance FloralInitiation FinalLeaf Flowering StartFruitFill EndFruitFill Maturity HarvestRipe </Stages>
          <Values>    0.063     0.063     0.032            0.020     0.015       0.012         0.008     0.008   0.008     0.008 </Values>
          <Memo>This is the highest N concentration that the organ can achieve.  This sets the upper limit to N demand and includes essential and Luxury N demands.  Essential N demand is set by the MinimumNConc of the organ.  Luxary N Demand is N is set by Live.Wt * (MaximumNConc - MinimumNConc) and is N the organ may take up in surples to its growth requirements and store in its Non-Structural pool for reallocation.</Memo>
        </StageBasedInterpolation>
        <Constant name="NReallocationFactor">
          <Value type="text" description="Value">1</Value>
          <Memo>Controls the proportion of Non-Structural and senesing Metabolic N that may be Reallocated to other organs each day.  </Memo>
        </Constant>
        <Constant name="NRetranslocationFactor">
          <Value type="text" description="Value">0.5</Value>
          <Memo>sets the proportion of Metabolic N that may be Remobilised to meet the demand of other organs each day.  A value of zero means the crop will favor maintaining the N concentration and photosynthetic capacity of its current leaf area (behaviour of crops such as potato and wheat).  Increasing this will enable the crop to grow and increased leaf area with diluted N concentration, favoring larger leaf area over the higher N concentration and photosynthetic capacity of leaves (behaviour of crops such as maize) </Memo>
        </Constant>
        <Constant name="DMRetranslocationFactor">
          <Value type="text" description="Value">.5</Value>
          <Memo>This sets the proportion of NonStructural Wt that can be remobilised each day.</Memo>
        </Constant>
        <LinearInterpolationFunction name="yHeight">
          <XProperty type="text" description="XProperty">StageCode.Value</XProperty>
          <XYPairs>
            <XY>3 100</XY>
            <XY>6 4000</XY>
          </XYPairs>
          <Memo>This function defines the potential hight of the canopy<Memo>This function defines the potential hight of the canopy</Memo></Memo>
        </LinearInterpolationFunction>
        <LinearInterpolationFunction name="FrostFraction">
          <XProperty>Met.MinT</XProperty>
          <XYPairs>
            <XY>-1 0</XY>
            <XY>0 0</XY>
          </XYPairs>
          <Memo>Sets the proportion of leaf area that is killed by frost</Memo>
        </LinearInterpolationFunction>
        <LinearInterpolationFunction name="ShadeInducedSenescenceRate">
          <XProperty type="text" description="XProperty">Leaf.Leaves[Leaf.CurrentRank].CoverAbove</XProperty>
          <XYPairs>
            <XY>0 0</XY>
            <XY>0.9 0</XY>
            <XY>0.900001 0.2</XY>
          </XYPairs>
        </LinearInterpolationFunction>
        <Constant name="InitialNConc">
          <Value type="text" description="Value">0</Value>
        </Constant>
      </Leaf>
      <GenericAboveGroundOrgan name="Stem">
        <Memo>The generic organ has 6 optional paramaters.  If you wish to override the defaults values specified below drop a function onto this organ and name and set accordingly
1. SenescenceRate.  Default value is 0 which means the organ will not seness.  If senesence is required place a function on the organ named SenescenceRate.  It needs to be a number for 0 - 1 that represents the proportion of total biomass that is senessed each day.
2. NReallocationFactor.  Default value is 0 which means the organ will not allow any of its N to be reallocated as it senesses.  If reallocation of senessing N is required place a function on the organ named NReallocationFactor.  It needs to be a number from 0 - 1 that represents the proportion of senessing N that is available for reallocation
3. NRetranslocationFactor.  Default value is 0 which means none of the nonstructuralN in this organ is available for retranslocation.  If retranslocation is required place a function on the organ named NRetranslocationFactor. It needs to be a number from 0 -1 that represents the proportion of non-structural N that can be removed from an organ on any day.
4. NitrogenDemandSwitch.  Default value is 1 which means the organ always has a N demand if its N content is below maximum N conc.  If N demand needs to be switched off place a function on the organ named NitrogenDemandSwitch which returns a value of 1 when no demand is expressed.
5. DMRetranslocationFactor.  Default value is 0 which means the organ will not retranslocate NonStructural biomass.  If retranslocation is desired turn change this to a value between 0 - 1.  This represents the proportion of NonStructural biomass in the organ that can be retranslocated each day.
6. StructuralFraction.  Derault value is 1 which means all biomass partitioned to this organ is put into the structrual pool.  If you wish this organ to have NonStructural DM that can be retranslocated set this to a value lower than 1 (between 0 - 1). Also note that making structural fraction less then 1 may influence the biomass partitioning to this organ because biomass is only partitioned to NonStructural Pools after the DM demand from other pools has been met.
         </Memo>
        <Biomass name="Live" />
        <Biomass name="Dead" />
        <Constant name="NReallocationFactor">
          <Value type="text" description="Value">0</Value>
          <Memo>Controls the proportion of Non-Structural and senesing Metabolic N that may be Reallocated to other organs each day.  </Memo>
        </Constant>
        <Constant name="NRetranslocationFactor">
          <Value type="text" description="Value">0.1</Value>
          <Memo>sets the proportion of Metabolic N that may be Remobilised to meet the demand of other organs each day.  A value of zero means the crop will favor maintaining the N concentration and photosynthetic capacity of its current leaf area (behaviour of crops such as potato and wheat).  Increasing this will enable the crop to grow and increased leaf area with diluted N concentration, favoring larger leaf area over the higher N concentration and photosynthetic capacity of leaves (behaviour of crops such as maize) </Memo>
        </Constant>
        <PartitionFractionDemandFunction name="DMDemandFunction">
          <StageBasedInterpolation name="PartitionFraction">
            <Stages type="text" description="Stages">Germination Emergence EndDependance FloralInitiation FinalLeaf Flowering StartFruitFill EndFruitFill Maturity HarvestRipe </Stages>
            <Values type="text" description="Values">    0.0       0.40      0.40       0.40      0.6       0.6         0.0         0.0           0.0     0.0 </Values>
            <Memo>Returns value interpolated between the specified values depending on the progress between phases </Memo>
            <Memo name="Memo1"> DMDemandFunction sets demand for structural DM.  This is passed to the arbitrator which determines the eventual allocation</Memo>
          </StageBasedInterpolation>
        </PartitionFractionDemandFunction>
        <StageBasedInterpolation name="MaximumNConc">
          <Stages type="text" description="Stages">Germination Emergence EndDependance FloralInitiation FinalLeaf Flowering StartFruitFill EndFruitFill Maturity HarvestRipe </Stages>
          <Values type="text" description="Values">   0.050     0.050      0.020     0.020       0.015    0.010       0.0075        0.005        0.005    0.005    </Values>
          <Memo>This is the highest N concentration that the organ can achieve.  This sets the upper limit to N demand and includes essential and Luxury N demands.  Essential N demand is set by the MinimumNConc of the organ.  Luxary N Demand is N is set by Live.Wt * (MaximumNConc - MinimumNConc) and is N the organ may take up in surples to its growth requirements and store in its Non-Structural pool for reallocation -</Memo>
        </StageBasedInterpolation>
        <StageBasedInterpolation name="MinimumNConc">
          <Stages type="text" description="Stages">Germination Emergence Flowering StartFruitFill Maturity </Stages>
          <Values type="text" description="Values">   0.003     0.003      0.003            0.003    0.003         </Values>
          <Memo>The MinimumNconc determins the organs essential N demand.  Essential N Demand is N is set by Live.Wt * MinimumNConc and is N the organ must take up to achieve its potential growth.  If the organ is not supplied with sufficient N to maintain MinimunNConc its growth will be constrained by the arbitrator.  All N taken up to MinimunNConc is placed in the StructuralPool and is not mobile</Memo>
        </StageBasedInterpolation>
        <PhaseBasedSwitch name="NitrogenDemandSwitch">
          <Start type="text" description="Start">Germination</Start>
          <End type="text" description="End">Maturity</End>
          <Memo>Returns a value of 1 if crop is between start and finish stages and zero if not.  
		Applied in model code but can not be nested with other functions.
        </Memo>
        </PhaseBasedSwitch>
        <PhaseLookup name="StructuralFraction">
          <PhaseLookupValue name="Early">
            <Start type="text" description="Start">Emergence</Start>
            <End type="text" description="End">FinalLeaf</End>
            <Constant name="Function">
              <Value type="text" description="Value">1.0</Value>
            </Constant>
          </PhaseLookupValue>
          <Memo>Returns the value of the "PhaseLookupValue" functions child if phenology is between the specified start and end value.  Multiple "PhaseLookupValue" functions can be added to this function returning different values durring different phases.  Function returns 0 if none of the "PhaseLookupValue" are in phase </Memo>
          <PhaseLookupValue name="Middle">
            <Start type="text" description="Start">FinalLeaf</Start>
            <End type="text" description="End">Flowering</End>
            <Constant name="Function">
              <Value type="text" description="Value">0.5</Value>
            </Constant>
          </PhaseLookupValue>
          <PhaseLookupValue name="Late">
            <Start type="text" description="Start">Flowering</Start>
            <End type="text" description="End">Maturity</End>
            <Constant name="Function">
              <Value type="text" description="Value">0.5</Value>
            </Constant>
          </PhaseLookupValue>
        </PhaseLookup>
      </GenericAboveGroundOrgan>
      <GenericAboveGroundOrgan name="Corm">
        <Memo>The generic organ has 6 optional paramaters.  If you wish to override the defaults values specified below drop a function onto this organ and name and set accordingly
1. SenescenceRate.  Default value is 0 which means the organ will not seness.  If senesence is required place a function on the organ named SenescenceRate.  It needs to be a number for 0 - 1 that represents the proportion of total biomass that is senessed each day.
2. NReallocationFactor.  Default value is 0 which means the organ will not allow any of its N to be reallocated as it senesses.  If reallocation of senessing N is required place a function on the organ named NReallocationFactor.  It needs to be a number from 0 - 1 that represents the proportion of senessing N that is available for reallocation
3. NRetranslocationFactor.  Default value is 0 which means none of the nonstructuralN in this organ is available for retranslocation.  If retranslocation is required place a function on the organ named NRetranslocationFactor. It needs to be a number from 0 -1 that represents the proportion of non-structural N that can be removed from an organ on any day.
4. NitrogenDemandSwitch.  Default value is 1 which means the organ always has a N demand if its N content is below maximum N conc.  If N demand needs to be switched off place a function on the organ named NitrogenDemandSwitch which returns a value of 1 when no demand is expressed.
5. DMRetranslocationFactor.  Default value is 0 which means the organ will not retranslocate NonStructural biomass.  If retranslocation is desired turn change this to a value between 0 - 1.  This represents the proportion of NonStructural biomass in the organ that can be retranslocated each day.
6. StructuralFraction.  Derault value is 1 which means all biomass partitioned to this organ is put into the structrual pool.  If you wish this organ to have NonStructural DM that can be retranslocated set this to a value lower than 1 (between 0 - 1). Also note that making structural fraction less then 1 may influence the biomass partitioning to this organ because biomass is only partitioned to NonStructural Pools after the DM demand from other pools has been met.
         </Memo>
        <Biomass name="Live" />
        <Biomass name="Dead" />
        <Constant name="NReallocationFactor">
          <Value type="text" description="Value">0</Value>
          <Memo>Controls the proportion of Non-Structural and senesing Metabolic N that may be Reallocated to other organs each day.  </Memo>
        </Constant>
        <Constant name="NRetranslocationFactor">
          <Value type="text" description="Value">0.1</Value>
          <Memo>sets the proportion of Metabolic N that may be Remobilised to meet the demand of other organs each day.  A value of zero means the crop will favor maintaining the N concentration and photosynthetic capacity of its current leaf area (behaviour of crops such as potato and wheat).  Increasing this will enable the crop to grow and increased leaf area with diluted N concentration, favoring larger leaf area over the higher N concentration and photosynthetic capacity of leaves (behaviour of crops such as maize) </Memo>
        </Constant>
        <PartitionFractionDemandFunction name="DMDemandFunction">
          <StageBasedInterpolation name="PartitionFraction">
            <Stages type="text" description="Stages">Germination Emergence EndDependance FloralInitiation FinalLeaf Flowering StartFruitFill EndFruitFill Maturity HarvestRipe </Stages>
            <Values type="text" description="Values">    0.0       0.40      0.40       0.40      0.6       0.6         0.0         0.0           0.0     0.0 </Values>
            <Memo>Returns value interpolated between the specified values depending on the progress between phases </Memo>
            <Memo name="Memo1"> DMDemandFunction sets demand for structural DM.  This is passed to the arbitrator which determines the eventual allocation</Memo>
          </StageBasedInterpolation>
        </PartitionFractionDemandFunction>
        <StageBasedInterpolation name="MaximumNConc">
          <Stages type="text" description="Stages">Germination Emergence EndDependance FloralInitiation FinalLeaf Flowering StartFruitFill EndFruitFill Maturity HarvestRipe </Stages>
          <Values type="text" description="Values">   0.050     0.050      0.020     0.020       0.015    0.010       0.0075        0.005        0.005    0.005    </Values>
          <Memo>This is the highest N concentration that the organ can achieve.  This sets the upper limit to N demand and includes essential and Luxury N demands.  Essential N demand is set by the MinimumNConc of the organ.  Luxary N Demand is N is set by Live.Wt * (MaximumNConc - MinimumNConc) and is N the organ may take up in surples to its growth requirements and store in its Non-Structural pool for reallocation -</Memo>
        </StageBasedInterpolation>
        <StageBasedInterpolation name="MinimumNConc">
          <Stages type="text" description="Stages">Germination Emergence Flowering StartFruitFill Maturity </Stages>
          <Values type="text" description="Values">   0.003     0.003      0.003            0.003    0.003         </Values>
          <Memo>The MinimumNconc determins the organs essential N demand.  Essential N Demand is N is set by Live.Wt * MinimumNConc and is N the organ must take up to achieve its potential growth.  If the organ is not supplied with sufficient N to maintain MinimunNConc its growth will be constrained by the arbitrator.  All N taken up to MinimunNConc is placed in the StructuralPool and is not mobile</Memo>
        </StageBasedInterpolation>
        <PhaseBasedSwitch name="NitrogenDemandSwitch">
          <Start type="text" description="Start">Germination</Start>
          <End type="text" description="End">Maturity</End>
          <Memo>Returns a value of 1 if crop is between start and finish stages and zero if not.  
		Applied in model code but can not be nested with other functions.
        </Memo>
        </PhaseBasedSwitch>
        <PhaseLookup name="StructuralFraction">
          <PhaseLookupValue name="Early">
            <Start type="text" description="Start">Emergence</Start>
            <End type="text" description="End">FinalLeaf</End>
            <Constant name="Function">
              <Value type="text" description="Value">1.0</Value>
            </Constant>
          </PhaseLookupValue>
          <Memo>Returns the value of the "PhaseLookupValue" functions child if phenology is between the specified start and end value.  Multiple "PhaseLookupValue" functions can be added to this function returning different values durring different phases.  Function returns 0 if none of the "PhaseLookupValue" are in phase </Memo>
          <PhaseLookupValue name="Middle">
            <Start type="text" description="Start">FinalLeaf</Start>
            <End type="text" description="End">Flowering</End>
            <Constant name="Function">
              <Value type="text" description="Value">0.5</Value>
            </Constant>
          </PhaseLookupValue>
          <PhaseLookupValue name="Late">
            <Start type="text" description="Start">Flowering</Start>
            <End type="text" description="End">Maturity</End>
            <Constant name="Function">
              <Value type="text" description="Value">0.5</Value>
            </Constant>
          </PhaseLookupValue>
        </PhaseLookup>
      </GenericAboveGroundOrgan>
      <StageBasedInterpolation name="StageCode">
        <Stages type="text" description="Stages"> Germination     Emergence      EndDependance     FloralInitiation FinalLeaf   Flowering    StartFruitFill      EndFruitFill      Maturity       HarvestRipe</Stages>
        <Values type="text" description="Values"> 1                     2                      3                      4                      5                       6                  7                       8                  9                  10            </Values>
      </StageBasedInterpolation>
      <Summary />
      <CompositeBiomass name="AboveGround">
        <Property>Organs[AboveGround].Live</Property>
        <Property>Organs[AboveGround].Dead</Property>
      </CompositeBiomass>
      <CompositeBiomass name="BelowGround">
        <Property>Organs[BelowGround].Live</Property>
        <Property>Organs[BelowGround].Dead</Property>
      </CompositeBiomass>
      <CompositeBiomass name="Total">
        <Property>Organs[].Live</Property>
        <Property>Organs[].Dead</Property>
      </CompositeBiomass>
      <CompositeBiomass name="TotalLive">
        <Property>Organs[].Live</Property>
      </CompositeBiomass>
      <CompositeBiomass name="TotalDead">
        <Property>Organs[].Dead</Property>
      </CompositeBiomass>
    </Plant>
    <Cultivar name="Cavendish">
      <Construct type="text" description="Construct">Plant</Construct>
    </Cultivar>
  </Model>
</Type>