<folder version="33" name="Management">
  <manager name="Empty manager">
    <script>
      <text>
      </text>
      <event>init</event>
    </script>
    <script>
      <text>
      </text>
      <event>start_of_day</event>
    </script>
    <script>
      <text>
      </text>
      <event>end_of_day</event>
    </script>
  </manager>
  <manager2 name="Script(VB)">
    <ui>
      <A type="text" description="Param A">Parameter value</A>
    </ui>
    <text>
Imports System
Imports ModelFramework

Public Class Script 
      
   &lt;Link&gt; Dim MyPaddock As Paddock ' Can be used to dynamically get access to simulation structure and variables
   &lt;Input&gt; Dim Today As DateTime   ' Equates to the value of the current simulation date - value comes from CLOCK
   &lt;Param&gt; Private A As String     ' The value for this will come from the Properties page.
   &lt;Output&gt; Private B As Double    ' An example of how to make a variable available to other APSIM modules

   
   ' The following event handler will be called once at the beginning of the simulation
   &lt;EventHandler()&gt; Public Sub OnInitialised()
   End Sub

   
   ' The following event handler will be called each day at the beginning of the day
   &lt;EventHandler()&gt; Public Sub OnPrepare()
   End Sub
   
End Class
   </text>
  </manager2>
  <manager2 name="Script(C#)">
    <ui>
      <A type="text" description="Param A">Parameter value</A>
    </ui>
    <text>
using System;
using ModelFramework;

public class Script 
{      
   [Link] Paddock MyPaddock; // Can be used to dynamically get access to simulation structure and variables
   [Input] DateTime Today;   // Equates to the value of the current simulation date - value comes from CLOCK
   [Param] string A;         // The value for this will come from the Properties page.
   [Output] double B;        // An example of how to make a variable available to other APSIM modules

   
   // The following event handler will be called once at the beginning of the simulation
   [EventHandler] public void OnInitialised()
   {
      
   }
      
   // The following event handler will be called each day at the beginning of the day
   [EventHandler] public void OnPrepare()
   {
      
   }
   
}
       </text>
  </manager2>
  <Reference>
    <ref type="text" description="Path to assembly:">xxxxxxx.dll</ref>
  </Reference>
  <folder name="Manager (common tasks)">
    <memo name="IrrigationRules">Irrigation rules are now found in the Manager.NET folder.</memo>
    <manager name="Sow using a fasw in top layer">
      <ui>
        <category description="Sowing criteria" type="category" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
        <must_sow type="yesno" description="Must sow? : ">no</must_sow>
        <sw1mm type="text" description="sw above ll15 in top layer (mm)">20</sw1mm>
        <category description="Sowing parameters" type="category" />
        <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
        <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
        <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
        <class type="classes" description="Enter crop growth class : ">plant</class>
        <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
      </ui>
      <script>
        <text>     sw1=[sw1mm]/dlayer(1)                                                !convert from mm to a volumetric sw

if (paddock_is_fallow() = 1 and FallowIn &lt;&gt; 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
    if (date_within('[date1], [date2]') = 1) then

    if (sw(1)&gt;=(sw1 + ll15(1))  OR  ('[must_sow]' = 'yes' AND today = date('[date2]'))  then
       [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
       endif
    endif

     if today = date('[date2]') then
        ChooseNextCrop = 'yes'
    endif
endif
      </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Sow on a fixed date">
      <script>
        <text>
        if (today = date('[date]') then
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
         endif
               </text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="Sowing criteria" />
        <date type="text" description="Enter sowing date (dd-mmm) : ">1-jan</date>
        <category type="category" description="Sowing parameters" />
        <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
        <density type="text" description="Enter sowing density  (plants/m2) : ">10</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">50</depth>
        <cultivar type="cultivars" description="Enter cultivar : " />
        <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
        <row_spacing type="text" description="Enter row spacing (mm) : ">500</row_spacing>
      </ui>
    </manager>
    <manager name="Sow using a variable rule">
      <script>
        <text><![CDATA[
      if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            ]]></text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
        <must_sow type="yesno" description="Must sow? : ">no</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
        <category type="category" description="Sowing parameters" />
        <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
        <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
        <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
        <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
        <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
      </ui>
    </manager>
    <manager name="Cotton sowing rule">
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
        <must_sow type="yesno" description="Must sow? : ">no</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
        <category type="category" description="Sowing parameters" />
        <crop type="crop" description="Enter name of crop to sow : ">cotton</crop>
        <density type="text" description="Enter sowing density  (plants/m2 in row) : ">10</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
        <cultivar type="cultivars" description="Enter cultivar : ">siok</cultivar>
        <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
        <skiprow type="list" listvalues="0, 1, 2" description="Skip row : ">0</skiprow>
      </ui>
      <script>
        <text>
      if (paddock_is_fallow() = 1 and FallowIn &lt;&gt; 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] &gt;= [raincrit] AND esw &gt;= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants_pm =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], skiprow = [skiprow]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Sorghum sowing rule">
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
        <must_sow type="yesno" description="Must sow? : ">no</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
        <category type="category" description="Sowing parameters" />
        <crop type="crop" description="Enter name of crop to sow : ">sorghum</crop>
        <density type="text" description="Enter sowing density  (plants/m2) : ">7</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
        <cultivar type="cultivars" description="Enter cultivar : ">early</cultivar>
        <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
        <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
      </ui>
      <script>
        <text>
      if (paddock_is_fallow() = 1 and FallowIn &lt;&gt; 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] &gt;= [raincrit] AND esw &gt;= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], skip = [skiprow]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Sorghum Sowing with Tillers">
      <ui>
        <category description="Sowing criteria" type="category" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
        <must_sow type="yesno" description="Must sow? : ">no</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
        <category description="Sowing parameters" type="category" />
        <crop type="crop" description="Enter name of crop to sow : ">sorghum</crop>
        <density type="text" description="Enter sowing density  (plants/m2) : ">7</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
        <cultivar type="cultivars" description="Enter cultivar : ">early</cultivar>
        <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
        <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
        <ftn type="text" description="Enter Fertile Tiller Number :">3</ftn>
      </ui>
      <script>
        <text>      if (paddock_is_fallow() = 0) then
            outputfile do_output
         endif

         if (paddock_is_fallow() = 1 and FallowIn &lt;&gt; 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
            if (date_within('[date1], [date2]') = 1) then
               if (rain[[rainnumdays]] &gt;= [raincrit] AND esw &gt;= [esw_amount]) OR
                   ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
                  ChooseNextCrop = 'yes'   ! for rotations
                  [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], skip = [skiprow], tiller_no_fertile = [ftn]
               endif
               if today = date('[date2]') then
                  ChooseNextCrop = 'yes'
               endif
            endif
         endif
               </text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
               nextcrop = 0
               fallowin = 0
               </text>
        <event>init</event>
      </script>
    </manager>
    <manager name="SUGAR management">
      <script>
        <text><![CDATA[
            ! -----------------------------------------------------------------
            ! Book keeping to round days to integer values
            plantlen = nearest_int(plantlen)
            ratoonlen = nearest_int(ratoonlen)

            ! Initialise and set a time counter for entire run
            dah = 0

            if (sugar.crop_status = 'alive') then
               dah = 0

               ! Set harvest dates for each crop phase
               if (sugar.DaysAfterSowing = [plantlen] and ratoon_no = 0) or
                  (sugar.DaysAfterSowing = [ratoonlen] and ratoon_no > 0) then

                  sugar harvest

                  if (ratoon_no = [NoRatoons] + 1) then
                     ! plough the crop out
                     sugar kill_crop
                     sugar end_crop

                  else
                     ! Set stalk density
                     sugar.plants = [ratoon_stalks]
                  endif
               else
                  ! We have not reached the harvest date for this ratoon.
               endif

            elseif (sugar.crop_status = 'dead') then
               sugar harvest
               sugar end_crop

            elseif (sugar.crop_status = 'out') and (today = date('[planting_day]') then
               sugar sow plants = 10 (), cultivar = [variety], sowing_depth = [sowing_depth]
               sugar.plants = [plant_stalks]
               dah = 0

            else
               dah = dah + 1
            endif
               ]]></text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="Sugar plant crop management parameters" />
        <crop type="crop" description="Enter name of crop to sow : ">sugar</crop>
        <planting_day type="text" description="Enter planting date (dd-mmm) : ">1-jan</planting_day>
        <plantlen type="text" description="Duration of a plant crop (days) (30 days/month * 15 months) : ">450</plantlen>
        <plant_stalks type="text" description="Stalk density of plant crop (/m2) :">10</plant_stalks>
        <variety type="list" listvalues="q117,q96,q138,ts65-28,h73,q141,nco376,n12,n14,cp51,r570,m1356,m55560,q124" description="Planting variety :">q117</variety>
        <sowing_depth type="text" description="Planting depth mm) :">150</sowing_depth>
        <category type="category" description="Ratoon management parameters" />
        <NoRatoons type="text" description="Number of ratoons (max = 5): ">4</NoRatoons>
        <ratoonlen type="text" description="Duration of a ratoon crop (days) (30 days/month * 13 months) : ">390</ratoonlen>
        <ratoon_stalks type="text" description="Stalk density of ratoon crop (/m2) :">10</ratoon_stalks>
      </ui>
    </manager>
    <manager name="Lucerne Ley fixed sow harvest at flowering">
      <ui>
        <category type="category" description="Sowing criteria" />
        <date type="text" description="Enter sowing date (dd-mmm-yyyy) : ">1-jan-1985</date>
        <category type="category" description="Sowing parameters" />
        <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
        <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
        <cultivar type="cultivars" description="Enter cultivar : " />
        <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
        <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        <category type="category" description="Number of years" />
        <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
        <category type="category" description="Harvesting criteria" />
        <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
        <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
        <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
      </ui>
      <script>
        <text>
       if (today = date('[date]') then
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
              [crop]LeyYears = [leyyears]
       endif

</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
             if [crop].StageName = 'flowering'  then
                [crop]  harvest height = [harvest_ht], remove = [remove]
              endif
              if today= date('[killdate]') and [crop].plant_status &lt;&gt;'out' then
                   if ( [crop]LeyYears &gt; 0 ) then
                         [crop]LeyYears = [crop]LeyYears - 1
                   else
                              [crop] end_crop
                   endif
              endif
         </text>
        <event>end_of_day</event>
      </script>
    </manager>
    <manager name="Lucerne Ley variable sow harvest at flowering">
      <script>
        <text><![CDATA[
       if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
               [crop]LeyYears = [leyyears]! for the length of the lucerne ley
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif

         ]]></text>
        <event>start_of_day</event>
      </script>
      <script>
        <text><![CDATA[
                if [crop].StageName = 'flowering'  then
             [crop]  harvest height = [harvest_ht], remove = [remove]
        endif
        if today= date('[killdate]') and [crop].plant_status <>'out' then
             if ( [crop]LeyYears > 0 ) then
                   [crop]LeyYears = [crop]LeyYears - 1
             else
                        [crop] end_crop
             endif
        endif
         ]]></text>
        <event>end_of_day</event>
      </script>
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
        <must_sow type="yesno" description="Must sow? : ">no</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
        <category type="category" description="Sowing parameters" />
        <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
        <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
        <cultivar type="cultivars" description="Enter cultivar : " />
        <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
        <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        <category type="category" description="Number of years" />
        <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
        <category type="category" description="Harvesting criteria" />
        <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
        <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
        <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
      </ui>
    </manager>
    <manager name="Harvesting rule">
      <script>
        <text><![CDATA[
           if ('[crop]' = 'cotton') then
              if ([crop].ozcot_status > 0) then
                  [crop] harvest
              endif
           elseif ([crop].StageName = 'harvest_ripe' or [crop].plant_status = 'dead') then
              [crop]  harvest
              [crop]  end_crop
           endif
]]></text>
        <event>end_of_day</event>
      </script>
      <ui>
        <category type="category" description="Harvesting criteria" />
        <crop type="crop" description="Enter name of crop to harvest when ripe : ">wheat</crop>
      </ui>
    </manager>
    <manager name="End crop on a fixed date">
      <script>
        <text>

        if (today = date('[date]') then
              [crop]  end_crop
        endif

            </text>
        <event>end_of_day</event>
      </script>
      <ui>
        <category type="category" description="Harvesting criteria" />
        <crop type="crop" description="Enter name of crop to harvest when ripe : ">wheat</crop>
        <date type="text" description="Enter ending date (dd-mmm) : ">1-jan</date>
      </ui>
    </manager>
    <manager name="Fertilise at sowing">
      <script>
        <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = 50 (mm), type = [fert_type_sow]
            </text>
        <event>[modulename].[eventname]</event>
      </script>
      <ui>
        <category type="category" description="When should fertiliser be applied" />
        <modulename type="modulename" description="On which module should the event come from : ">wheat</modulename>
        <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
        <category type="category" description="Fertiliser application details" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
        <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">150</fert_amount_sow>
        <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">urea_N</fert_type_sow>
      </ui>
    </manager>
    <manager name="Fertilise on fixed date">
      <script>
        <text><![CDATA[
         if (today = date('[fert_date]') then
            N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
            if (N_topsoil < [fert_criteria]) then
               [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
            endif
         endif ]]></text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="When should fertiliser be applied" />
        <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
        <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
        <category type="category" description="Fertiliser application details" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
        <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">150</fert_amount>
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
      </ui>
    </manager>
    <manager name="Fertilise in a zadok stage window">
      <script>
        <text>
            fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 0
        </text>
        <event>init</event>
      </script>
      <script>
        <text>
            fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 0
        </text>
        <event>sowing</event>
      </script>
      <script>
        <text><![CDATA[
         if (zadok_stage >= [zadok_fert_stage_begin]
            AND zadok_stage <= [zadok_fert_stage_end]
            AND fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 0) then
            if (esw >= [esw_amount]) then
               N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
               if (N_topsoil < [fert_criteria]) then
                  [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
               fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 1
               endif
            endif
         endif
         ]]></text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="When should fertiliser be applied" />
        <zadok_fert_stage_begin type="text" description="Enter start of zadok window (10-71):   ">30</zadok_fert_stage_begin>
        <zadok_fert_stage_end type="text" description="Enter end of zadok window (10-71):   ">32</zadok_fert_stage_end>
        <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
        <esw_amount type="text" description="Enter amount of soil water (mm)">30</esw_amount>
        <category type="category" description="Fertiliser application details" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
        <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">25</fert_amount>
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
      </ui>
    </manager>
    <manager name="Fertilise on fixed date - top up">
      <script>
        <text>
         if (today = date('[fert_date]') then
            N_deficit = [fert_criteria] - (no3(1) + nh4(1) + no3(2) + nh4(2) + no3(3) + nh4(3))
            '[fertmodule]' apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type] ()
         endif </text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="When should fertiliser be applied" />
        <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
        <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
        <category type="category" description="Fertiliser application details" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
      </ui>
    </manager>
    <manager name="Fertilise on days after sowing - top up">
      <script>
        <text>
         if ([modulename].DaysAfterSowing = [fert_das]) then
            N_deficit = [fert_criteria] - (no3(1) + nh4(1) + no3(2) + nh4(2) + no3(3) + nh4(3))
            '[fertmodule]' apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type] ()
         endif </text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="When should fertiliser be applied" />
        <modulename type="modulename" description="On which crop is fertiliser being applied : ">wheat</modulename>
        <fert_das type="text" description="Enter fertiliser days after sowing  : ">30</fert_das>
        <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
        <category type="category" description="Fertiliser application details" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
      </ui>
    </manager>
    <manager name="Fertilise incrop on critical NO3 level- top up">
      <script>
        <text><![CDATA[
         if ([modulename].plant_status = 'alive') then
            NO3_available = no3(1) + no3(2) + no3(3)
            if (NO3_available <= [fert_critical]) then
               N_deficit = [fert_criteria] - NO3_available
               '[fertmodule]' apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type] ()
            endif
         endif ]]></text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="When should fertiliser be applied" />
        <modulename type="modulename" description="In which crop is fertiliser being applied : ">wheat</modulename>
        <fert_criteria type="text" description="Maximum Amount of NO3 required in top 3 layers (kg/ha) : ">200</fert_criteria>
        <fert_critical type="text" description="Critical Amount of NO3 in top 3 layers (kg/ha) : ">100</fert_critical>
        <category type="category" description="Fertiliser application details" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NO3_N</fert_type>
      </ui>
    </manager>
    <manager name="Tillage on fixed date">
      <script>
        <text>
         if (today = date('[tillage_date]') then
            if ('[tillage_type]' = 'user_defined') then
                '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
            else
                '[surfaceommodule]' tillage type = [tillage_type]
            endif
            ready_to_till_pre_sow = 0
            till_day_pre_sow = 0
         endif
      </text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="When should tillage be done" />
        <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) : ">dd-mmm</tillage_date>
        <category type="category" description="Tillage application details" />
        <surfaceommodule type="modulename" description="Module used to apply the tillage : ">Surface Organic Matter</surfaceommodule>
        <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
        <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
        <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
      </ui>
    </manager>
    <manager name="Tillage on an event">
      <script>
        <text>
            if ('[tillage_type]' = 'user_defined') then
                '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
            else
                '[surfaceommodule]' tillage type = [tillage_type]
            endif
      </text>
        <event>[modulename].[eventname]</event>
      </script>
      <ui>
        <category type="category" description="When should tillage be performed" />
        <modulename type="modulename" description="The module the event come from : ">ClockAllYears</modulename>
        <eventname type="text" description="On which event should tillage be done : ">sowing</eventname>
        <category type="category" description="Tillage details" />
        <surfaceommodule type="modulename" description="Module used to apply the tillage : ">Surface Organic Matter</surfaceommodule>
        <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
        <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
        <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
      </ui>
    </manager>
    <manager name="Report on date">
      <ui>
        <category type="category" description="Report on a specific date" />
        <output type="modulename" description="Name of module to write to:">outputfile</output>
        <date type="ddmmmdate" description="Enter date to report on:">15-oct</date>
      </ui>
      <script>
        <text>
          if (today = date('[date]')) then
             [output] do_output
          endif
          </text>
        <event>end_of_day</event>
      </script>
    </manager>
    <manager name="Reset water, nitrogen, surfaceOM and phosphorus on fixed date">
      <script>
        <text>
         if (today = date('[reset_date]')) then
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            resetP = '[resetP]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            if (resetP = 'yes') then
                '[pmodule]' reset
            endif
            act_mods reseting
         endif
      </text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="When should a reset be done" />
        <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">dd-mmm</reset_date>
        <category type="category" description="Reset details" />
        <soilmodule type="modulename" description="Name of your soil module : " />
        <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
        <pmodule type="modulename" description="Name of your phosphorus module : ">Phosphorus</pmodule>
        <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
        <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
        <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        <resetP type="yesno" description="Reset phosphorus?">no</resetP>
      </ui>
    </manager>
    <manager name="Reset water, nitrogen, surfaceOM and phosphorus on sowing">
      <script>
        <text>
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            resetP = '[resetP]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            if (resetP = 'yes') then
                '[pmodule]' reset
            endif
            if (resetWater = 'yes' or resetNitrogen = 'yes' or resetSurfaceOM = 'yes' or resetP = 'yes') then
               act_mods reseting
            endif
      </text>
        <event>[modulename].[eventname]</event>
      </script>
      <ui>
        <category type="category" description="When should a reset be done" />
        <modulename type="modulename" description="The module the event is to come from : ">wheat</modulename>
        <eventname type="text" description="On which event should a reset be done : ">sowing</eventname>
        <category type="category" description="Reset details" />
        <soilmodule type="modulename" description="Name of your soil module : " />
        <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
        <pmodule type="modulename" description="Name of your phosphorus module : ">Phosphorus</pmodule>
        <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
        <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
        <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        <resetP type="yesno" description="Reset phosphorus?">no</resetP>
      </ui>
    </manager>
    <manager name="Rotations">
      <script>
        <text>
         NextCropIndex = 1
         NextCrop = ' '
         ChooseNextCrop = 'yes'
         SummerFallowIn = 'no'
         WinterFallowIn = 'no'
         FallowIn = 'no'
      </text>
        <event>init</event>
      </script>
      <script>
        <text>
      if (ChooseNextCrop = 'yes') then
         if (NextCropIndex = 1) then
            NextCrop = '[crop1]'
         elseif (NextCropIndex = 2) then
            NextCrop = '[crop2]'
         elseif (NextCropIndex = 3) then
            NextCrop = '[crop3]'
         elseif (NextCropIndex = 4) then
            NextCrop = '[crop4]'
         elseif (NextCropIndex = 5) then
            NextCrop = '[crop5]'
         elseif (NextCropIndex = 6) then
            NextCrop = '[crop6]'
         elseif (NextCropIndex = 7) then
            NextCrop = '[crop7]'
         elseif (NextCropIndex = 8) then
            NextCrop = '[crop8]'
         elseif (NextCropIndex = 9) then
            NextCrop = '[crop9]'
         elseif (NextCropIndex = 10) then
            NextCrop = '[crop10]'
         elseif (NextCropIndex = 11) then
            NextCrop = '[crop11]'
         elseif (NextCropIndex = 12) then
            NextCrop = '[crop12]'
         elseif (NextCropIndex = 13) then
            NextCrop = '[crop13]'
         elseif (NextCropIndex = 14) then
            NextCrop = '[crop14]'
         elseif (NextCropIndex = 15) then
            NextCrop = '[crop15]'
         elseif (NextCropIndex = 16) then
            NextCrop = '[crop16]'
         elseif (NextCropIndex = 17) then
            NextCrop = '[crop17]'
         elseif (NextCropIndex = 18) then
            NextCrop = '[crop18]'
         elseif (NextCropIndex = 19) then
            NextCrop = '[crop19]'
         elseif (NextCropIndex = 20) then
            NextCrop = '[crop20]'
         endif
         if (NextCrop = 'nil' or NextCrop = ' ') then
            NextCrop = '[crop1]'
            NextCropIndex = 1
         endif
         NextCropIndex = NextCropIndex + 1
         ChooseNextCrop = 'no'
      endif
      ! if the next crop is due to be a fallow and we're within the
      ! correct date range then put a fallow in.
      if (NextCrop = '[WinterFallowName]') then
         if (paddock_is_fallow() = 1 and FallowIn = 'no') then
            if (date_within('[SummerFallowEndDate], [WinterFallowEndDate]') then
               WinterFallowIn = 'yes'
               FallowIn = 'yes'
               ChooseNextCrop = 'yes'
            endif
         endif
      elseif (NextCrop = '[SummerFallowName]') then
         if (paddock_is_fallow() = 1 and FallowIn = 'no') then
            if (date_within('[WinterFallowEndDate], [SummerFallowEndDate]') then
               SummerFallowIn = 'yes'
               FallowIn = 'yes'
               ChooseNextCrop = 'yes'
            endif
         endif
      endif

      ! if we currently have a fallow in and we're at the end of the fallow window
      ! then remove the fallow.
      if (WinterFallowIn = 'yes' and today = date('[WinterFallowEndDate]')+1) then
         WinterFallowIn = 'no'
         FallowIn = 'no'
      endif
      if (SummerFallowIn = 'yes' and today = date('[SummerFallowEndDate]')+1) then
         SummerFallowIn = 'no'
         FallowIn = 'no'
      endif
      </text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="Fallow options" />
        <SummerFallowName type="text" description="Enter summer fallow name : ">sf</SummerFallowName>
        <SummerFallowEndDate type="text" description="Enter summer fallow END date (dd-mmm) : ">15-mar</SummerFallowEndDate>
        <WinterFallowName type="text" description="Enter winter fallow name : ">wf</WinterFallowName>
        <WinterFallowEndDate type="text" description="Enter winter fallow END date (dd-mmm) : ">23-aug</WinterFallowEndDate>
        <category type="category" description="Crop rotation sequence" />
        <crop1 type="crop" description="Enter 1st crop : ">nil</crop1>
        <crop2 type="crop" description="Enter 2nd crop : ">nil</crop2>
        <crop3 type="crop" description="Enter 3rd crop : ">nil</crop3>
        <crop4 type="crop" description="Enter 4th crop : ">nil</crop4>
        <crop5 type="crop" description="Enter 5th crop : ">nil</crop5>
        <crop6 type="crop" description="Enter 6th crop : ">nil</crop6>
        <crop7 type="crop" description="Enter 7th crop : ">nil</crop7>
        <crop8 type="crop" description="Enter 8th crop : ">nil</crop8>
        <crop9 type="crop" description="Enter 9th crop : ">nil</crop9>
        <crop10 type="crop" description="Enter 10th crop : ">nil</crop10>
        <crop11 type="crop" description="Enter 11th crop : ">nil</crop11>
        <crop12 type="crop" description="Enter 12th crop : ">nil</crop12>
        <crop13 type="crop" description="Enter 13th crop : ">nil</crop13>
        <crop14 type="crop" description="Enter 14th crop : ">nil</crop14>
        <crop15 type="crop" description="Enter 15th crop : ">nil</crop15>
        <crop16 type="crop" description="Enter 16th crop : ">nil</crop16>
        <crop17 type="crop" description="Enter 17th crop : ">nil</crop17>
        <crop18 type="crop" description="Enter 18th crop : ">nil</crop18>
        <crop19 type="crop" description="Enter 19th crop : ">nil</crop19>
        <crop20 type="crop" description="Enter 20th crop : ">nil</crop20>
      </ui>
    </manager>
    <manager name="Yield moisture correction">
      <script>
        <text>
          WetYield = yield / (1 - [MoistureContent]/100)
          </text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category type="category" description="Properties" />
        <MoistureContent type="text" description="Moisture content of grain (%) : ">12</MoistureContent>
      </ui>
    </manager>
    <manager name="Simple gross margin (put before harvesting rule)">
      <script>
        <text><![CDATA[
           ! Reset the bank to zero the day after harvest.
           if (ResetBank = 1) then
              Bank = 0
              ResetBank = 0
           endif

           ! Subtract fertiliser cost from the bank
           if (fertiliser > 0)then
              Bank = Bank - ([NCost] * fertiliser + [NApplicationCost])
           endif

           ! Add harvest return to the bank
           if StageName = 'harvest_ripe' or plant_status = 'dead' then
              FullPrice = [Price] + (grain_protein - [MinimumProtein]) * 2 * [ProteinIncrement]
              Bank = Bank + FullPrice * (WetYield / 1000)
              ResetBank = 1
           endif
           ]]></text>
        <event>post</event>
      </script>
      <ui>
        <category type="category" description="Cost properties" />
        <NCost type="text" description="Cost of N fertiliser ($/ha) : ">1.2</NCost>
        <NApplicationCost type="text" description="Cost of N application ($/ha) : ">15</NApplicationCost>
        <category type="category" description="Price properties" />
        <Price type="text" description="Price ($/t) : ">140</Price>
        <MinimumProtein type="text" description="Minimum protein for classification ($/t) : ">10.5</MinimumProtein>
        <ProteinIncrement type="text" description="Protein increment payment ($/t) : ">2</ProteinIncrement>
      </ui>
    </manager>
    <manager name="Publish an event when an APSIM variable meets a 2 part condition">
      <script>
        <text><![CDATA[
          if ([VariableName1] = [VariableValue1] and
              [VariableName2] >= [LowerBound] and
              [VariableName2] <= [UpperBound]) then
             act_mods [EventName]
          endif]]></text>
        <event>post</event>
      </script>
      <ui>
        <category type="category" description="Condition1 properties" />
        <VariableName1 type="text" description="Name of 1st APSIM variable to check (e.g. stage_name) : ">stage_name</VariableName1>
        <VariableValue1 type="text" description="Value that 1st variable must have (e.g. flowering) : ">'flowering'</VariableValue1>
        <category type="category" description="Condition2 properties" />
        <VariableName2 type="text" description="Name of 2nd APSIM variable to bound check (e.g. maxt, mint, avtemp) : ">mint</VariableName2>
        <LowerBound type="text" description="Lower bound of variable : ">-100</LowerBound>
        <UpperBound type="text" description="Upper bound of variable : ">0</UpperBound>
        <category type="category" description="Event properties" />
        <EventName type="text" description="Name of event to publish when above 2 conditions are met : ">SevereFrostAtFlowering</EventName>
      </ui>
    </manager>
    <manager name="Create a yes-no variable when within x TT of start of a crop stage">
      <script>
        <text><![CDATA[
            if (StageName = '[StageName]') then
               TTFromStart[StageName] = TTFromStart[StageName] + TT
               [OutputVariableName] = 'yes'
               if (TTFromStart[StageName] > [TT]) then
                  [OutputVariableName] = 'no'
               endif
            else
               TTFromStart[StageName] = 0
               [OutputVariableName] = 'no'
            endif ]]></text>
        <event>post</event>
      </script>
      <ui>
        <category type="category" description="Properties" />
        <StageName type="text" description="Crop stage name (e.g. start_grain_fill) : ">start_grain_fill</StageName>
        <TT type="text" description="Thermal time threshold : ">150</TT>
        <category type="category" description="Output variable properties" />
        <OutputVariableName type="text" description="Name of output variable to hold yes/no flag : ">InHeatShockWindow</OutputVariableName>
      </ui>
    </manager>
    <manager name="Establish Bambatsi pasture">
      <ui>
        <category description="Sowing criteria" type="category" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">1-sep</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">31-dec</date2>
        <raincrit type="text" description="Amount of rainfall : ">15</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <category description="Sowing parameters" type="category" />
        <crop type="crop" description="Enter name of growth module to sow : ">bambatsi</crop>
        <density type="text" description="Enter sowing density  (plants/ha) : ">100</density>
      </ui>
      <script name="init">
        <text>
  bambatsi_in = 0
            </text>
        <event>init</event>
      </script>
      <script name="start_of_day">
        <text><![CDATA[
    if (date_within('[date1], [date2]') = 1) and bambatsi_in = 0 then
        if (rain[[rainnumdays]] >= [raincrit] then
               [crop]  establish plants =[density], init_section = seedling
        bambatsi_in = 1
        endif
   endif
            ]]></text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Manage Bambatsi">
      <ui>
        <category description="Cutting criteria" type="category" />
        <hmass type="text" description="Enter critical biomass for harvest (kg/ha) : ">2000</hmass>
        <category description="Cutting parameters" type="category" />
        <crop type="crop" description="Enter name of growth module to cut : ">bambatsi</crop>
        <ffraction type="text" description="Enter fraction of foliage removed  (0-1) : ">0.9</ffraction>
        <sfraction type="text" description="Enter fraction of stem removed  (0-1) : ">0.9</sfraction>
      </ui>
      <script name="start_of_day">
        <text><![CDATA[
         if ([crop].biomass > [hmass] and bambatsi_in = 1 then
               [crop]  cut foliage_remove_fr = [ffraction], adm_remove_fr = [sfraction]
         endif
            ]]></text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Canola Oil Conc Calculator">
      <script>
        <event>script</event>
        <text><![CDATA[start_of_day
         if (DaysAfterSowing = 1) then
            cum_temp = 0
            cum_swdef = 0
            cum_days = 0
         elseif (StageName = 'start_grain_fill' or
                       StageName = 'end_grain_fill' or
                       StageName = 'maturity' or
                       StageName = 'harvest_ripe') then
            cum_temp = cum_temp + (maxt + mint) / 2
            cum_swdef = cum_swdef + swdef_photo
            cum_days = cum_days + 1
         endif

         ! calculate canola oil content
         if (cum_days > 0) then
            avg_temp = cum_temp / cum_days
            avg_swdef = cum_swdef / cum_days
            if (avg_temp <= 14) then
               oil_conc =  47
            else
               oil_conc = (47 - ((avg_temp - 14)*1.21)) - (1.91*(1 - avg_swdef^2))
            endif
         else
            oil_conc = 0
         endif
      ]]></text>
      </script>
    </manager>
    <manager name="Residue percipitation interception">
      <script>
        <text>!initialise variables

precip = 0
Maximum_interception = 0
Residue_water = 0
Interception_today = 0
Evaporated_interception = 0
</text>
        <event>init</event>
      </script>
      <script>
        <text>!Set interception variables
     
precip = rain + irrigation.irrigation 
Maximum_interception = 0.0002 * surfaceom_wt
            
! Determine the amount of water intercepted by residue today

if (precip * surfaceom_cover) &gt;= (Maximum_interception - Residue_water) then
   Interception_today = (Maximum_interception - Residue_water)
else
   Interception_today = (precip * surfaceom_cover) 
endif 

! Send message to soil module to take interception out of water balance
    
residueinterception = Interception_today
            
! Add intercepted water into residual water pool

Residue_water = Residue_water + Interception_today


! The remainder of the residue interception/evaporation procedure is on the end_of_day tab
            
</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>! calculate the amount of water that is going to evaporate from the residue water pool

if Residue_water &gt; eo then
   Evaporated_interception = eo
else
   Evaporated_interception = Residue_water
endif

! remove evaporation from residue water pool               

Residue_water = Residue_water - Evaporated_interception</text>
        <event>end_of_day</event>
      </script>
    </manager>
  </folder>
  <folder name="Manager.NET (common tasks)">
    <manager2 name="Plant1 Defoliation Rule">
      <ui>
        <DefoliationDateString type="text" description="Date of defoliation">05/9/1998</DefoliationDateString>
        <ResidualStem type="text" description="Amount of stem remaining after defoliation (g/m2)">10</ResidualStem>
        <ResidualLeaf type="text" description="Amount of leaf remaining after defoliation (g/m2)">10</ResidualLeaf>
        <Crop2Defoliate type="crop" description="Name of crop to defoliate (must be a Plant1 crop)">wheat</Crop2Defoliate>
      </ui>
      <text>
   using System;
   using ModelFramework;

   public class Script 
      {
      [Param()] private string DefoliationDateString;
      [Param()] private double ResidualStem;
      [Param()] private double ResidualLeaf;
      [Param()] private string Crop2Defoliate;
      
      [Link()]
      public Paddock MyPaddock;
      [Input()] private DateTime Today;
      
      private double GreenLeaf = 0.0;
      private double GreenStem = 0.0;
      private double dlt_GreenLeaf = 0.0;
      private double dlt_GreenStem = 0.0;
      private double Grazed = 0.0;
      
      [Output()]
      private DateTime DefoliationDate;
      
      [EventHandler] public void OnInitialised()
      {
         DefoliationDate = DateTime.ParseExact(DefoliationDateString, "d/M/yyyy", null);
      }
         
      [EventHandler] public void OnPrepare()
      {
         if ((Today &gt;= DefoliationDate) &amp;&amp; (Grazed == 0))   
            {
               Grazed = 1;
               MyPaddock.Get(Crop2Defoliate + ".leafgreenwt", out GreenLeaf);
               MyPaddock.Get(Crop2Defoliate + ".stemgreenwt", out GreenStem);

               dlt_GreenLeaf = Math.Max(0, GreenLeaf - ResidualLeaf);
               dlt_GreenStem = Math.Max(0, GreenStem - ResidualStem);
    
               RemoveCropBiomassdmType GreenRemoveCropDmDm = new RemoveCropBiomassdmType();
            
               GreenRemoveCropDmDm.pool = "green";
               GreenRemoveCropDmDm.part = new string[]
                  {"leaf","stem"};
               GreenRemoveCropDmDm.dlt = new double[] 
                  {dlt_GreenLeaf, dlt_GreenStem};
            
               RemoveCropBiomassType MyRemoveCropDM = new RemoveCropBiomassType();
           
               MyRemoveCropDM.dm = new RemoveCropBiomassdmType[] { GreenRemoveCropDmDm };
            
               MyPaddock.Publish(Crop2Defoliate + ".remove_crop_biomass", MyRemoveCropDM);
            
            Console.WriteLine(Today.ToShortDateString() + " - " + "Plant1 Defoliation Rule Invoked");
            Console.WriteLine("          - " + Crop2Defoliate + " has been defoliated");
            Console.WriteLine("          - Removed " + dlt_GreenLeaf + " g/m2 of Leaf");
            Console.WriteLine("          - Removed " + dlt_GreenStem + " g/m2 of Stem");
            Console.WriteLine(" ");
            }
      }
   }
         </text>
    </manager2>
    <manager2 name="FertiliseOnFixedDates">
      <ui>
        <category type="category" description="Fertiliser will be applied on the date(s) below" />
        <SameDays type="yesno" description="Apply fertiliser on the same day(s) each year? (yes/no) - if &quot;no&quot; then must include the year of application below">yes</SameDays>
        <FertDatesStr type="text" description="Dates for one or more fertiliser applications (dd-mmm or dd-mmm-yyyy) as a list with a space between dates">5-jan 10-jan 15-jan 2-jan</FertDatesStr>
        <category type="category" description="Test for the mineral N in the soil and don't apply the fertiliser if greater than X kgN/ha is stored in the soil above a depth of Y mm" />
        <UseSoilN type="yesno" description="Use a critical soil mineral N to prevent application above a threshold? (yes/no)">yes</UseSoilN>
        <FertAmtCriteria type="text" description="Don't add fertiliser if N in the soil to the depth below exceeds (kg/ha) ">50</FertAmtCriteria>
        <FertDepthCriteria type="text" description="Depth to which the amount of N in the soil should be calculated (mm)">75</FertDepthCriteria>
        <category type="category" description="Fertiliser application details" />
        <FertDepth type="text" description="Depth at which to apply the fertiliser (mm)">50</FertDepth>
        <FertAmt type="text" description="Annual fertiliser addition (kg N /ha) - assumes an even split between applications (if more than one application date)">250</FertAmt>
        <FertType type="list" listvalues="no3_n,nh4_n,nh4no3,urea_n,urea_no3,urea,nh4so4_n,rock_p,banded_p,broadcast_p" description="Fertiliser type - select from the list">urea_n</FertType>
      </ui>
      <text>Imports System
Imports ModelFramework

Public Class Script 
   &lt;Link()&gt; Dim MyPaddock As Paddock
   &lt;Link()&gt; Dim Fert As Fertiliser
   
   'Parameters - user inputs from the Properties tab
   &lt;Param&gt; Private FertDatesStr() As String     'The array of fertiliser "dates" as a atring array of dd-mmm's 
   &lt;Param&gt; Private SameDays As String           'Yes/No as to whether the fertiliser should be applied every year - if no then will only be on the dd-mmm-yyyy in FertDates
   &lt;Param&gt; Private UseSoilN As String           'Yes/No as to whether to use the soil mineral N stored to further control the fertiliser application
   &lt;Param&gt; Private FertAmtCriteria As Single    'Don't apply fertiliser if the N stored in the soil is greater than this.  Disregard the test if the value is -ve
   &lt;Param&gt; Private FertDepthCriteria As Single  'Depth in the soil to calculate the N storage
   &lt;Param&gt; Private FertDepth As Single          'Depth in the soil that the fertilser will be applied
   &lt;Param&gt; Private FertAmt As Single            'Total annual application - needs to be split up between the various application dates listed
   &lt;Param&gt; Private FertType As String           'Type of fertliser to apply
   
   'Inputs - got by this Manager from elsewhere in APSIM
   &lt;Input&gt; Private Today As DateTime            'Today's date from APSIM 
   &lt;Input&gt; Private dlayer As Single()           'Array of soil layer thicknesses - for calculation of mineral N in the soil
   &lt;Input&gt; Private no3 As Single()              'Array of nitrate-N (kg N /ha) for each soil layer - for calculation of mineral N in the soil
   &lt;Input&gt; Private nh4 As Single()              'Array of ammonium-N (kg N /ha) for each soil layer - for calculation of mineral N in the soil
   &lt;Input&gt; Private urea As Single()             'Array of urea-N (kg N /ha) for each soil layer - for calculation of mineral N in the soil

   'Outputs - calculated by this Manager and available to be output by the user
   &lt;Output&gt; Private Add_fert As Boolean         'Test to see if Today is a day that fertiliser should be added
   &lt;Output&gt; Private FertCriteriaOK As Boolean   'Test to see if the criteria related to the amount of mineral N in the soil is satisfied
   &lt;Output&gt; Private CumSoilN As Single          'Mineral-N stored in the soil to a depth of FertDepthCriteria

   'Other variables that are calculated but not needed for outputs
   Private FertDates As Date()                  'Array to hold the application dates once converted to dates from the string
   Private LayerWeights As Single()             'Weigthing of each layer for FertAmtCriteria calculation


   &lt;EventHandler()&gt; Public Sub OnInit2()
      '"OnInit2" is an event handler gets called once at the start of the simulation 
      
      'Get the right length for the array of dates and then convert the strings of dd-mmm into proper dates - VB will assume the current year if it is not already supplied
      ReDim FertDates(FertDatesStr.length - 1)
      For i As Integer = 0 To FertDatesStr.Length - 1
         FertDates(i) = Date.Parse(FertDatesStr(i))
      Next

      'Calculate the application amount per application (user input was the total annaul application)
      FertAmt = FertAmt / FertDatesStr.length

   End Sub
   
   &lt;EventHandler()&gt; Public Sub OnPrepare()
      '"OnPrepare" is an event handler gets called once at the start of every day (before Prepare and Post) 
      
      'By default no fertiliser added today
      'Run through all the dates and see if any of the dd-mmm's match those for Today, if so then will add fertiliser provided that other criteria are met
      'If the use has selected "no" to applying on the same dates each year then also test for the current year
      Add_Fert = False                                                                     
      For i As Integer = 0 To FertDates.length - 1
         If SameDays.ToLower = "yes" Then
            If (FertDates(i).Day = Today.Day) And (FertDates(i).Month = Today.Month) Then
               Add_Fert = True
            End If         
         Else
            If (FertDates(i).Day = Today.Day) And (FertDates(i).Month = Today.Month) And (FertDates(i).Year = Today.Year) Then
               Add_Fert = True
            End If         
         End If
      Next
      
      'If the user has decided not to user a soil minerla N criteria then FertCriteriaOK is always true
      If UseSoilN.ToLower = "no" Then
         FertCriteriaOK = True
      Else
         CumSoilN = 0.0
         FertCriteriaOK = False

         'Set the number of elements in the LayerWeights array to equal the number of soil layers - do this here because erosion can change the layering
         'Then move through the array and assign a LayerWeighting from 0 to 1 quantifying what proportion of the soil and mineral N in this layer is above FertDepthCriteria
         ReDim LayerWeights(dlayer.length - 1)                
         Dim CumDepth As Single = 0.0
         For i As Integer = 0 To dlayer.Length - 1     
            CumDepth += dlayer(i)                      
            If CumDepth &lt;= FertDepthCriteria Then
               LayerWeights(i) = 1.0                   
            ElseIf (CumDepth - dlayer(i)) &lt;= FertDepthCriteria Then
               LayerWeights(i) = (FertDepthCriteria - (CumDepth - dlayer(i))) / dlayer(i)
            Else
               LayerWeights(i) = 0.0
            End If
         Next

         'Add up the no3, nh4 and urea (all already in kg N /ha) in each layer and multiply by the layer weighting to get the total mineral N to the set depth
         For i As Integer = 0 To dlayer.Length - 1     
            CumSoilN += (no3(i) + nh4(i) + urea(i)) * LayerWeights(i)                         
         Next

         'If there is less mineral N in the soil than FertAmtCriteria then it is OK to add fertiliser
         If CumSoilN &lt;= FertAmtCriteria Then
            FertCriteriaOK = True                             
         End If
      End If

      'Only add the fertiliser if both conditions are true
      '"Fert.Apply" send the command to apply the specified amount of fertiliser at the specified depth of the specified type of fertiliser
      If Add_Fert And FertCriteriaOK Then
         Fert.Apply(FertAmt, FertDepth, FertType)
      End If
      
   End Sub

End Class
</text>
    </manager2>
    <manager2 name="FertOnSoilNCriteria">
      <ui>
        <category type="category" description="Test for the mineral N in the soil and don't apply the fertiliser if greater than X kgN/ha is stored in the soil above a depth of Y mm" />
        <FertAmtCriteria type="text" description="Don't add fertiliser if N in the soil to the depth below exceeds (kg/ha) ">50</FertAmtCriteria>
        <FertDepthCriteria type="text" description="Depth to which the amount of N in the soil should be calculated (mm)">75</FertDepthCriteria>
        <category type="category" description="Fertiliser application details" />
        <FertDepth type="text" description="Depth at which to apply the fertiliser (mm)">50</FertDepth>
        <FertAmt type="text" description="Amount of fertiliser to add (kg N /ha)">25</FertAmt>
        <FertType type="list" listvalues="no3_n,nh4_n,nh4no3,urea_n,urea_no3,urea,nh4so4_n,rock_p,banded_p,broadcast_p" description="Fertiliser type - select from the list">urea_n</FertType>
      </ui>
      <text>Imports System
Imports ModelFramework

Public Class Script 
   &lt;Link()&gt; Dim MyPaddock As Paddock
   &lt;Link()&gt; Dim Fert As Fertiliser
   
   'Parameters - user inputs from the Properties tab
   &lt;Param&gt; Private FertAmtCriteria As Single    'Don't apply fertiliser if the N stored in the soil is greater than this.  Disregard the test if the value is -ve
   &lt;Param&gt; Private FertDepthCriteria As Single  'Depth in the soil to calculate the N storage
   &lt;Param&gt; Private FertDepth As Single          'Depth in the soil that the fertilser will be applied
   &lt;Param&gt; Private FertAmt As Single            'Total annual application - needs to be split up between the various application dates listed
   &lt;Param&gt; Private FertType As String           'Type of fertliser to apply
   
   'Inputs - got by this Manager from elsewhere in APSIM
   &lt;Input&gt; Private Today As DateTime            'Today's date from APSIM 
   &lt;Input&gt; Private dlayer As Single()           'Array of soil layer thicknesses - for calculation of mineral N in the soil
   &lt;Input&gt; Private no3 As Single()              'Array of nitrate-N (kg N /ha) for each soil layer - for calculation of mineral N in the soil
   &lt;Input&gt; Private nh4 As Single()              'Array of ammonium-N (kg N /ha) for each soil layer - for calculation of mineral N in the soil
   &lt;Input&gt; Private urea As Single()             'Array of urea-N (kg N /ha) for each soil layer - for calculation of mineral N in the soil

   'Outputs - calculated by this Manager and available to be output by the user
   &lt;Output&gt; Private CumSoilN As Single          'Mineral-N stored in the soil to a depth of FertDepthCriteria

   'Other variables that are calculated but not needed for outputs
   Private LayerWeights As Single()             'Weigthing of each layer for FertAmtCriteria calculation


   &lt;EventHandler()&gt; Public Sub OnInit2()
      '"OnInit2" is an event handler gets called once at the start of the simulation 

      'nothing to do in here

   End Sub
   
   &lt;EventHandler()&gt; Public Sub OnPrepare()
      '"OnPrepare" is an event handler gets called once at the start of every day (before Prepare and Post) 
      
      'Set the number of elements in the LayerWeights array to equal the number of soil layers - do this here because erosion can change the layering
      'Then move through the array and assign a LayerWeighting from 0 to 1 quantifying what proportion of the soil and mineral N in this layer is above FertDepthCriteria
      ReDim LayerWeights(dlayer.length - 1)                
      Dim CumDepth As Single = 0.0
         For i As Integer = 0 To dlayer.Length - 1     
            CumDepth += dlayer(i)                      
         If CumDepth &lt;= FertDepthCriteria Then
            LayerWeights(i) = 1.0                   
         ElseIf (CumDepth - dlayer(i)) &lt;= FertDepthCriteria Then
            LayerWeights(i) = (FertDepthCriteria - (CumDepth - dlayer(i))) / dlayer(i)
         Else
            LayerWeights(i) = 0.0
         End If
      Next

      'Add up the no3, nh4 and urea (all already in kg N /ha) in each layer and multiply by the layer weighting to get the total mineral N to the set depth
      CumSoilN = 0.0
      For i As Integer = 0 To dlayer.Length - 1     
         CumSoilN += (no3(i) + nh4(i) + urea(i)) * LayerWeights(i)                         
      Next

      'If there is less mineral N in the soil than FertAmtCriteria then it is OK to add fertiliser
      '"Fert.Apply" send the command to apply the specified amount of fertiliser at the specified depth of the specified type of fertiliser
      If CumSoilN &lt;= FertAmtCriteria Then
         Fert.Apply(FertAmt, FertDepth, FertType)
      End If

   End Sub

End Class
</text>
    </manager2>
    <manager2 name="FertOnEvent">
      <ui>
        <category type="category" description="Test for the mineral N in the soil and don't apply the fertiliser if greater than X kgN/ha is stored in the soil above a depth of Y mm" />
        <ModuleName type="modulename" description="On which module should the event come from : ">wheat1</ModuleName>
        <EventName type="text" description="On which event should fertiliser be applied : (see the list by module in Reporting Frequency for possible events)">sowing</EventName>
        <Days2Wait type="text" description="Number of days to wait after the event happens before the fertiliser is applied">3</Days2Wait>
        <category type="category" description="Test for the mineral N in the soil and don't apply the fertiliser if greater than X kgN/ha is stored in the soil above a depth of Y mm" />
        <FertAmtCriteria type="text" description="Don't add fertiliser if N in the soil to the depth below exceeds (kg/ha)  (insert a large value to avoid this test)">50</FertAmtCriteria>
        <FertDepthCriteria type="text" description="Depth to which the amount of N in the soil should be calculated (mm)">300</FertDepthCriteria>
        <category type="category" description="Fertiliser application details" />
        <FertDepth type="text" description="Depth at which to apply the fertiliser (mm)">50</FertDepth>
        <FertAmt type="text" description="Amount of fertiliser to add (kg N /ha)">25</FertAmt>
        <FertType type="list" listvalues="no3_n,nh4_n,nh4no3,urea_n,urea_no3,urea,nh4so4_n,rock_p,banded_p,broadcast_p" description="Fertiliser type - select from the list">urea_n</FertType>
      </ui>
      <text>Imports System
Imports ModelFramework

Public Class Script 
   &lt;Link()&gt; Dim MyPaddock As Paddock
   &lt;Link()&gt; Dim Fert As Fertiliser
   
   'Parameters - user inputs from the Properties tab
   
   &lt;Param&gt; Private ModuleName As String         'Module that sends the even that will be used in the decision
   &lt;Param&gt; Private EventName As String          'The name of the event (e.g. "sowing", "irrigated") to control the fertiliser decision
   &lt;Param&gt; Private Days2Wait As Integer         'Wait this many days after the event before applying the fertiliser
   
   &lt;Param&gt; Private FertAmtCriteria As Single    'Don't apply fertiliser if the N stored in the soil is greater than this.  Disregard the test if the value is -ve
   &lt;Param&gt; Private FertDepthCriteria As Single  'Depth in the soil to calculate the N storage

   &lt;Param&gt; Private FertDepth As Single          'Depth in the soil that the fertilser will be applied
   &lt;Param&gt; Private FertAmt As Single            'Total annual application - needs to be split up between the various application dates listed
   &lt;Param&gt; Private FertType As String           'Type of fertliser to apply
   
   'Inputs - got by this Manager from elsewhere in APSIM
   &lt;Input&gt; Private Today As DateTime            'Today's date from APSIM 
   &lt;Input&gt; Private dlayer As Single()           'Array of soil layer thicknesses - for calculation of mineral N in the soil
   &lt;Input&gt; Private no3 As Single()              'Array of nitrate-N (kg N /ha) for each soil layer - for calculation of mineral N in the soil
   &lt;Input&gt; Private nh4 As Single()              'Array of ammonium-N (kg N /ha) for each soil layer - for calculation of mineral N in the soil
   &lt;Input&gt; Private urea As Single()             'Array of urea-N (kg N /ha) for each soil layer - for calculation of mineral N in the soil

   'Outputs - calculated by this Manager and available to be output by the user
   &lt;Output&gt; Private CumSoilN As Single          'Mineral-N stored in the soil to a depth of FertDepthCriteria

   'Other variables that are calculated but not needed for outputs
   Private LayerWeights As Single()             'Weigthing of each layer for FertAmtCriteria calculation
   Private CountingTheDays As Integer           'Variable to count the days from the event to the fertiliser application
   Private DoFert As Boolean                    'Variable to help with the fertiliser application decision


   &lt;EventHandler()&gt; Public Sub OnInit2()
      '"OnInit2" is an event handler gets called once at the start of the simulation 

      'Initialise the variables for the delay between the event and the actual application
      CountingTheDays = 0
      DoFert = False

   End Sub
   
   &lt;EventHandler("[ModuleName].[EventName]")&gt; Public Sub TriggerApplyMyFertiliser() 
      'This subroutine will be called when [ModuleName].[EventName] is fired
      
      'Initialise the counter between the event and the fertiliser application.  The actual fertiliser aplication is done in the ApplyMyFertiliser subroutine
      CountingTheDays = 1
      DoFert = True
      
      'if there is to be no delay between the event and the fertiliser application then just go  do it now (don't wait for a Prepare stage which might not be until tomorrow)
      'reset the DoFert because now the fertiliser has been applied (nothing in the queue anymore)
      If Days2Wait = 0 Then
         ApplyMyFertiliser
         DoFert = False
      End If
      
   End Sub

   &lt;EventHandler()&gt; Public Sub OnPrepare()
      '"OnPrepare" is an event handler gets called once at the start of every day (before Prepare and Post) 

      'Increment the counter once per day if are in that delay stage between the event and the application
      'If the delay period is over then go to the subroutine for the fertiliser application and reset DoFert
      If DoFert Then
         CountingTheDays += 1
         If CountingTheDays &gt;= Days2Wait Then
            ApplyMyFertiliser
            DoFert = False
         End If
      End If

   End Sub

   &lt;EventHandler()&gt; Public Sub ApplyMyFertiliser()
      'This subroutine sends Fertiliser the command to apply the fertiliser 
      
      'Set the number of elements in the LayerWeights array to equal the number of soil layers - do this here because erosion can change the layering
      'Then move through the array and assign a LayerWeighting from 0 to 1 quantifying what proportion of the soil and mineral N in this layer is above FertDepthCriteria
      ReDim LayerWeights(dlayer.length - 1)                
      Dim CumDepth As Single = 0.0
         For i As Integer = 0 To dlayer.Length - 1     
            CumDepth += dlayer(i)                      
         If CumDepth &lt;= FertDepthCriteria Then
            LayerWeights(i) = 1.0                   
         ElseIf (CumDepth - dlayer(i)) &lt;= FertDepthCriteria Then
            LayerWeights(i) = (FertDepthCriteria - (CumDepth - dlayer(i))) / dlayer(i)
         Else
            LayerWeights(i) = 0.0
         End If
      Next

      'Add up the no3, nh4 and urea (all already in kg N /ha) in each layer and multiply by the layer weighting to get the total mineral N to the set depth
      CumSoilN = 0.0
      For i As Integer = 0 To dlayer.Length - 1     
         CumSoilN += (no3(i) + nh4(i) + urea(i)) * LayerWeights(i)                         
      Next

      'If there is less mineral N in the soil than FertAmtCriteria then it is OK to add fertiliser
      '"Fert.Apply" send the command to apply the specified amount of fertiliser at the specified depth of the specified type of fertiliser
      If CumSoilN &lt;= FertAmtCriteria Then
         Fert.Apply(FertAmt, FertDepth, FertType)
      End If

   End Sub

End Class
</text>
    </manager2>
<manager2 name="Irrigate on sw deficit">
<ui>
<deficit type="text" description="Irrigate when soil water deficit reaches this amount (mm)">10</deficit>
<eff type="text" description="Irrigation efficiency (0-1)">1.0</eff>
<start type="text" description="The earliest date irrigation will be applied (dd-mmm)">1-jan</start>
<end type="text" description="The latest date irrigation will be applied (dd-mmm)">31-dec</end>
<maxlayer type="text" description="The deficit will be calculated to this soil layer (0 for full profile)">0</maxlayer>
<amount type="text" description="Amount of irrigation to apply (0 for deficit)">0</amount>
</ui>
<text>using System;
using ModelFramework;
using CSGeneral;

public class Script 
{      
   [Link] Irrigation Irrigation; 
   [Input] DateTime today;
   [Input] double[] dul_dep;     //drained upper limit (field capacity) 
   [Input] double[] sw_dep;      //soil water
   [Input] double[] ll15_dep;    //15 bar lower limit
   [Param] int deficit;          //allowable soil water deficit
   [Param] double eff;           //irrigation efficiency
   [Param] string start;         //no irrigation will be applied before this date
   [Param] string end;           //no irrigation will be applied after this date
   [Param] int maxlayer;         //calculate soil water deficit to this layer (inclusive)
   [Param] int amount;
   [Output] double totalSWD;     //total soil water deficit for given layers
   
   private double[] DulDep;
   private double[] SwDep;
   private double[] LL15Dep;
   private double[] SWD;
   
   [EventHandler] public void OnInitialised()
   {
      DulDep = new double[dul_dep.Length];
      SwDep = new double[dul_dep.Length];
      LL15Dep = new double[dul_dep.Length];
      SWD = new double[dul_dep.Length];
      
      if (maxlayer &gt; dul_dep.Length)
      {
         Console.WriteLine("Warning: max layer is greater than number of layers.");
         Console.WriteLine("Using full profile for soil water deficit calculations.");
         maxlayer = 0;
      }
   }
     
   // The following event handler will be called each day at the beginning of the day
   [EventHandler] public void OnPrepare()
   {
      for (int i = 0; i &lt; (maxlayer &gt; 0 ? maxlayer : dul_dep.Length); i++)
      {
         SWD[i] = dul_dep[i] - sw_dep[i];
      }
      totalSWD = MathUtility.Sum(SWD);
      
      //if the soil water deficit is higer than the allowed deficit, and today is within the irrigation window
      if (totalSWD &gt; deficit &amp;&amp; DateUtility.WithinDates(start, today, end))
      {
         IrrigationApplicationType data = new IrrigationApplicationType(); //using a type means we can use defaults for values we don't change
         data.Amount = amount == 0 ? deficit : amount;
         Irrigation.Set("irrigation_efficiency", eff);
         Irrigation.Apply(data);
      }
   }  
}
       </text></manager2>
<manager2 name="Furrow irrigation">
	<ui>
		<asw_depth type="text" description="Number of soil layers used in calculating SW deficit">6</asw_depth>
		<crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">.7</crit_fr_asw>
		<start type="text" description="The earliest date irrigation will be applied (dd-mmm)">1-jan</start>
		<end type="text" description="The latest date irrigation will be applied (dd-mmm)">31-dec</end>
	</ui>
	<text>// Applies irrigation into the second soil layer after a crop has been sown(lateral inflow from furrow into adjacent beds)
// Irrigation is applied on a deficit defined by the number of soil layers (depth) and a deficit value [0-1]
// Water is inserted lateral using "inflow" as would be expected under furrow irrigation of a crop on raised beds
// Water applied is not reported as irrigation and requires a local variable to track applied irrigation
// Local variable returned and available for reporting is: applied_furrow_irrigation

using System;
using ModelFramework;
using CSGeneral;

public class Script 
{      
   [Link] Irrigation Irrigation; 
   [Input] DateTime today;
   [Input] double[] dul_dep;     //drained upper limit (field capacity) 
   [Input] double[] sw_dep;      //soil water
   [Input] double[] ll15_dep;    //15 bar lower limit
   [Input] int DaysAfterSowing;  // Days after sowing used as a trigger to start irrigation


   [Param] int asw_depth;        //available soilwater depth
   [Param] double crit_fr_asw;   //critical fraction of available soilwater before applying irrigation

   [Param] string start;         //no irrigation will be applied before this date
   [Param] string end;           //no irrigation will be applied after this date

   [Output] double[] inflow_lat;
   [Output] double applied_furrow_irrigation;

   // The following event handler will be called only once
   [EventHandler] public void OnInitialised()
   {
      inflow_lat = new double[dul_dep.Length];
      for(int i = 0; i &lt; dul_dep.Length; i++)
      {
         inflow_lat[i] = 0;
      }      
   }
   // The following event handler will be called each day at the end of the day
   [EventHandler] public void OnPost()
   {
      double SW_now = 0;
      double CLL_now = 0;
      double SW_full = 0;
      double[] SW_add = new double[dul_dep.Length];

      for(int i = 0; i &lt; asw_depth; i++)
      {
         SW_now = SW_now + sw_dep[i];
         CLL_now = CLL_now + ll15_dep[i];
         SW_full = SW_full + (dul_dep[i] - ll15_dep[i]);
         SW_add[i] = dul_dep[i] - sw_dep[i];
      }

      //if the soil water deficit is greater than the critical SW fraction and today is within the irrigation window
         if ((SW_now - CLL_now) &lt;= (SW_full * crit_fr_asw) &amp;&amp; DaysAfterSowing &gt; 0 &amp;&amp; DateUtility.WithinDates(start, today, end))

      {
         for(int i = 1; i &lt; asw_depth; i++)
         {
            inflow_lat[i] = SW_add[i] + (SW_add[0] / (asw_depth - 1));
            applied_furrow_irrigation = applied_furrow_irrigation + inflow_lat[i];
      }
      }
      else
      {
         for(int i = 0; i &lt; dul_dep.Length; i++)
         {
            inflow_lat[i] = 0;
            applied_furrow_irrigation = 0;
         }  
      }
   }  
}
	</text>
</manager2>	   
	   <manager2 name="Irrigate on event">
      <ui>
        <amount type="text" description="Amount of irrigation to apply (mm)">50</amount>
        <eff type="text" description="Irrigation efficiency (0-1)">1.0</eff>
        <tag type="category" description="Event details" />
        <ModuleName type="modulename" description="On which module should the event come from: ">wheat</ModuleName>
        <EventName type="text" description="On which event should irrigation be applied(see the list by module in Reporting Frequency for possible events):">sowing</EventName>
      </ui>
      <text>using System;
using ModelFramework;

public class Script 
{      
   [Link] Irrigation Irrigation; 
   [Param] string ModuleName;    //the module that the event will come from
   [Param] string EventName;     //the event to look for
   [Param] double amount;        //amount of irrigation to apply (mm)
   [Param] double eff;           //irrigation efficiency
     
   // The following event handler will be called each day at the end of the day
   //[ModuleName] and [EventName] will be replaced by the values in the properties window before the script is run
   [EventHandler("[ModuleName].[EventName]")] public void Irrigate()
   {
      IrrigationApplicationType data = new IrrigationApplicationType();
      data.Amount = (int)amount;
      Irrigation.Set("irrigation_efficiency", eff);
      Irrigation.Apply(data);
      Console.WriteLine("Irrigating with " + amount + "mm due to " + ModuleName + "." + EventName + " event."); //write the event to the summary file
   }  
}
       </text>
    </manager2>
    <manager2 name="Irrigate on date">
      <ui>
        <category type="category" description="Irrigation will be applied on the date(s) below" />
        <sameDays type="yesno" description="Apply Irrigation on the same day(s) each year? (yes/no) - if &quot;no&quot; then must include the year of application below">yes</sameDays>
        <irrigDatesStr type="text" description="Dates for one or more Irrigation applications (dd-mmm or dd-mmm-yyyy) as a list with a space between dates">01-jan 01-jul</irrigDatesStr>
        <category type="category" description="Irrigation parameters" />
        <amount type="text" description="Amount of irrigation to apply (mm)">50</amount>
        <eff description="Irrigation efficiency (0-1)">1.0</eff>
      </ui>
      <text>using System;
using ModelFramework;
using CSGeneral;

public class Script 
{      
   [Link] Irrigation Irrigation; 
   [Input] DateTime today;
   [Param] string[] irrigDatesStr;  //a string array holding the dates as text
   [Param] string sameDays;         //if yes, we ignore the year component
   [Param] float amount;           //amount of irrigation to apply (mm)
   [Param] float eff;              //irrigation efficiency
   
   private DateTime[] irrigDates;   //an array to hold the converted dates
   private bool irrigToday = false; //a variable to hold whether or not we irrigate today
   
   [EventHandler] public void OnInitialised()
   {
      //convert the date strings to APSIM dates
      irrigDates = new DateTime[irrigDatesStr.Length];
      for (int i = 0; i &lt; irrigDates.Length ; i++)
         irrigDates[i] = DateUtility.GetDate(irrigDatesStr[i]);
   }
          
   // The following event handler will be called each day at the start of the day
   [EventHandler] public void OnPrepare()
   {
      irrigToday = false;
      
      //for every date in our date array
      foreach (DateTime day in irrigDates)
      {
         if (sameDays.ToLower().Equals("yes")&amp;&amp; day.Day.Equals(today.Day) &amp;&amp; day.Month.Equals(today.Month))
            irrigToday = true; 
         else if (day.Day.Equals(today.Day) &amp;&amp; day.Month.Equals(today.Month) &amp;&amp; day.Year.Equals(today.Year))
            irrigToday = true;   
      }
      
         if (irrigToday)
         {
            IrrigationApplicationType data = new IrrigationApplicationType();
            data.Amount = amount;
            Irrigation.Set("irrigation_efficiency", eff);
            Irrigation.Apply(data);
         }
   }  
}
       </text>
    </manager2>
<manager2 name="Irrigate based on rainfall"><ui><category type="category" description="When should irrigation be applied" /><pastDays type="text" description="If rainfall over the past number of days">7</pastDays><amount type="text" description="Is less than (mm)">10</amount><apply type="text" description="Apply mm of irrigation">5</apply><eff type="text" description="Irrigation efficiency (0-1) : ">1</eff><wait type="text" description="Do not attempt to apply irrigation again until this many days have passed.">7</wait><start type="text" description="The earliest date irrigation will be applied (dd-mmm)">1-jan</start><end type="text" description="The latest date irrigation will be applied (dd-mmm)">31-dec</end></ui><text>using System;
using ModelFramework;
using System.Collections.Generic;
using CSGeneral;

public class Script 
{      
   [Link] Irrigation Irrigation; 
   [Input] DateTime today;
   [Input] double rain;
   [Param] int pastDays;         //check for rain over this period
   [Param] int wait;             //only consider irrigating if this many days have passed since last irrigation
   [Param] float amount;         //amount of rain
   [Param] float eff;            //irrigation efficiency
   [Param] string start;         //no irrigation will be applied before this date
   [Param] string end;           //no irrigation will be applied after this date
   [Param] float apply;          //apply mm of irrigation        
   [Output] double sum;

   private int dai = 0; //days after irrigation, set up a counter  
   private List&lt;double&gt; tracker = new List&lt;double&gt;();
   
   [EventHandler] public void OnPost()
   {
      tracker.Add(rain);
      if (tracker.Count &gt; pastDays)
         tracker.RemoveAt(0);
      
      sum = 0;
      
      foreach(double d in tracker)
      {
         sum += d;
      }
      if (dai &gt; wait &amp;&amp; sum &lt; amount &amp;&amp; DateUtility.WithinDates(start, today, end))
         {
            IrrigationApplicationType data = new IrrigationApplicationType();
            data.Amount = apply;
            Irrigation.Set("irrigation_efficiency", eff);
            Irrigation.Apply(data);
            dai = 0; //reset the counter
         }
      dai++; //increase the counter by one
   }  
}
       </text></manager2>    <manager2 name="Irrigate at start of week">
      <ui>
        <category type="category" description="Irrigation parameters" />
        <amount type="text" description="Amount of irrigation to apply (mm)">50</amount>
        <eff type="text" description="Irrigation efficiency (0-1)">1.0</eff>
        <start type="text" description="The earliest date irrigation will be applied (dd-mmm)">1-jan</start>
        <end type="text" description="The latest date irrigation will be applied (dd-mmm)">31-dec</end>
      </ui>
      <text>using System;
using ModelFramework;
using CSGeneral;

public class Script 
{      
   [Link] Irrigation Irrigation; 
   [Input] DateTime today;
   [Param] float amount;         //amount of irrigation to apply (mm)
   [Param] float eff;            //irrigation efficiency
   [Param] string start;         //no irrigation will be applied before this date
   [Param] string end;           //no irrigation will be applied after this date
          
   // The following event handler will be called each day at the start of the day
   [EventHandler] public void OnPrepare()
   {
      //if it's Monday and we're in the irrigation window
         if (today.DayOfWeek.ToString().Equals("Monday") &amp;&amp; DateUtility.WithinDates(start, today, end))
         {
            IrrigationApplicationType data = new IrrigationApplicationType();
            data.Amount = amount;
            Irrigation.Set("irrigation_efficiency", eff);
            Irrigation.Apply(data);
         }
   }  
}
       </text>
    </manager2>
    <manager2 name="Report on specific days">
      <ui>
        <title type="category" description="Don't forget to remove any reporting frquency variables from your selected Outputfile." />
        <reportDays type="text" description="Enter a list of dates to report on, seperated by spaces (e.g. 1-Jan 1-Jul 31-Dec)." />
        <module type="modulename" description="The output module to report to.">outputfile</module>
      </ui>
      <text>
using System;
using ModelFramework;
using CSGeneral;

public class Script 
{      
   [Link] Paddock paddock;
   [Input] DateTime Today; 
   [Param] string reportDays;
   [Param] string module;
   
   private string[] days;
   private Outputfile output;
   
   [EventHandler] public void OnInitialised()
   {
      days = reportDays.Split(' ');
      output = (Outputfile) paddock.LinkByName(module);
   }
        
   [EventHandler] public void OnPost()
   {
      foreach (string s in days)
      {
         if (DateUtility.DatesEqual(s, Today))
            output.DoOutput();
      }
   }  
}
       </text>
    </manager2>
  </folder>
  <folder name="Weed management">
    <manager name="Weed sowing">
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">1-may</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">15-jul</date2>
        <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <daysLastCohort type="text" description="Days since last cohort:">0</daysLastCohort>
        <category type="category" description="Sowing parameters" />
        <weed type="crop" description="Enter name of weed to sow : ">raphanus_raphanistrum</weed>
        <density type="text" description="Enter sowing density  (plants/m2) : ">6</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
        <cultivar type="cultivars" description="Enter cultivar : ">radish_SA</cultivar>
        <class type="classes" description="Enter crop growth class : ">plant</class>
        <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        <thisCohort type="text" description="Enter cohort number">1</thisCohort>
      </ui>
      <script>
        <text>if (date_within('[date1], [date2]') = 1 AND cohort = [thisCohort] - 1 AND timeFrom1st - lastCohort &gt;= [daysLastCohort]) THEN
   if (rain[[rainnumdays]] &gt;= [raincrit]) THEN
      ChooseNextCrop = 'yes'   ! for rotations
      [weed] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
      cohort = cohort + 1
      
      if ([thisCohort] = 1) THEN
         firstSown = 1
         timeFrom1st = 0
      endif
      
      lastCohort = timeFrom1st  
   endif
   
   if today = date('[date2]') THEN
         ChooseNextCrop = 'yes'
   endif
endif
   
if ([thisCohort] = 1 ) THEN
   timeFrom1st = timeFrom1st + 1
endif</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>cohort = 0
lastCohort = 0
timeFrom1st = 0
firstSown = 0</text>
        <event>init</event>
      </script>
      <script>
        <text>if [weed].StageName = 'harvest_ripe' or [weed].plant_status = 'dead' then
  [weed]  harvest
  [weed]  end_crop
  firstSown = 0
  cohort = 0
endif</text>
        <event>end_of_day</event>
      </script>
    </manager>
    <manager name="Weed control by date">
      <ui>
        <category type="category" description="Control parameters" />
        <killdate type="ddmmmdate" description="Enter date to apply control  " />
        <amount type="text" description="Enter fraction to kill (0 - 1)">0</amount>
        <weed type="crop" description="Choose weed to kill" />
      </ui>
      <script>
        <text>if (today = date('[killdate]')) then
   [weed] kill_crop plants_kill_fraction = [amount]
endif
</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>nextcrop = 0
fallowin = 0</text>
        <event>init</event>
      </script>
    </manager>
    <manager name="Weed control by days after emergence">
      <ui>
        <category type="category" description="Control parameters" />
        <killdoe type="text" description="Enter number of days after emergence to apply">10</killdoe>
        <amount type="text" description="Enter fraction to kill (between 0 and 1)">0</amount>
        <weed type="crop" description="Choose weed to kill" />
      </ui>
      <script>
        <text>if (daysafteremergence = [killdoe]) then
   [weed] kill_crop plants_kill_fraction = [amount]
endif
</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>nextcrop = 0
fallowin = 0</text>
        <event>init</event>
      </script>
    </manager>
  </folder>
  <folder name="African and Indian specialisations">
    <folder name="Phosphorus and Manure">
      <manager name="Fertilise with Phosphorus at sowing">
        <script>
          <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = 50 (mm), type = [fert_type_sow]
            </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category type="category" description="When should fertiliser be applied" />
          <modulename type="modulename" description="On which module should the event come from : ">maize</modulename>
          <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
          <category type="category" description="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
          <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">150</fert_amount_sow>
          <fert_type_sow type="list" listvalues="rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">broadcast_p</fert_type_sow>
        </ui>
      </manager>
      <manager name="Fertilise with Phosphorus on fixed date">
        <script>
          <text>
         if (today = date('[fert_date]') then
               [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
         endif </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="When should fertiliser be applied" />
          <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
          <category type="category" description="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
          <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">150</fert_amount>
          <fert_type type="list" listvalues="rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">broadcast_p</fert_type>
        </ui>
      </manager>
      <manager name="Manure on fixed date">
        <script>
          <text>
         if (today = date('[manure_date]') then
               '[surfaceommodule]' add_surfaceom type=[manure_type], name=[manure_type], mass=[manure_amount], cnr=[manure_cnr], cpr=[manure_cpr]
         endif </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="When should fertiliser be applied" />
          <manure_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</manure_date>
          <category type="category" description="Manure application details" />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
          <manure_amount type="text" description="Amount of manure to apply (kg/ha) : ">4</manure_amount>
          <manure_type type="list" listvalues="manure,fym,heap_uncov,heap_cov,pit,communal" description="manure type : ">manure</manure_type>
          <manure_cnr type="text" description="manure CNR : ">20</manure_cnr>
          <manure_cpr type="text" description="manure CPR : ">50</manure_cpr>
        </ui>
      </manager>
      <manager name="Manure at sowing">
        <script>
          <text>
               '[surfaceommodule]' add_surfaceom type=[manure_type], name=[manure_type], mass=[manure_amount], cnr=[manure_cnr], cpr=[manure_cpr]
            </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category type="category" description="When should manure be applied" />
          <modulename type="modulename" description="On which module should the event come from : ">wheat</modulename>
          <eventname type="text" description="On which event should manure be applied : ">sowing</eventname>
          <category type="category" description="Manure application details" />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
          <manure_amount type="text" description="Amount of manure to apply (kg/ha) : ">4</manure_amount>
          <manure_type type="list" listvalues="manure,fym,heap_uncov,heap_cov,pit,communal" description="manure type : ">manure</manure_type>
          <manure_cnr type="text" description="manure CNR : ">20</manure_cnr>
          <manure_cpr type="text" description="manure CPR : ">50</manure_cpr>
        </ui>
      </manager>
    </folder>
    <folder name="Tillage">
      <manager name="Tillage with cn_red on fixed date">
        <script>
          <text>
         if (today = date('[tillage_date]') then
            if ('[tillage_type]' = 'user_defined') then
                '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
                '[soilmodule] Water' tillage type = [tillage_type], cn_red = [tillage_cn_red], cn_rain = [tillage_cn_rain]
            else
                '[surfaceommodule]' tillage type = [tillage_type]
                '[soilmodule] Water' tillage type = [tillage_type]
            endif
            ready_to_till_pre_sow = 0
            till_day_pre_sow = 0
         endif
      </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="When should tillage be done" />
          <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) : ">dd-mmm</tillage_date>
          <category type="category" description="Tillage application details" />
          <surfaceommodule type="modulename" moduletype="surfaceom" description="Module used to apply the tillage : " />
          <soilmodule type="modulename" moduletype="soil" description="Name of your soil module : " />
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
          <tillage_cn_red description="cn reduction after tillage () : ">0</tillage_cn_red>
          <tillage_cn_rain description="amount of cummulative rain to dissipate tillage effects on cn () : ">0</tillage_cn_rain>
        </ui>
      </manager>
    </folder>
    <folder name="Intercropping, Rotations and Weeds">
      <manager name="End crop on a fixed date for intercropping">
        <script>
          <text>

        if (today = date('[date]') then
            [crop] kill_crop
            [crop] end_crop
                  crop_in = crop_in - 1
            [crop]_to_harvest = 0
            fert_tot = 0
            sow_year = 0
            if (crop_current = '[crop]') then
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current1 = '[crop]') then
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current2 = '[crop]') then
               crop_current2 = blank
            endif
        endif

            </text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category type="category" description="Harvesting criteria" />
          <crop type="crop" description="Enter name of crop to end : ">weed</crop>
          <date type="text" description="Enter ending date (dd-mmm) : ">1-jan</date>
        </ui>
      </manager>
      <manager name="Harvesting rule for intercropping">
        <script>
          <text>
          [crop]_to_harvest = 0
            </text>
          <event>init</event>
        </script>
        <script>
          <text>
         if ([crop]_to_harvest = 1) then
            [crop] harvest, remove=[fraction_to_remove]
            [crop] kill_crop
            [crop] end_crop
                  crop_in = crop_in - 1
            [crop]_to_harvest = 0
            fert_tot = 0
            sow_year = 0
            if (crop_current = '[crop]') then
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current1 = '[crop]') then
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current2 = '[crop]') then
               crop_current2 = blank
            endif
         endif

         if ([crop].StageName = 'harvest_ripe' OR [crop].plant_status = 'dead') then
            [crop]_to_harvest = 1
         endif
            </text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category type="category" description="Harvesting criteria" />
          <crop type="crop" description="Enter name of crop to harvest when ripe : ">maize</crop>
          <fraction_to_remove type="text" description="Enter fraction of stover to remove (not for maize): ">0.0</fraction_to_remove>
        </ui>
      </manager>
      <manager name="Output at harvesting for intercropping">
        <script>
          <text>
         if ([crop]_to_harvest = 1) then
            '[outputfile]' do_output
         endif
            </text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category type="category" description="Output criteria" />
          <crop type="crop" description="Enter name of crop to output at harvest : ">maize</crop>
          <outputfile type="modulename" moduletype="outputfile" description="Name of outputfile component : " />
        </ui>
      </manager>
      <manager name="Output at all phenological stages">
        <script>
          <text>
               last_stage_name = 'none'
            </text>
          <event>init</event>
        </script>
        <script>
          <text>
         if [crop].StageName = last_stage_name  then
         else
            '[outputfile]' do_output
         endif
         last_stage_name = [crop].StageName
            </text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category type="category" description="Output criteria" />
          <crop type="crop" description="Enter name of crop to output at harvest : ">maize</crop>
          <outputfile type="modulename" moduletype="outputfile" description="Name of outputfile component : " />
        </ui>
      </manager>
      <manager name="Output at specified phenological stage">
        <script>
          <text>
         if [crop].StageName = [StageName]  then
         else
            '[outputfile]' do_output
         endif
         last_stage_name = [crop].StageName
            </text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category type="category" description="Output criteria" />
          <crop type="crop" description="Enter name of crop to output at harvest : ">maize</crop>
          <stage_name type="list" listvalues="sowing,germination,emergence,end_of_juvenile,floral_initiation,flag_leaf,flowering,start_grain_fill,end_grain_fill,maturity,harvest_ripe,end_crop" description="Phenological stage name at which to output : ">flowering</stage_name>
          <outputfile type="modulename" moduletype="outputfile" description="Name of outputfile component : " />
        </ui>
      </manager>
      <manager name="Sow using a variable rule with intercropping">
        <script>
          <text>
         next = 1
         crop_in = 0
         blank = 'fallow'
         next_crop = blank
         crop_current = blank
         crop_current1 = blank
         crop_current2 = blank
         crop_sow = blank
         ready_for_next = 1
         ready_to_manure_pre_sow = 0
         days_last_year = 365
         manure_day_pre_sow = 0
         ready_to_till_pre_sow = 0
         till_day_pre_sow = 0
         days_after_weed_kill = 0
        </text>
          <event>init</event>
        </script>
        <script>
          <text>

         if (date_within('[date1], [date2]') = 1) THEN
         else
            wht_sow_opp_num = 0
            wht_sow_opp_days = 0
         endif
         </text>
          <event>end_of_day</event>
        </script>
        <script>
          <text><![CDATA[
         days_this_year = 364 + (date('1-mar') - date('28-feb'))
         if (next_crop = '[crop]' OR next_crop = blank OR '[rotation_exclude]' = 'yes') then
               !  Presowing  manure application

            if ([manure_amount_pre_sow] > 0) then
               !  calculate day to fertilise
               manure_day_pre_sow = date('[date1]') - [manure_days_pre_sow]
               ! Need to correct for possible year boundary condition
               if (manure_day_pre_sow < today) then
                  manure_day_pre_sow = days_this_year + manure_day_pre_sow
               endif
               if (today = manure_day_pre_sow) then
                  ready_to_manure_pre_sow = 1
               endif
               if (crop_in = 0 and ready_to_manure_pre_sow = 1) then
                        ! just put on a fixed amount of manure
                  '[surfaceommodule_pre_sow]' add_surfaceom type=[manure_type_pre_sow], name=[manure_type_pre_sow], mass=[manure_amount_pre_sow], cnr=[manure_cnr_pre_sow], cpr=[manure_cpr_pre_sow]
                  ready_to_manure_pre_sow = 0
                  manure_day_pre_sow = 0
               endif
            endif

               !  Presowing  fertiliser application

            if ([fert_amount_pre_sow] > 0 OR [totn_pre_sow] > 0 ) then
               !  calculate day to fertilise
               fert_day_pre_sow = date('[date1]') - [fert_days_pre_sow]
               ! Need to correct for possible year boundary condition
               if (fert_day_pre_sow < today) then
                  fert_day_pre_sow = days_this_year + fert_day_pre_sow
               endif
               if (today = fert_day_pre_sow) then
                  ready_to_fert_pre_sow = 1
               endif
               if (crop_in = 0 and ready_to_fert_pre_sow = 1) then
                  if ([totn_pre_sow] > 0) then
                     !   Top up soil N of top 3 layers
                     N_deficit = [totn_pre_sow] - (no3(1) + nh4(1) + no3(2) + nh4(2) + no3(3) + nh4(3))
                     if (N_deficit < 0) then
                        ! do nothing
                        N_deficit = 0
                     else
                        fertiliz apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type_pre_sow] ()
                     endif
                  else
                     N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
                     if (N_topsoil > [fert_criteria_pre_sow]) then
                        ! enough N already in topsoil
                     else
                        ! just put on a fixed amount of N
                        fertiliz apply amount = [fert_amount_pre_sow] (kg/ha), depth = 50 (mm), type = [fert_type_pre_sow] ()
                     endif
                  endif
                  ready_to_fert_pre_sow = 0
                  fert_day_pre_sow = 0
               endif
            endif

            !   Tillage - presowing seedbed preparation
            if ( [till_days_pre_sow] > 0) then
               ! calculate presowing tillage date
               till_day_pre_sow = date('[date1]') - [till_days_pre_sow]
               ! Need to correct for possible year boundary condition
               if (till_day_pre_sow < today) then
                  till_day_pre_sow = days_this_year + till_day_pre_sow
               endif
               if (today = till_day_pre_sow) then
                  ready_to_till_pre_sow = 1
               endif
               if ((crop_in = 0 OR '[must_till]' = 'yes') AND (ready_to_till_pre_sow = 1)) then
                  ! tillage
                if (crop_current = 'weed' or crop_current1 = 'weed' or crop_current2 = 'weed') then
                  if (weed.plant_status <> 'out') then
                        weed harvest, remove=[fraction]
                        weed kill_crop
                        weed end_crop
                        days_after_weed_kill = 0
                       crop_in = crop_in - 1
                       if (crop_current = 'weed') then
                           crop_current = crop_current1
                           crop_current1 = crop_current2
                           crop_current2 = blank
                        elseif (crop_current1 = 'weed') then
                           crop_current1 = crop_current2
                           crop_current2 = blank
                        elseif (crop_current2 = 'weed') then
                           crop_current2 = blank
                        endif
                  endif
                 endif
                  if ('[tillage_type]' = 'user_defined') then
                      '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
                      '[soilmodule] Water' tillage type = [tillage_type], cn_red = [tillage_cn_red], cn_rain = [tillage_cn_rain]
                  else
                      '[surfaceommodule]' tillage type = [tillage_type] ()
                      '[soilmodule] Water' tillage type = [planter_type]
                  endif
                  ready_to_till_pre_sow = 0
                  till_day_pre_sow = 0
               endif
            endif

            if (today = date('[date2]')) then
               if ('[rotation_exclude]' = 'no') then
                  ready_for_next = 1
               endif
            endif

            if (wht_sow_opp_num > 0) then
               wht_sow_opp_days = wht_sow_opp_days + 1
            else
            endif

         if (crop_in = 0 OR ('[cropmethod]' = 'intercrop'
             AND [crop].plant_status = 'out')) then
               if (date_within('[date1], [date2]') = 1) then
                  crop_sow = 'waiting'
                  surface_moist = (sw(1) - ll15(1)) / (dul(1)- ll15(1))
                  if ((rain[[rain_days]] >= [rain_amount]  AND  esw >= [esw_amount] AND
                        (surface_moist <= [surface_up] and surface_moist >= [surface_low])) OR
                      ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN


                     if (wht_sow_opp_days >= [rain_days] OR wht_sow_opp_num = 0) then
                        wht_sow_opp_num = wht_sow_opp_num + 1
                        wht_sow_opp_days = 0
                     endif

                     if ((wht_sow_opp_num >= [sow_opp]) OR ('[must_sow]' = 'yes' AND today = date('[date2]')) then
                        if ('[crop]' = 'sorghum') then
                           [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar1], row_spacing = [row_spacing], tiller_no_fertile = [ftn] (), skip = [skiprow]
                        else
                          [crop] sow cultivar = [cultivar1], plants = [density] (plants/m2), sowing_depth = [depth], row_spacing = [row_spacing]
                        endif
                        crop_in = crop_in + 1
                        if ('[rotation_exclude]' = 'no') then
                           ready_for_next = 1
                        endif
                        crop_current2 = crop_current1
                        crop_current1 = crop_current
                        crop_current = '[crop]'
                        crop_sow = '[crop]'
                        ready_to_manure_pre_sow = 0
                        if ([fert_amount_sow] > 0) then
                           fertiliser apply amount = [fert_amount_sow] (kg/ha), depth = 50 (mm), type = [fert_type_sow] ()
                        endif
                        !   Planter -
                        ! Planting
                        if (crop_current = 'weed' or crop_current1 = 'weed' or crop_current2 = 'weed') then
                           if (weed.plant_status <> 'out' AND [thin_fraction] > 0) then
                              weed kill_crop plants_kill_fraction = [thin_fraction]
                              if ([thin_fraction] = 1.0) then
                                 weed end_crop
                                 days_after_weed_kill = 0
                              else
                              endif
                              if ([thin_fraction] = 1.0) then
                                    crop_in = crop_in - 1
                                   if (crop_current = 'weed') then
                                       crop_current = crop_current1
                                       crop_current1 = crop_current2
                                       crop_current2 = blank
                                    elseif (crop_current1 = 'weed') then
                                       crop_current1 = crop_current2
                                       crop_current2 = blank
                                    elseif (crop_current2 = 'weed') then
                                       crop_current2 = blank
                                    endif
                              endif
                           endif
                        endif
                        if ('[planter_type]' = 'user_defined') then
                            '[surfaceommodule]' tillage type = [planter_type], f_incorp = [planter_f_incorp] (), tillage_depth = [planter_depth]
                            '[soilmodule] Water' tillage type = [planter_type], cn_red = [planter_cn_red], cn_rain = [planter_cn_rain]
                        else
                            '[surfaceommodule]' tillage type = [planter_type] ()
                            '[soilmodule] Water' tillage type = [planter_type]
                        endif


                     else
                        !not this opportunity
                     endif
                  endif
               endif
            endif
         endif
         ! apply topdress fertiliser
         if ([fert_amount_TopDress] > 0.0) then
            if ([crop].DaysAfterSowing = [fert_days_TopDress]) then
               fertiliser apply amount = [fert_amount_TopDress] (kg/ha), depth = 50 (mm), type = [fert_type_TopDress] ()
            else
            endif
         else
         endif
         ]]></text>
          <event>process</event>
        </script>
        <ui>
          <category type="category" description="Crop properties" />
          <crop description="Name of this crop" type="crop">maize</crop>
          <cultivar1 type="cultivars" croppropertyname="crop" description="Enter cultivar : ">katumani</cultivar1>
          <cropmethod description="Method of cropping" type="list" listvalues="sole,intercrop">sole</cropmethod>
          <rotation_exclude description="Exclude from rotation sequence" type="yesno">no</rotation_exclude>
          <category type="category" description="Sowing criteria" />
          <date1 description="Enter sowing window START date (dd-mmm)" type="ddmmmdate">1-nov</date1>
          <date2 description="Enter sowing window END date (dd-mmm)" type="ddmmmdate">30-dec</date2>
          <must_sow description="Must Sow" type="yesno">no</must_sow>
          <rain_amount description="Enter amount of cumulative rainfall (mm)">20</rain_amount>
          <rain_days description="Enter number of days to accumulate rainfall (days)">5</rain_days>
          <esw_amount description="Enter amount of soil water (mm)">30</esw_amount>
          <sow_opp description="Enter sowing opportunity number to sow on (1..n)">1</sow_opp>
          <surface_up description="Enter upper limit of sw in top layer (0-2) (mm esw/mm soil)">2</surface_up>
          <surface_low description="Enter lower limit of sw in top layer (0-1) (mm esw/mm soil)">0</surface_low>
          <category type="category" description="Sowing specs" />
          <density description="Enter sowing density  (plants/m2)">5</density>
          <depth description="Enter sowing depth  (mm)">100</depth>
          <row_spacing description="Enter row spacing  (mm) (m for maize and sorghum)" type="text">0.9</row_spacing>
          <category type="category" description="Sorghum specs" />
          <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
          <category type="category" description="Starter fertiliser application" />
          <fert_amount_sow description="Amount of starter fertiliser at sowing (kg/ha)" type="text">0</fert_amount_sow>
          <fert_type_sow description="Type" type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea">urea_N</fert_type_sow>
          <category type="category" description="TopDress fertiliser application" />
          <fert_days_TopDress description="Enter number of days after sowing to apply top-dress fertiliser (days)" type="text">60</fert_days_TopDress>
          <fert_amount_TopDress description="Amount of TopDress fertiliser (kg/ha)" type="text">0</fert_amount_TopDress>
          <fert_type_TopDress description="Type" type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p">urea_N</fert_type_TopDress>
          <category type="category" description="Pre-sowing manure application" />
          <surfaceommodule_pre_sow type="modulename" description="Module used to apply the manure : ">surface organic matter</surfaceommodule_pre_sow>
          <manure_days_pre_sow description="Enter number of days before window to apply pre-crop manure (days)" type="text">30</manure_days_pre_sow>
          <manure_amount_pre_sow type="text" description="Amount of manure to apply (kg/ha) : ">4000</manure_amount_pre_sow>
          <manure_type_pre_sow type="list" listvalues="manure,fym,heap_uncov,heap_cov,pit,communal" description="manure type : ">manure</manure_type_pre_sow>
          <manure_cnr_pre_sow type="text" description="manure CNR : ">25</manure_cnr_pre_sow>
          <manure_cpr_pre_sow type="text" description="manure CPR : ">50</manure_cpr_pre_sow>
          <category type="category" description="Pre-sowing fertiliser application" />
          <fert_days_pre_sow description="Enter number of days before window to apply pre-crop fertiliser (days)" type="text">30</fert_days_pre_sow>
          <fert_amount_pre_sow description="Amount of pre-crop fertiliser (kg/ha)" type="text">0</fert_amount_pre_sow>
          <fert_criteria_pre_sow description="Don't add fertiliser if pre-crop N in top 2 layers exceeds (kg/ha)" type="text">1000</fert_criteria_pre_sow>
          <totn_pre_sow description=" OR  Amount of pre-crop N required in top 3 layers (kg/ha)" type="text">0</totn_pre_sow>
          <fert_type_pre_sow description="Type (NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p)" type="text">urea_N</fert_type_pre_sow>
          <category type="category" description="Tillage components" />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
          <soilmodule type="modulename" description="Name of your soil module : " />
          <category type="category" description="Planter Tillage" />
          <planter_type description="Planter type" type="list" listvalues="user_defined, planter">planter</planter_type>
          <planter_depth description="User_defined depth of seedbed preparation (mm)" type="text">0</planter_depth>
          <thin_fraction description="Enter fraction of weed population killed (0-1)" type="text">1.0</thin_fraction>
          <planter_f_incorp description="User_defined fraction of surface residues to incorporate (0-1)" type="text">0</planter_f_incorp>
          <planter_cn_red description="cn reduction after tillage () : ">0</planter_cn_red>
          <planter_cn_rain description="amount of cummulative rain to dissipate tillage effects on cn () : ">0</planter_cn_rain>
          <category type="category" description="Seed-bed Tillage Preparation" />
          <till_days_pre_sow description="Enter number of days before window to prepare seed-bed (days)" type="text">0</till_days_pre_sow>
          <must_till description="Must Till (yes/no)" type="yesno">no</must_till>
          <tillage_type description="Tillage type (user_defined, chisel, disc, planter)" type="list" listvalues="user_defined,chisel,disc,planter,burn,burn_90,graze,scarifier,rip,blade,tine">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm)" type="text">100</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1)" type="text">1</tillage_f_incorp>
          <fraction description="Enter biomass removal fraction of growing weeds from field (0-1)" type="text">0.0</fraction>
          <tillage_cn_red description="cn reduction after tillage () : ">0</tillage_cn_red>
          <tillage_cn_rain description="amount of cummulative rain to dissipate tillage effects on cn () : ">0</tillage_cn_rain>
        </ui>
      </manager>
      <manager name="Sow WEEDS using a variable rule with intercropping">
        <script>
          <text>
         next = 1
         crop_in = 0
         blank = 'fallow'
         next_crop = blank
         crop_current = blank
         crop_current1 = blank
         crop_current2 = blank
         crop_sow = blank
         ready_for_next = 1
         ready_to_fert_pre_sow = 0
         days_last_year = 365
         fert_day_pre_sow = 0
         ready_to_till_pre_sow = 0
         till_day_pre_sow = 0
         days_after_weed_kill = 0

      </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
               if (next_crop = '[crop]' OR next_crop = blank OR '[rotation_exclude]' = 'yes') then


                  if (today = date('[date2]')) then
                     if ('[rotation_exclude]' = 'no') then
                        ready_for_next = 1
                     endif
                  endif

                  if (wd_sow_opp_num > 0) then
                     wd_sow_opp_days = wd_sow_opp_days + 1
                  else
                  endif

                  if (crop_in = 0 OR ('[cropmethod]' = 'intercrop'
                      AND weed.plant_status = 'out')
                      AND days_after_weed_kill > 0) then
                        if (date_within('[date1], [date2]') = 1) then
                           crop_sow = 'waiting'
                           surface_moist = (sw(1) - ll15(1)) / (dul(1)- ll15(1))
                           if ((rain[[rain_days]] >= [rain_amount]  AND  esw >= [esw_amount] AND
                                 (surface_moist <= [surface_up] and surface_moist >= [surface_low])) OR
                               ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN


                              if (wd_sow_opp_days >= [rain_days] OR wd_sow_opp_num = 0) then
                                 wd_sow_opp_num = wd_sow_opp_num + 1
                                 wd_sow_opp_days = 0
                              endif

                              if ((wd_sow_opp_num >= [sow_opp]) OR ('[must_sow]' = 'yes' AND today = date('[date2]')) then
                                 if (date_within('[date1], [date_ch1]') = 1) then
                                    weed sow crop_class = [cla], plants = [density] (plants/m2), sowing_depth = [depth], cultivar = [cultivar1], row_spacing = [row_spacing]
                                 else
                                    weed sow crop_class = [cla], plants = [density] (plants/m2), sowing_depth = [depth], cultivar = [cultivar2], row_spacing = [row_spacing]
                                 endif
                                 crop_in = crop_in + 1
                                 if ('[rotation_exclude]' = 'no') then
                                    ready_for_next = 1
                                 endif
                                 crop_current2 = crop_current1
                                 crop_current1 = crop_current
                                 crop_current = '[crop]'
                                 crop_sow = '[crop]'
                              else
                                 !not this opportunity
                              endif
                        endif
                     endif
                  endif
               endif
                           ]]></text>
          <event>process</event>
        </script>
        <script>
          <text><![CDATA[

              days_this_year = 364 + (date('1-mar') - date('28-feb'))
              days_after_weed_kill = days_after_weed_kill + 1

               if (next_crop = '[crop]' OR next_crop = blank OR '[rotation_exclude]' = 'yes') then
                  !   Tillage - presowing seedbed preparation
                  if ( [till_days_pre_sow] > 0) then
                     ! calculate presowing tillage date
                     till_day_pre_sow = date('[date1]') - [till_days_pre_sow]
                     ! Need to correct for possible year boundary condition
                     if (till_day_pre_sow < today) then
                        till_day_pre_sow = days_this_year + till_day_pre_sow
                     endif
                     if (today = till_day_pre_sow) then
                        ready_to_till_pre_sow = 1
                     endif
                     if ((crop_in = 0 OR '[must_till]' = 'yes') AND (ready_to_till_pre_sow = 1)) then
                        ! tillage
                        if (weed.plant_status <> 'out') then
                           weed harvest, remove=[fraction]
                           weed kill_crop
                           weed end_crop
                           crop_in = crop_in - 1
                          if (crop_current = 'weed') then
                              crop_current = crop_current1
                              crop_current1 = crop_current2
                              crop_current2 = blank
                           elseif (crop_current1 = 'weed') then
                              crop_current1 = crop_current2
                              crop_current2 = blank
                           elseif (crop_current2 = 'weed') then
                              crop_current2 = blank
                           endif
                        endif
                     endif
                  endif
               endif


               if (date_within('[date1], [date2]') = 1) THEN
               else
                  wd_sow_opp_num = 0
                  wd_sow_opp_days = 0
               endif

            ]]></text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category type="category" description="Crop properties" />
          <crop type="crop" description="Name of this crop">weed</crop>
          <cultivar1 type="list" listvalues="late, early" description="Enter first type"> early</cultivar1>
          <cla type="list" listvalues="winter_grass, winter_dicot, summer_grass, perennial_legume" description="Enter class type "> summer_grass</cla>
          <date_ch1 type="ddmmmdate" description="Enter type change date (dd-mmm)">1-jul</date_ch1>
          <cultivar2 type="list" listvalues="late, early" description="Enter second type">late</cultivar2>
          <cropmethod type="list" listvalues="sole, intercrop" description="Method of cropping">intercrop</cropmethod>
          <rotation_exclude type="yesno" description="Exclude from rotation sequence">yes</rotation_exclude>
          <category type="category" description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm)">01-oct</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm)">30-apr</date2>
          <must_sow type="yesno" description="Must Sow">no</must_sow>
          <rain_amount type="text" description="Enter amount of rainfall (mm)">10</rain_amount>
          <rain_days type="text" description="Enter number of days of rainfall (days)">5</rain_days>
          <esw_amount type="text" description="Enter amount of soil water (mm)">5</esw_amount>
          <sow_opp type="text" description="Enter sowing opportunity number to sow on (1..n)">1</sow_opp>
          <surface_up type="text" description="Enter upper limit of sw in top layer (0-2) (mm esw/mm soil)">2</surface_up>
          <surface_low type="text" description="Enter lower limit of sw in top layer (0-1) (mm esw/mm soil)">0</surface_low>
          <category type="category" description="Sowing specs" />
          <density type="text" description="Enter sowing density  (plants/m2)">5</density>
          <depth type="text" description="Enter sowing depth  (mm)">15</depth>
          <row_spacing type="text" description="Enter row spacing  (mm)">350</row_spacing>
          <category type="category" description="Seed-bed Tillage Preparation" />
          <till_days_pre_sow type="text" description="Enter number of days before window to prepare seed-bed (days)">0</till_days_pre_sow>
          <must_till type="yesno" description="Must Till">no</must_till>
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter,burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type">disc</tillage_type>
          <tillage_depth type="text" description="User_defined depth of seedbed preparation (mm)">100</tillage_depth>
          <tillage_f_incorp type="text" description="User_defined fraction of surface residues to incorporate (0-1)">1</tillage_f_incorp>
          <fraction type="text" description="Enter biomass removal fraction of growing weeds from field (0-1)">0.0</fraction>
        </ui>
      </manager>
      <manager name="Rotations with Intercrop">
        <script>
          <text>
         next = 1
         crop_in = 0
         blank = 'fallow'
         next_crop = blank
         crop_current = blank
         crop_current1 = blank
         crop_current2 = blank
         crop_sow = blank
         ready_for_next = 1
         ready_to_fert_pre_sow = 0
         days_last_year = 365
         fert_day_pre_sow = 0
         ready_to_till_pre_sow = 0
         till_day_pre_sow = 0
         days_after_weed_kill = 0

      </text>
          <event>init</event>
        </script>
        <script>
          <text>
         if (ready_for_next = 1) then
            if      (next = 1) THEN
               next_crop = '[crop01]'
               next = 2
            elseif      (next = 2) THEN
               next_crop = '[crop02]'
               next = 3
            elseif (next = 3) THEN
               next_crop = '[crop03]'
               next = 4
            elseif (next = 4) THEN
               next_crop = '[crop04]'
               next = 5
            elseif (next = 5) THEN
               next_crop = '[crop05]'
               next = 6
            elseif (next = 6) THEN
               next_crop = '[crop06]'
               next = 7
            elseif (next = 7) THEN
               next_crop = '[crop07]'
               next = 8
            elseif (next = 8) THEN
               next_crop = '[crop08]'
               next = 9
            elseif (next = 9) THEN
                  next_crop = '[crop09]'
                  next = 10
            elseif (next = 10) THEN
                  next_crop = '[crop10]'
                  next = 11
            elseif (next = 11) THEN
                  next_crop = '[crop11]'
                  next = 12
            elseif (next = 12) THEN
                  next_crop = '[crop12]'
                  next = 13
            elseif (next = 13) THEN
                  next_crop = '[crop13]'
                  next = 14
            elseif (next = 14) THEN
                  next_crop = '[crop14]'
                  next = 15
            elseif (next = 15) THEN
                  next_crop = '[crop15]'
                  next = 16
            elseif (next = 16) THEN
                  next_crop = '[crop16]'
                  next = 17
            elseif (next = 17) THEN
                  next_crop = '[crop17]'
                  next = 18
            elseif (next = 18) THEN
                  next_crop = '[crop18]'
                  next = 19
            elseif (next = 19) THEN
                  next_crop = '[crop19]'
                  next = 20
            elseif (next = 20) THEN
                  next_crop = '[crop20]'
                  next = 1
            endif
            if (next_crop = 'nil' OR next_crop = blank) THEN
               next_crop = '[crop01]'
               next = 2
            endif
            ready_for_next = 0
         endif

            ! treat fallow as a crop - its window starts when the other fallow finishes
            ! assume initiation (sowing) of fallow takes place when previous fallow finishes
            ! or when previous crop is harvested, whichever is the latest.
            ! Assume fallow finishes (harvested) at end of fallow date.

         if (next_crop = '[winterf_name]') then
               ! initiate (sow)
            if ((crop_in = 0)
              OR (crop_in = 1 AND (crop_current = 'weed' OR crop_current1 = 'weed' OR crop_current2 = 'weed'))) then
               if (date_within('[summerf_d2], [winterf_d2]') then
                  crop_in = crop_in + 1
                  ready_for_next = 1
                  crop_current2 = crop_current1
                  crop_current1 = crop_current
                  crop_current = '[winterf_name]'
                  crop_sow = '[winterf_name]'
                  ready_to_fert_pre_sow = 0
               endif
            endif

         elseif (next_crop = '[summerf_name]') then
              ! initiate (sow)
            if ((crop_in = 0)
              OR (crop_in = 1 AND (crop_current = 'weed' OR crop_current1 = 'weed' OR crop_current2 = 'weed'))) then
               if (date_within('[winterf_d2], [summerf_d2]') then
                  crop_in = crop_in + 1
                  ready_for_next = 1
                  crop_current2 = crop_current1
                  crop_current1 = crop_current
                  crop_current = '[summerf_name]'
                  crop_sow = '[summerf_name]'
                  ready_to_fert_pre_sow = 0
               endif
            endif
         endif

         if (crop_current = '[winterf_name]'
          OR crop_current1 = '[winterf_name]'
          OR crop_current2 = '[winterf_name]') then
               ! terminate (harvest)
            if (today = date('[winterf_d2]')+1) then
               crop_in = crop_in - 1
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            endif
         elseif (crop_current = '[summerf_name]'
              OR crop_current1 = '[summerf_name]'
              OR crop_current2 = '[summerf_name]') then
               ! terminate (harvest)
            if (today = date('[summerf_d2]')+1) then
               crop_in = crop_in - 1
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            endif
         endif

      </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Fallow properties" />
          <summerf_name description="summer fallow name : " type="text">sf</summerf_name>
          <summerf_d2 description="summer fallow END   (dd-mmm) : " type="ddmmmdate">15-mar</summerf_d2>
          <winterf_name description="winter fallow name : " type="text">wf</winterf_name>
          <winterf_d2 description="winter fallow END   (dd-mmm) : " type="ddmmmdate">23-aug</winterf_d2>
          <category type="category" description="Crop and fallow rotation sequence - finish with nil" />
          <crop01 description="1 : " type="crop">sf  </crop01>
          <crop02 description="2 : " type="crop">wf </crop02>
          <crop03 description="3 : " type="crop">sf </crop03>
          <crop04 description="4 : " type="crop">wf </crop04>
          <crop05 description="5 : " type="crop">sf </crop05>
          <crop06 description="6 : " type="crop">wf </crop06>
          <crop07 description="7 : " type="crop">sf </crop07>
          <crop08 description="8 : " type="crop">wf </crop08>
          <crop09 description="9 : " type="crop">sf </crop09>
          <crop10 description="10 : " type="crop">wf  </crop10>
          <crop11 description="11 : " type="crop">sf  </crop11>
          <crop12 description="12 : " type="crop">wf  </crop12>
          <crop13 description="13 : " type="crop">sf  </crop13>
          <crop14 description="14 : " type="crop">wf  </crop14>
          <crop15 description="15 : " type="crop">sf  </crop15>
          <crop16 description="16 : " type="crop">wf  </crop16>
          <crop17 description="17 : " type="crop">sf  </crop17>
          <crop18 description="18 : " type="crop">wf  </crop18>
          <crop19 description="19 : " type="crop">sf  </crop19>
          <crop20 description="20 : " type="crop">wf  </crop20>
        </ui>
      </manager>
      <manager name="Weeding at threshold weed biomass or maximum days">
        <script>
          <text>
          daemerge = 0
      </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
         if ((crop_in >= 1)
            AND (weed.plant_status <> 'out')) then
            if (weed.stage >= 3.0) then
               daemerge = daemerge + 1
            endif

            if (weed.biomass > [weed_biomass] OR daemerge >= [weed_interval]) then
               if ((crop_in > 1 AND [weed_maxno_in] > weed_count_in) OR (crop_in = 1 AND [weed_maxno_out] > weed_count_out)) then
                  if (crop_in > 1) then
                     weed_count_in = weed_count_in + 1
                  elseif (crop_in = 1) then
                     weed_count_out = weed_count_out + 1
                  endif
                  weed harvest, remove = [fraction]
                  weed kill_crop plants_kill_fraction = [thin_fraction]
                  if ([thin_fraction] = 1.0) then
                     weed end_crop
                     days_after_weed_kill = 0
                  else
                  endif
                  if ('[tillage_type]' = 'user_defined') then
                    '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [f_incorp], tillage_depth = [tillage_depth]
                  else
                    '[surfaceommodule]' tillage type = [tillage_type]
                  endif
                  if ([thin_fraction] = 1.0) then
                    crop_in = crop_in - 1
                    if (crop_current = 'weed') then
                        crop_current = crop_current1
                        crop_current1 = crop_current2
                        crop_current2 = blank
                     elseif (crop_current1 = 'weed') then
                        crop_current1 = crop_current2
                        crop_current2 = blank
                     elseif (crop_current2 = 'weed') then
                        crop_current2 = blank
                     endif
                     daemerge = 0
                  else
                  endif
               else
               endif
            else
            endif
         else
            daemerge = 0
         endif

         if (((crop_in = 1)
            AND (weed.plant_status <> 'out'))
            OR (crop_in = 0)) then
            weed_count_in = 0
         else
            weed_count_out = 0
         endif
      ]]></text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category type="category" description="Weeding properties" />
          <weed_interval description="Maximum days after emergence to weed (days) : " type="text">30</weed_interval>
          <weed_biomass description="Weeding biomass threshold to weed (kg/ha) : " type="text">100</weed_biomass>
          <weed_maxno_in description="Maximum number of in-crop weedings (1..n) : " type="text">2</weed_maxno_in>
          <weed_maxno_out description="Maximum number of fallow weedings (1..n) : " type="text">0</weed_maxno_out>
          <thin_fraction description="Enter fraction of weed population weeded (0-1) : " type="text">1.0</thin_fraction>
          <fraction description="Enter biomass removal fraction from field (0-1) : " type="text">0.0</fraction>
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
          <tillage_type description="Enter name of tillage type : " type="text">user_defined</tillage_type>
          <f_incorp description="Enter fraction of surface residues incorporated into soil (0-1) : " type="text">0.1</f_incorp>
          <tillage_depth description="Enter depth of incorporation of surface residues (mm) : " type="text">25</tillage_depth>
        </ui>
      </manager>
      <manager name="Remove all residues on a fixed date">
        <script>
          <text>
         if today = date('[date]') then
            '[surfaceommodule]' tillage type = user_defined, f_incorp = 1.0 (), tillage_depth = 0.0 ()
         endif
            </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Removal criteria" />
          <date description="Date to remove residues (dd-mmm) :" type="ddmmmdate">1-may</date>
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
        </ui>
      </manager>
      <manager name="Remove residues at harvest">
        <script>
          <text>
               last_stage_name = 'none'
            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
         if [crop].StageName <> last_stage_name  then
            if ([crop].StageName = 'out') then
               '[surfaceommodule]' tillage type = user_defined, f_incorp = [fraction] (), tillage_depth = 0.0 ()
            endif
         endif
         last_stage_name = [crop].StageName
            ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Removal criteria" />
          <crop description="Name of crop harvest to trigger residue removal" type="crop">weed</crop>
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
          <fraction description="Enter biomass removal fraction from field (0-1) : " type="text">0.0</fraction>
        </ui>
      </manager>
    </folder>
  </folder>
  <folder name="Ausfarm Pasture Management">
    <manager name="Area">
      <ui>
        <area type="text" description="Area of paddock (ha) :">100</area>
      </ui>
      <script name="Init">
        <text>area = [area]</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Sow">
      <ui>
        <category description="Sowing criteria" type="category" />
        <date type="text" description="Enter sowing date (dd-mmm):">15-May</date>
        <category description="Sowing details" type="category" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <rate type="text" description="Enter sowing rate (kg/ha):">100</rate>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' sowpasture rate = [rate]
    endif
   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Cut">
      <ui>
        <category description="When should a cut be done?" type="category" />
        <date type="ddmmmdate" description="Enter date of cut (dd-mmm) : ">1-jan</date>
        <category description="Cut details" type="category" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <height type="text" description="Enter height of cut (mm):">80</height>
        <gathered type="text" description="Proportion of cut forage gathered in (remainder becomes litter):">0.5</gathered>
        <dmdloss type="text" description="Loss of DMD during cutting, drying and storage:">0.1</dmdloss>
        <dmdcontent type="text" description="Dry matter content when stored (kg/kg):">0.9</dmdcontent>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
         standing_DM = avail_dm
         '[pasturemodel]' cutpasture cut_height = [height], gathered = [gathered], dmd_loss = [dmdloss], dm_content = [dmdcontent]
         resid_DM = avail_dm
         removed_DM = standing_DM - resid_DM
   endif



   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="CutOnDMThreshold">
      <ui>
        <category description="When should a cut be done?" type="category" />
        <availdmthreshold type="text" description="Enter DM threshold after which a cut should be performed (kg/ha):">1500</availdmthreshold>
        <category description="Cut details" type="category" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <height type="text" description="Enter height of cut (mm):">80</height>
        <gathered type="text" description="Proportion of cut forage gathered in (remainder becomes litter):">0.5</gathered>
        <dmdloss type="text" description="Loss of DMD during cutting, drying and storage:">0.1</dmdloss>
        <dmdcontent type="text" description="Dry matter content when stored (kg/kg):">0.9</dmdcontent>
      </ui>
      <script name="start_of_day">
        <text><![CDATA[if ([pasturemodel]Model.avail_dm > [availdmthreshold]) then
         standing_DM = [pasturemodel]Model.avail_dm
         '[pasturemodel]' cutpasture cut_height = [height], gathered = [gathered], dmd_loss = [dmdloss], dm_content = [dmdcontent]
         resid_DM = [pasturemodel]Model.avail_dm
         removed_DM = standing_DM - resid_DM
   endif



   ]]></text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Kill">
      <ui>
        <category description="Kill criteria" type="category" />
        <date type="text" description="Enter kill date (dd-mmm):">11-May</date>
        <category description="Kill details" type="category" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <propn_herbage type="text" description="Proportion of herbage to be killed:">0.5</propn_herbage>
        <propn_seed type="text" description="Proportion of seed to be killed:">0.5</propn_seed>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' killpasture propn_herbage = [propn_herbage],  propn_seed = [propn_seed]
    endif


   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Burn">
      <ui>
        <category description="Burn criteria" type="category" />
        <date type="text" description="Enter burn date (dd-mmm):">10-May</date>
        <category description="Burn details" type="category" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <kill_plants type="text" description="Proportion of herbage killed by the fire:">0.5</kill_plants>
        <kill_seed type="text" description="Proportion of seeds killed by the fire:">0.5</kill_seed>
        <propn_unburnt type="text" description="Proportion of herbage (green and dead) that remains after the fire has passed:">0.2</propn_unburnt>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' burnpasture kill_plants = [kill_plants], kill_seed = [kill_seed], propn_unburnt = [propn_unburnt]
    endif
   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Cultivate">
      <ui>
        <category description="Cultivate criteria" type="category" />
        <date type="text" description="Enter cultivation date (dd-mmm):">13-May</date>
        <category description="Cultivation details" type="category" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <depth type="text" description="Depth of cultivation (mm):">100</depth>
        <propn_incorp type="text" description="Proportion of surface herbage incorporated into the soil:" />
        <propn_mixed type="text" description="Proportion of soil in each soil layer that is mixed across the cultivation depth:">0.3</propn_mixed>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' cultivatepasture depth = [depth], propn_incorp = [propn_incorp], propn_mixed = [propn_mixed]
    endif
   </text>
        <event>start_of_day</event>
      </script>
    </manager>
  </folder>
  <folder name="Ausfarm Stock Management">
    <folder name="Cattle">
      <manager name="Buy cattle on a fixed date">
        <script>
          <text>
               cattle_presence = 'off'
            </text>
          <event>init</event>
        </script>
        <script>
          <text>
        if (today = date('[buy_date]') then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           cattle_presence = 'on'
         endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Buy properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
          <buy_date type="text" description="Date (dd-mmm) : ">1-jan</buy_date>
          <buy_number type="text" description="Number of stock : ">5</buy_number>
          <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
          <buy_age type="text" description="Age (months) : ">12</buy_age>
          <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
        </ui>
      </manager>
      <manager name="Buy cattle on a fixed days after sowing">
        <script>
          <text>
               cattle_presence = 'off'
            </text>
          <event>init</event>
        </script>
        <script>
          <text>
        if (DaysAfterSowing = [buy_das]) then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           cattle_presence = 'on'
         endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Buy properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
          <buy_das type="text" description="Days after sowing : ">30</buy_das>
          <buy_number type="text" description="Number of stock : ">5</buy_number>
          <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
          <buy_age type="text" description="Age (months) : ">12</buy_age>
          <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
        </ui>
      </manager>
      <manager name="Move cattle on a fixed date">
        <script>
          <text>
               cattle_presence = 'off'
            </text>
          <event>init</event>
        </script>
        <script>
          <text>
         if (today = date('[move_date]') then
               stockage = [sellpaddock].[sellstockmodule].age_all/30.4375
               stockwt = [sellpaddock].[sellstockmodule].weight_all
               stocknumber = [sellpaddock].[sellstockmodule].number_all
               [sellpaddock].[sellstockmodule]scienceconverter sellstock number = stocknumber (-)
               [buypaddock].[buystockmodule]scienceconverter buystock number = stocknumber (-), genotype = '[genotype]', sex = [sex], age = stockage (months), weight = stockwt (kg)
        endif
        </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Move properties" />
          <sellpaddock type="modulename" description="Name of sell paddock : ">Paddock</sellpaddock>
          <sellstockmodule type="modulename" description="Name of stock module in sell paddock : ">stock</sellstockmodule>
          <buypaddock type="modulename" description="Name of buy paddock : ">Paddock</buypaddock>
          <buystockmodule type="modulename" description="Name of stock module in buy paddock: ">stock</buystockmodule>
          <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
          <move_date type="text" description="Date (dd-mmm) : ">1-jan</move_date>
        </ui>
      </manager>
      <manager name="Move cattle on a minimum weight gain OR at flowering">
        <script>
          <text>
               [sellpaddock]_cattle_presence = 'off'
               [buypaddock]_cattle_presence = 'off'
            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
           if ([sellpaddock].[sellstockmodule].number_all > 0) then
               [sellpaddock]_cattle_presence = 'on'
            endif
          if (([sellpaddock].[sellstockmodule].wt_change_all <= [minimum_wt_change] OR [buypaddock].[herbage_module].StageName = 'flowering') AND [sellpaddock]_cattle_presence = 'on') then
               stockage = [sellpaddock].[sellstockmodule].age_all/30.4375
               stockwt = [sellpaddock].[sellstockmodule].weight_all
               stocknumber = [sellpaddock].[sellstockmodule].number_all
               [sellpaddock].[sellstockmodule]scienceconverter sellstock number = stocknumber (-)
               [buypaddock].[buystockmodule]scienceconverter buystock number = stocknumber (-), genotype = '[genotype]', sex = [sex], age = stockage (months), weight = stockwt (kg)
               [sellpaddock]_cattle_presence = 'off'
               [buypaddock]_cattle_presence = 'on'
          endif
          ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Move properties" />
          <sellpaddock type="modulename" description="Name of sell paddock : ">Paddock</sellpaddock>
          <sellstockmodule type="modulename" description="Name of stock module in sell paddock : ">stock</sellstockmodule>
          <buypaddock type="modulename" description="Name of buy paddock : ">Paddock</buypaddock>
          <buystockmodule type="modulename" description="Name of stock module in buy paddock: ">stock</buystockmodule>
          <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
          <minimum_wt_change type="text" description="Minimum weight gain (kg/day) : ">0</minimum_wt_change>
          <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
        </ui>
      </manager>
      <manager name="Buy cattle on feed-on-offer">
        <script>
          <text>
               cattle_presence = 'off'
            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
           if ([stockmodule].number_all > 0) then
               cattle_presence = 'on'
            endif
        if ([herbage_module].biomass >= [buy_feed_on_offer] AND cattle_presence = 'off') then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           cattle_presence = 'on'
        endif
               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Buy properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
          <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
          <buy_feed_on_offer type="text" description="Feed on offer (kg/ha) : ">1500.0</buy_feed_on_offer>
          <buy_number type="text" description="Number of stock : ">5</buy_number>
          <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
          <buy_age type="text" description="Age (months) : ">12</buy_age>
          <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
        </ui>
      </manager>
      <manager name="Buy cattle on feed-on-offer test">
        <script>
          <text>
               [paddockname]_cattle_presence = 'off'
               buy_count = 0
            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
           if ('[paddockname]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if ([herbage_module].StageName = 'out') then
                 buy_count = 0
              endif
              if ([herbage_module].biomass >= [buy_feed_on_offer] AND cattle_presence = 'off' AND buy_count = 0) then
                 [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
                 cattle_presence = 'on'
                 buy_count = buy_count + 1
              endif
           else
               if ([paddockname].[stockmodule].number_all > 0) then
                  [paddockname]_cattle_presence = 'on'
               endif
              if ([paddockname].[herbage_module].StageName = 'out') then
                 buy_count = 0
              endif
              if ([paddockname].[herbage_module].biomass >= [buy_feed_on_offer] AND cattle_presence = 'off' AND buy_count = 0) then
                 [paddockname].[stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
                 [paddockname]_cattle_presence = 'on'
                 buy_count = buy_count + 1
              endif
           endif
         ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Buy properties" />
          <paddockname type="modulename" description="Name of paddock (nil if none) : ">nil</paddockname>
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
          <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
          <buy_feed_on_offer type="text" description="Feed on offer (kg/ha) : ">1500.0</buy_feed_on_offer>
          <buy_number type="text" description="Number of stock : ">5</buy_number>
          <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
          <buy_age type="text" description="Age (months) : ">12</buy_age>
          <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
        </ui>
      </manager>
      <manager name="Sell cattle on a fixed date">
        <script>
          <text>
              if ([stockmodule].number_all &gt; 0) then
                  cattle_presence = 'on'
              endif
              if (today = date('[sell_date]') AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
              endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Sell properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <sell_date type="text" description="Date (dd-mmm) : ">1-jan</sell_date>
          <sell_number type="text" description="Number of stock : ">5</sell_number>
        </ui>
      </manager>
      <manager name="Sell cattle on weight test">
        <script>
          <text><![CDATA[
           if ('[sellpaddock]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
             if ((stock.weight >= [sell_on_weight]) AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
             endif
           else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
             if ([sellpaddock].[stockmodule].weight_all >= [sell_on_weight]) AND cattle_presence = 'on') then
                 [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 [sellpaddock]_cattle_presence = 'off'
              endif
           endif
         ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Sell properties" />
          <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <sell_on_weight type="text" description="LiveWeight for sale : ">350.0</sell_on_weight>
          <sell_number type="text" description="Number of stock : ">100</sell_number>
        </ui>
      </manager>
      <manager name="Sell cattle on weight loss">
        <script>
          <text>
            numdaysweightloss = 0
        </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
            if ('[sellpaddock]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if ([stockmodule].wt_change_all < 0.0) then
                 numdaysweightloss = numdaysweightloss + 1
              endif
              if ((numdaysweightloss >= [sell_on_days_weight_loss]) AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
                 maxstockwt = -1
              endif
            else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
               if ([sellpaddock]_cattle_presence = 'on') then
                  if ([sellpaddock].[stockmodule].wt_change_all < 0.0) then
                     numdaysweightloss = numdaysweightloss + 1
                  else
                     numdaysweightloss = 0
                  endif
               endif
               if ((numdaysweightloss >= [sell_on_days_weight_loss]) AND [sellpaddock]_cattle_presence = 'on') then
                  [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                  [sellpaddock]_cattle_presence = 'off'
               endif
            endif
         ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Sell properties" />
          <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <sell_on_days_weight_loss type="text" description="Number of days of weight loss : ">2.0</sell_on_days_weight_loss>
          <sell_number type="text" description="Number of stock : ">100</sell_number>
        </ui>
      </manager>
      <manager name="Sell cattle below minimum declining weight change">
        <script>
          <text>
            numdaysweightchange = 0
            wt_change_yesterday = 0
        </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
            if ('[sellpaddock]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if (cattle_presence = 'on') then
                 if ([stockmodule].wt_change_all < [sell_min_weight_change] AND [stockmodule].wt_change_all < wt_change_yesterday)then
                    numdaysweightchange = numdaysweightchange + 1
                 else
                    numdaysweightchange = 0
                 endif
              endif
              if ((numdaysweightchange >= [sell_on_days_weight_change] OR ([stockmodule].intake_all < 0.001)) AND cattle_presence = 'on') then
                 [stockmodule].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
                 maxstockwt = -1
              endif
              wt_change_yesterday = wt_change_all
            else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
               if ([sellpaddock]_cattle_presence = 'on') then
                  if ([sellpaddock].[stockmodule].wt_change_all < [sell_min_weight_change] AND [sellpaddock].[stockmodule].wt_change_all < wt_change_yesterday) then
                     numdaysweightchange = numdaysweightchange + 1
                  else
                     numdaysweightchange = 0
                  endif
               endif
               if ((numdaysweightchange >= [sell_on_days_weight_change] OR ([sellpaddock].[stockmodule].intake_all < 0.001)) AND [sellpaddock]_cattle_presence = 'on') then
                  [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                  [sellpaddock]_cattle_presence = 'off'
               endif
               wt_change_yesterday = [sellpaddock].[stockmodule].wt_change_all
            endif
         ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Sell properties" />
          <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <sell_min_weight_change type="text" description="Minimum Weight change : ">0.2</sell_min_weight_change>
          <sell_on_days_weight_change type="text" description="Number of days below weight change : ">2.0</sell_on_days_weight_change>
          <sell_number type="text" description="Number of stock : ">100</sell_number>
        </ui>
      </manager>
      <manager name="Sell cattle on minimum condition score change">
        <script>
          <text>
            numdays_cond_score_diminishing = 0
            cond_score_yesterday = 0
        </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
            if ('[sellpaddock]' = 'nil') then
               if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
               endif
              if (cattle_presence = 'on') then
                 cond_score_change = [stockmodule].cond_score - cond_score_yesterday
                 if (cond_score_change < [sell_min_cond_score_change])then
                    numdays_cond_score_diminishing = numdays_cond_score_diminishing + 1
                 else
                    numdays_cond_score_diminishing = 0
                 endif
              endif
              if ((numdays_cond_score_diminishing >= [sell_on_days_cond_score_change] OR ([stockmodule].intake_all < 0.001)) AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
                 maxstockwt = -1
              endif
              cond_score_change_yesterday = cond_score_change
              cond_score_yesterday = cond_score
            else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
               if ([sellpaddock]_cattle_presence = 'on') then
                  cond_score_change = [sellpaddock].[stockmodule].cond_score - cond_score_yesterday
                  if (cond_score_change < [sell_min_cond_score_change]) then
                     numdays_cond_score_diminishing = numdays_cond_score_diminishing + 1
                  else
                     numdays_cond_score_diminishing = 0
                  endif
               endif
               if ((numdays_cond_score_diminishing >= [sell_on_days_cond_score_change] OR ([sellpaddock].[stockmodule].intake_all < 0.001)) AND [sellpaddock]_cattle_presence = 'on') then
                  [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                  [sellpaddock]_cattle_presence = 'off'
               endif
               cond_score_yesterday = [sellpaddock].[stockmodule].cond_score
            endif
         ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Sell properties" />
          <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <sell_min_cond_score_change type="text" description="Minimum condition score change : ">-0.001</sell_min_cond_score_change>
          <sell_on_days_cond_score_change type="text" description="Number of days below cond score change : ">2.0</sell_on_days_cond_score_change>
          <sell_number type="text" description="Number of stock : ">100</sell_number>
        </ui>
      </manager>
      <manager name="Sell cattle on weight">
        <script>
          <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               cattle_presence = 'on'
            endif
        if (([stockmodule].weight >= [sell_on_weight_gain] OR [stockmodule].weight <= [sell_on_weight_loss]) AND cattle_presence = 'on') then
           [stockmodule]scienceconverter sellstock number = [sell_number] (-)
           cattle_presence = 'off'
        endif
               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Sell properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <sell_on_weight_gain type="text" description="Weight (gaining) : ">350.0</sell_on_weight_gain>
          <sell_on_weight_loss type="text" description="Weight (losing) : ">0.0</sell_on_weight_loss>
          <sell_number type="text" description="Number of stock : ">5</sell_number>
        </ui>
      </manager>
    </folder>
    <folder name="Sheep">
      <manager name="Buy sheep on a fixed date">
        <script>
          <text>
               sheep_presence = 'off'
            </text>
          <event>init</event>
        </script>
        <script>
          <text>
        if (today = date('[buy_date]') then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           sheep_presence = 'on'
         endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Buy properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <genotype type="list" listvalues="black face x white face,birder keucester, border leicester x merino,columbia,corriedale,delaine-merino,dorset x merino,dorset,finnsheep,hampshire,large merino,medium merino,small merino,polwarth,polypay,romney,ryeland,southdown,suffolk,targhee,texel,US corriedale,US romney,US southdown,US suffolk" description="Select Genotype : ">suffolk</genotype>
          <buy_date type="text" description="Date (dd-mmm) : ">1-jan</buy_date>
          <buy_number type="text" description="Number of stock : ">50</buy_number>
          <sex type="list" listvalues="ewe,wether,ram,crypto" description="Select sex : ">wether</sex>
          <buy_age type="text" description="Age (months) : ">12</buy_age>
          <buy_weight type="text" description="Weight (kg) : ">45</buy_weight>
        </ui>
      </manager>
      <manager name="Buy sheep on feed-on-offer">
        <script>
          <text>
               sheep_presence = 'off'
            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
           if ([herbage_module].biomass >= [buy_feed_on_offer] AND sheep_presence = 'off') then
              [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
              sheep_presence = 'on'
            endif
               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Buy properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <genotype type="list" listvalues="black face x white face,birder keucester, border leicester x merino,columbia,corriedale,delaine-merino,dorset x merino,dorset,finnsheep,hampshire,large merino,medium merino,small merino,polwarth,polypay,romney,ryeland,southdown,suffolk,targhee,texel,US corriedale,US romney,US southdown,US suffolk" description="Select Genotype : ">suffolk</genotype>
          <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
          <buy_feed_on_offer type="text" description="Feed on offer (kg/ha) : ">1500.0</buy_feed_on_offer>
          <buy_number type="text" description="Number of stock : ">50</buy_number>
          <sex type="list" listvalues="ewe,wether,ram,crypto" description="Select sex : ">wether</sex>
          <buy_age type="text" description="Age (months) : ">12</buy_age>
          <buy_weight type="text" description="Weight (kg) : ">45</buy_weight>
        </ui>
      </manager>
      <manager name="Buy variable sheep on green feed-on-offer">
        <script>
          <text>
              sheep_presence = 'off'
              grazing_no = 0
              grazing_days = 0
              gpsm2kgpha = 10.0
              stem_discount = 0.17
            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
            if sheep_presence = 'on' then
               grazing_days = grazing_days + 1
            else
               grazing_days = 0
            endif
            feed_on_offer = ([herbage_module].LeafGreenWt + ([herbage_module].StemGreenWt * stem_discount)) * gpsm2kgpha
            if ((([herbage_module].Stage >= 5) or (feed_on_offer  > [buy_green_leaf_on_offer])) and (sheep_presence = 'off')) then
                leaf = [herbage_module].LeafGreenWt) + [herbage_module].dlt_dm_green_leaf*[est_grazing_days]
                stem = [herbage_module].StemGreenWt) + [herbage_module].dlt_dm_green_stem*[est_grazing_days]
                stock_in = ((leaf + stem * stem_discount) * gpsm2kgpha / ([est_grazing_days] * [est_intake_day]) + 0.5)

                if (stock_in >= [min_buy_number]) then
                   grazing_days = 0
                   [stockmodule]scienceconverter buystock number = stock_in (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
                   sheep_presence = 'on'
                else
                   sheep_presence = 'off'
                endif
            endif
                              ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Buy properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <genotype type="list" listvalues="black face x white face,border leicester,border leicester x merino,columbia,corriedale,delaine-merino,dorset x merino,dorset,finnsheep,hampshire,large merino,medium merino,small merino,polwarth,polypay,romney,ryeland,southdown,suffolk,targhee,texel,US corriedale,US romney,US southdown,US suffolk" description="Select Genotype : ">suffolk</genotype>
          <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
          <buy_green_leaf_on_offer type="text" description="Green feed-on-offer (kg/ha) : ">100.0</buy_green_leaf_on_offer>
          <est_grazing_days type="text" description="Estimated grazing period (days) : ">10</est_grazing_days>
          <est_intake_day type="text" description="Estimated feed intake (kg/head/day) : ">1.2</est_intake_day>
          <min_buy_number type="text" description="Threshold buy number below which no stock are bought : ">30</min_buy_number>
          <sex type="list" listvalues="ewe,wether,ram,crypto" description="Select sex : ">wether</sex>
          <buy_age type="text" description="Age (months) : ">12</buy_age>
          <buy_weight type="text" description="Weight (kg) : ">45</buy_weight>
        </ui>
      </manager>
      <manager name="Sell sheep on a fixed date">
        <script>
          <text>
           if ( [stockmodule].number_all &gt; 0) then
               sheep_presence = 'on'
            endif
        if (today = date('[sell_date]') AND sheep_presence = 'on') then
           [stockmodule]scienceconverter sellstock number = [sell_number] (-)
           sheep_presence = 'off'
        endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Sell properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <sell_date type="text" description="Date (dd-mmm) : ">1-jan</sell_date>
          <sell_number type="text" description="Number of stock : ">50</sell_number>
        </ui>
      </manager>
      <manager name="Sell sheep on weight">
        <script>
          <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
        if (([stockmodule].weight >= [sell_on_weight_gain] OR [stockmodule].weight <= [sell_on_weight_loss]) AND sheep_presence = 'on') then
           [stockmodule]scienceconverter sellstock number = [sell_number] (-)
           sheep_presence = 'off'
        endif
               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Sell properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <sell_on_weight_gain type="text" description="Weight (gaining) : ">60.0</sell_on_weight_gain>
          <sell_on_weight_loss type="text" description="Weight (losing) : ">0.0</sell_on_weight_loss>
          <sell_number type="text" description="Number of stock : ">50</sell_number>
        </ui>
      </manager>
      <manager name="Sell sheep on green feed-on-offer">
        <script>
          <text>
              gpsm2kgpha = 10.0
              stem_discount = 0.17
            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
           feed_on_offer = ([herbage_module].LeafGreenWt + ([herbage_module].StemGreenWt * stem_discount)) * gpsm2kgpha
            if (feed_on_offer < [sell_on_green_leaf] and sheep_presence = 'on') then
                stock_sell = [stockmodule].number_all
                [stockmodule]scienceconverter sellstock number = stock_sell
                sheep_presence = 'off'
            endif
                              ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Sell properties" />
          <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
          <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
          <sell_on_green_leaf type="text" description="Green feed-on-offer (kg/ha) : ">50.0</sell_on_green_leaf>
        </ui>
      </manager>
    </folder>
    <folder name="Supplement">
      <manager name="Buy supplement on a fixed date">
        <script>
          <text>
        if (today = date('[buy_date]') then
           [supplementmodule]scienceconverter buysupplement supplement = [buy_name] (-), amount = [buy_amount] (kg)
         endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Buy properties" />
          <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
          <buy_date type="text" description="Date (dd-mmm) : ">1-jan</buy_date>
          <buy_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</buy_name>
          <buy_amount type="text" description="Fresh weight of supplement to purchase (kg) : ">1000</buy_amount>
        </ui>
      </manager>
      <manager name="Mix supplement on a fixed date">
        <script>
          <text>
        if (today = date('[mix_date]') then
           [supplementmodule]scienceconverter mixsupplement src_store = [src_store_name] (-), amount = [mix_amount] (kg), dest_store = [dest_store_name] (-)
         endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Mix properties" />
          <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
          <mix_date type="text" description="Date (dd-mmm) : ">1-jan</mix_date>
          <src_store_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the source supplement store. : ">wheat</src_store_name>
          <dest_store_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the destination store. : ">wheat</dest_store_name>
          <mix_amount type="text" description="Fresh weight of supplement to transfer. (kg) : ">1000</mix_amount>
        </ui>
      </manager>
      <manager name="Feed supplement in a fixed date window">
        <script>
          <text>
        if (date_within('[feed_start_date], [feed_end_date]') = 1) then
           [supplementmodule]scienceconverter feedsupplement supplement = [feed_name] (-), amount = [feed_amount] (kg)
         endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Feed properties" />
          <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
          <feed_start_date type="text" description="Date (dd-mmm) : ">1-jan</feed_start_date>
          <feed_end_date type="text" description="Date (dd-mmm) : ">1-jan</feed_end_date>
          <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
          <feed_amount type="text" description="Fresh weight of supplement to purchase (kg) : ">1000</feed_amount>
        </ui>
      </manager>
      <manager name="Feed supplement on animal condition">
        <script>
          <text>
         FALSE = 0
         TRUE = 1
         feeding = FALSE
         feed_rate = 0.0     ! Rate of feeding in kg FW/day
         feed_rate_factor = 0.2
         est_lag_days = 10.0 / feed_rate_factor
         initial_feed_rate = 0.0

            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
            dlt_cond_score = cond_score_all - yest_cond_score_all
            yest_cond_score_all = cond_score_all
            if (feeding = TRUE AND cond_score_all = 0.0) then
               feeding = FALSE
            endif

            if ((feeding = FALSE) AND (cond_score_all < [crit_cs]) AND (dlt_cond_score < 0.0)) then
               feeding = TRUE
               feed_rate = initial_feed_rate
            else
               ! leave feeding as is
            endif

            if (feeding = TRUE) then
               feed_rate = feed_rate - feed_rate_factor * (cond_score_all + dlt_cond_score*est_lag_days - [crit_cs])
               if (feed_rate > [max_feed_rate]) then
                  feed_rate = [max_feed_rate]
               elseif (feed_rate < 0.0) then
                  feed_rate = 0.0
               endif
               if (feed_rate > 0) then
                   feed_amount = feed_rate * number_all
                   [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
               else
                  feed_rate = 0.0
               endif
            else
               feed_rate = 0.0
            endif

               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Feed properties" />
          <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
          <crit_cs type="text" description="Critical condition score. 1.0 is sensible for dry stock : ">1.0</crit_cs>
          <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
          <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
        </ui>
      </manager>
      <manager name="Feed supplement on animal condition loss">
        <script>
          <text>
         FALSE = 0
         TRUE = 1
         feeding = FALSE
         feed_rate = 0.0     ! Rate of feeding in kg FW/day
         crit_cs = 0.0
         feed_rate_factor = 0.2
         est_lag_days = 10.0 / feed_rate_factor
         initial_feed_rate = 0.0
         yest_cond_score_all = 0.0
            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
         dlt_cond_score = cond_score_all - yest_cond_score_all
         yest_cond_score_all = cond_score_all
            if (feeding = TRUE AND cond_score_all = 0.0) then
               crit_cs = 0.0
               feeding = FALSE
            endif

            if (dlt_cond_score[[days]] < [crit_condition_change] AND crit_cs <= 0.0) then
               crit_cs = cond_score_all
            endif
            if ((feeding = FALSE) AND (cond_score_all < crit_cs)) then
               feeding = TRUE
               feed_rate = initial_feed_rate
            else
               ! leave feeding as is
            endif

            if (feeding = TRUE) then
               feed_rate = feed_rate - feed_rate_factor * (cond_score_all + dlt_cond_score*est_lag_days - crit_cs)
               if (feed_rate > [max_feed_rate]) then
                  feed_rate = [max_feed_rate]
               elseif (feed_rate < 0.0) then
                  feed_rate = 0.0
               endif
               if (feed_rate > 0) then
                   feed_amount = feed_rate * number_all
                   [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
               else
                  feed_rate = 0.0
               endif
            else
               feed_rate = 0.0
            endif

               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Feed properties" />
          <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
          <days type="text" description="Number of days to sum condition change : ">5</days>
          <crit_condition_change type="text" description="Critical condition change needed to start feeding (kg/head) : ">0.0</crit_condition_change>
          <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
          <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
        </ui>
      </manager>
      <manager name="Feed supplement on animal weight loss">
        <script>
          <text>
         FALSE = 0
         TRUE = 1
         feeding = FALSE
         feed_rate = 0.0     ! Rate of feeding in kg FW/day
         crit_wt = 0.0
         feed_rate_factor = 0.5
         est_lag_days = 10.0 / feed_rate_factor
         initial_feed_rate = 0.1
            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
            if (feeding = TRUE AND cond_score_all = 0.0) then
               crit_wt = 0.0
               feeding = FALSE
            endif

            if (wt_change_all[[days]] < [crit_wt_change] AND crit_wt <= 0.0) then
               crit_wt = weight_all
            endif
            if ((feeding = FALSE) AND (weight_all < crit_wt)) then
               feeding = TRUE
               feed_rate = initial_feed_rate
            else
               ! leave feeding as is
            endif

            if (feeding = TRUE) then
               feed_rate = feed_rate - feed_rate_factor * (weight_all + wt_change_all*est_lag_days - crit_wt)
               if (feed_rate > [max_feed_rate]) then
                  feed_rate = [max_feed_rate]
               elseif (feed_rate < 0.0) then
                  feed_rate = 0.0
               endif
               if (feed_rate > 0) then
                   feed_amount = feed_rate * number_all
                   [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
               else
                  feed_rate = 0.0
               endif
            else
               feed_rate = 0.0
            endif

               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Feed properties" />
          <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
          <days type="text" description="Number of days to sum weight change : ">5</days>
          <crit_weight_change type="text" description="Critical weight change needed to start feeding (kg/head) : ">0.0</crit_weight_change>
          <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
          <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
        </ui>
      </manager>
      <manager name="Feed supplement to reach a target weight">
        <script>
          <text>
         feed_rate = 0.0     ! Rate of feeding in kg FW/day

            </text>
          <event>init</event>
        </script>
        <script>
          <text><![CDATA[
            if (date_within('[date_start_feed], [date_end_feed]') = 1) then
               days_left = date('[date_end_feed]') - date('[date_start_feed]')
               if (days_left < 0.0) then
                  days_left = days_left + 365.0
               endif
               if (days_left > 0) then
                  dwt_reqd = ([target_wt] - stock.weight_all) / days_left

                  feed_rate = feed_rate + (2.0 * (dwt_reqd - wt_change_all))
                  if (feed_rate > [max_feed_rate]) then
                     feed_rate = [max_feed_rate]
                  elseif (feed_rate < 0.0) then
                     feed_rate = 0.0
                  endif

                  if (feed_rate > 0) then
                     if (today = date('[date_start_feed]') then
                        feed_rate = feed_rate * 0.5
                     endif
                      feed_amount = feed_rate * number_all
                      [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
                  else
                     feed_rate = 0.0
                  endif
               endif
            endif

               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category type="category" description="Feed properties" />
          <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
          <date_start_feed type="text" description="date to begin feeding (dd-mmm) : ">1-jan</date_start_feed>
          <date_end_feed type="text" description="date to end feeding (dd-mmm) : ">1-jan</date_end_feed>
          <target_wt type="text" description="Target weight per head to finish (kg) : ">1.0</target_wt>
          <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
          <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
        </ui>
      </manager>
    </folder>
  </folder>
  <folder name="TCL Manager">
    <tclmanager name="Empty Manager">
      <rule name="Logic">
        <script name="init">
          <text>
          </text>
          <event>init</event>
        </script>
        <script name="prepare">
          <text>
          </text>
          <event>prepare</event>
        </script>
        <script name="end_simulation">
          <text>
          </text>
          <event>end_simulation</event>
        </script>
      </rule>
    </tclmanager>
    <tclmanager name="Common tasks">
      <rule name="Sow using esw and rainfall">
        <ui>
          <category type="category" description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">25</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">7</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">100</esw_amount>
          <category type="category" description="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
          <class type="classes" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        </ui>
        <script name="init">
          <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {crop_class  [class]}
}

# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
          <event>init</event>
        </script>
        <script name="start_simulation">
          <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}</text>
          <event>start_simulation</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      if {( [apsimGet rain\[[rainnumdays]\]] >= [raincrit] && [apsimGet esw] >= [esw_amount] ) ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}

]]></text>
          <event>prepare</event>
        </script>
      </rule>
      <rule name="Sow using fasw in top layer">
        <ui>
          <category type="category" description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <fasw_amount type="text" description="sw above ll15 in top layer (mm): ">20</fasw_amount>
          <category type="category" description="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
          <class type="classes" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        </ui>
        <script name="init">
          <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {crop_class  [class]}
}

# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
          <event>init</event>
        </script>
        <script name="start_simulation">
          <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}
set sw1f_[crop] [expr [fasw_amount] / [lindex [apsimGet dlayer] 0] + [lindex [apsimGet ll15] 0]] 
</text>
          <event>start_simulation</event>
        </script>
        <script name="prepare">
          <text><![CDATA[


if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      set sw1 [lindex [apsimGet sw] 0]
      if {$sw1 >= $sw1f_[crop] ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}

]]></text>
          <event>prepare</event>
        </script>
      </rule>
      <rule name="Sow on a fixed date">
        <ui>
          <category type="category" description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing date (dd-mmm) : ">15-may</date1>
          <category type="category" description="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
          <class type="classes" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        </ui>
        <script name="init">
          <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {crop_class  [class]}
}


##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
          <event>init</event>
        </script>
        <script name="start_simulation">
          <text>
          </text>
          <event>start_simulation</event>
        </script>
        <script name="prepare">
          <text>


if {[dateIs [date1]] } {
    sow_[crop]
}


</text>
          <event>prepare</event>
        </script>
      </rule>
      <rule name="Harvesting rule">
        <ui>
          <category type="category" />
          <crop type="crop" description="Enter name of crop to harvest when ripe : ">cotton</crop>
        </ui>
        <script name="post">
          <text><![CDATA[
  if {[apsimGet [crop].ozcot_status] > 0} {
    apsimSendMessage [crop]  harvest
    apsimSendMessage [crop]  end_crop
  }

      ]]></text>
          <event>post</event>
        </script>
      </rule>
      <rule name="Cotton sowing rule">
        <ui>
          <category type="category" description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">100</esw_amount>
          <category type="category" description="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">cotton</crop>
          <density type="text" description="Enter sowing density  (plants/m2 in row) : ">10</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">siok</cultivar>
          <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
          <skiprow type="list" listvalues="0, 1, 2" description="Skip row : ">0</skiprow>
        </ui>
        <script name="init">
          <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants_pm [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]}
}

# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
          <event>init</event>
        </script>
        <script name="start_simulation">
          <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}</text>
          <event>start_simulation</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      if {( [apsimGet rain\[[rainnumdays]\]] >= [raincrit] && [apsimGet esw] >= [esw_amount] ) ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}

]]></text>
          <event>prepare</event>
        </script>
      </rule>
      <rule name="Cotton harvesting rule">
        <ui>
          <category type="category" />
          <crop type="crop" description="Enter name of crop to harvest when ripe : ">cotton</crop>
        </ui>
        <script name="post">
          <text><![CDATA[
  if {[apsimGet [crop].ozcot_status] > 0} {
    apsimSendMessage [crop]  harvest
    apsimSendMessage [crop]  end_crop
  }

      ]]></text>
          <event>post</event>
        </script>
      </rule>
      <rule name="Sorghum sowing rule">
        <ui>
          <category name="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">sorghum</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">7</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : ">early</cultivar>
          <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
          <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
        </ui>
        <script name="init">
          <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {skiprow  [skiprow]}
}

# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
          <event>init</event>
        </script>
        <script name="start_simulation">
          <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}</text>
          <event>start_simulation</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      if {( [apsimGet rain\[[rainnumdays]\]] >= [raincrit] && [apsimGet esw] >= [esw_amount] ) ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}

]]></text>
          <event>prepare</event>
        </script>
      </rule>
      <rule name="Lucerne Ley fixed sow harvest at flowering">
        <ui>
          <category type="category" />
          <date type="text" description="Enter sowing date (dd-mmm-yyyy) : ">1-jan</date>
          <category type="category" />
          <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">trifecta</cultivar>
          <class type="classes" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
          <category type="category" />
          <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
          <category type="category" />
          <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
          <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
          <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
        </ui>
        <script name="init">
          <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]}
}


# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

set [crop]LeyYears [leyyears]
]]></text>
          <event>init</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
if {[paddockIsFallow] && [dateIs [date]] && 
    $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]") } {
    sow_[crop]
    set [crop]LeyYears [leyyears]
    set ChooseNextCrop "yes"
}
]]></text>
          <event>prepare</event>
        </script>
        <script name="post">
          <text><![CDATA[
if {[apsimGet [crop].stagename] == "flowering" } {
   apsimSendMessage [crop]  harvest {height [harvest_ht]}
}

if {[dateIs [killdate]] && [apsimGet [crop].plant_status] != "out"} {
  if {$[crop]LeyYears > 0} {
    set [crop]LeyYears [expr $[crop]LeyYears - 1]
  } else {
    apsimSendMessage [crop] end_crop
  }
}  
  ]]></text>
          <event>post</event>
        </script>
        <script name="start_simulation">
          <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}
</text>
          <event>start_simulation</event>
        </script>
      </rule>
      <rule name="Lucerne Ley variable sowing harvest at flowering">
        <ui>
          <category type="category" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category type="category" />
          <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">trifecta</cultivar>
          <class type="classes" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
          <category type="category" />
          <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
          <category type="category" />
          <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
          <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
          <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
        </ui>
        <script name="init">
          <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]}
}


# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

set [crop]LeyYears 0
]]></text>
          <event>init</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      if {( [apsimGet rain\[[rainnumdays]\]] >= [raincrit] && [apsimGet esw] >= [esw_amount] ) ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set [crop]LeyYears [leyyears]
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}
]]></text>
          <event>prepare</event>
        </script>
        <script name="post">
          <text><![CDATA[
if {[apsimGet [crop].stagename] == "flowering" } {
   apsimSendMessage [crop]  harvest {height [harvest_ht]}
}

if {[dateIs [killdate]] && [apsimGet [crop].plant_status] != "out"} {
  if {$[crop]LeyYears > 0} {
    set [crop]LeyYears [expr $[crop]LeyYears - 1]
  } else {
    apsimSendMessage [crop] end_crop
  }
}  
  ]]></text>
          <event>post</event>
        </script>
        <script name="start_simulation">
          <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}
</text>
          <event>start_simulation</event>
        </script>
      </rule>
      <rule name="Fertilise in a zadok stage window">
        <script name="init">
          <text>
            set fert_applied_[crop]_[zadok_fert_stage_begin]_[zadok_fert_stage_end] 0
        </text>
          <event>init</event>
        </script>
        <script name="sowing">
          <text>
            set fert_applied_[crop]_[zadok_fert_stage_begin]_[zadok_fert_stage_end] 0
        </text>
          <event>sowing</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
         set z [apsimGet [crop].zadok_stage]
         if { $z >= [zadok_fert_stage_begin] &&
              $z <= [zadok_fert_stage_end] &&
              fert_applied_[crop]_[zadok_fert_stage_begin]_[zadok_fert_stage_end] == 0} {
            if {[apsimGet esw] >= [esw_amount]} {
               set N_topsoil [expr [lrange [apsimGet no3] 0 1] + [lrange [apsimGet nh4] 0 1]]
               if {$N_topsoil < [fert_criteria]} {
                  a[simSendMessage [fertmodule] apply {amount [fert_amount]} {depth 50} {type [fert_type]}
                  set fert_applied_[crop]_[zadok_fert_stage_begin]_[zadok_fert_stage_end] 1
               }
            }
         }
         ]]></text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <zadok_fert_stage_begin type="text" description="Enter start of zadok window (10-71):   ">30</zadok_fert_stage_begin>
          <zadok_fert_stage_end type="text" description="Enter end of zadok window (10-71):   ">32</zadok_fert_stage_end>
          <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
          <esw_amount type="text" description="Enter amount of soil water (mm)">30</esw_amount>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">25</fert_amount>
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </rule>
      <rule name="Fertilise on fixed date - top up">
        <script name="prepare">
          <text><![CDATA[
if { [dateIs [fert_date]] } {
   set N_deficit [expr [fert_criteria] - [expr [lrange [apsimGet no3] 0 2] + [lrange [apsimGet nh4] 0 2]]
   apsimSendMessage [fertmodule] apply {amount $N_deficit} {depth 50} {type [fert_type]}
}
          ]]></text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
          <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </rule>
      <rule name="Fertilise on days after sowing - top up">
        <script name="prepare">
          <text><![CDATA[
if {[apsimGet [modulename].daysaftersowing] == [fert_das]} {
   N_deficit = [fert_criteria] - [expr [fert_criteria] - [expr [lrange [apsimGet no3] 0 2] + [lrange [apsimGet nh4] 0 2]]
   if {$N_deficit > 0} {
      apsimSendMessage [fertmodule] apply {amount $N_deficit} {depth 50} {type [fert_type]}
   }
}
     ]]></text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <modulename type="modulename" description="On which crop is fertiliser being applied : ">wheat</modulename>
          <fert_das type="text" description="Enter fertiliser days after sowing  : ">30</fert_das>
          <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </rule>
      <rule name="Irrigate at sowing">
        <script name="[modulename].[eventname]">
          <text><![CDATA[
if {[irrig_amount_evt] > 0} {
   apsimSendMessage [irrigatemodule] apply {amount [irrig_amount_evt]}
}
   ]]></text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should irrigation be applied" />
          <modulename type="modulename" description="The module the event come from : " />
          <eventname type="text" description="Which event should irrigation be applied : ">sowing</eventname>
          <category name="Irrigation application details" />
          <irrigatemodule type="modulename" description="Module used to apply the irrigation : " />
          <irrig_amount_evt type="text" description="Amount of irrigation to apply (mm) : ">50</irrig_amount_evt>
        </ui>
      </rule>
      <rule name="Irrigate on fixed date">
        <script name="prepare">
          <text>
if {[dateIs [irrigate_date]]} {
   apsimSet [irrigate_module].irrigation_efficiency [irrigate_efficiency]
   apsimSendMessage  [irrigate_module] apply {amount [irrigate_amount]}
}
</text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should irrigation be applied" />
          <irrigate_date type="ddmmmdate" description="Enter irrigation date (dd-mmm) : ">dd-mmm</irrigate_date>
          <category name="Irrigation application details" />
          <irrigate_module type="modulename" description="Module used to apply the irrigation : ">ClockAllYears</irrigate_module>
          <irrigate_amount type="text" description="Amount of irrigation to apply (mm) : ">50</irrigate_amount>
          <irrigate_efficiency type="text" description="Irrigation efficiency (0-1) : ">1.0</irrigate_efficiency>
        </ui>
      </rule>
      <rule name="Tillage on fixed date">
        <script name="prepare">
          <text>
if {[dateIs [tillage_date]]} {
   if {"[tillage_type]" == "user_defined"} {
       apsimSendMessage [surfaceommodule] tillage {type [tillage_type]} {f_incorp [tillage_f_incorp]} {tillage_depth [tillage_depth]}
   } else {
       apsimSendMessage [surfaceommodule] tillage {type [tillage_type]}
   }
   set ready_to_till_pre_sow 0
   set till_day_pre_sow 0
endif
      </text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should tillage be done" />
          <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) : ">dd-mmm</tillage_date>
          <category name="Tillage application details" />
          <surfaceommodule type="modulename" description="Module used to apply the tillage : " />
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
        </ui>
      </rule>
      <rule name="Tillage on an event">
        <script name="[modulename].[eventname]">
          <text>
if {"[tillage_type]" == "user_defined"} {
   apsimSendMessage [surfaceommodule] tillage {type [tillage_type]} {f_incorp [tillage_f_incorp]} {tillage_depth [tillage_depth]}
} else {
   apsimSendMessage [surfaceommodule] tillage {type [tillage_type]}
}
      </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should tillage be performed" />
          <modulename type="modulename" description="The module the event come from : ">ClockAllYears</modulename>
          <eventname type="text" description="On which event should tillage be done : ">sowing</eventname>
          <category name="Tillage details" />
          <surfaceommodule type="modulename" description="Module used to apply the tillage : ">ClockAllYears</surfaceommodule>
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
        </ui>
      </rule>
      <rule name="Reset water, nitrogen and surfaceOM on fixed date">
        <script name="prepare">
          <text>
if {[dateIs [reset_date]]} {
   if {"[resetWater]" == "yes"} {
       apsimSendMessage "[soilmodule] Water" reset
   }
   if {"[resetNitrogen]" == "yes"} {
       apsimSendMessage "[soilmodule] Nitrogen" reset
   }
   if {"[resetSurfaceOM]" == "yes"} {
       apsimSendMessage "[surfaceommodule] Water" reset
   }
   apsimSendMessage * reseting
}
      </text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should a reset be done" />
          <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">dd-mmm</reset_date>
          <category name="Reset details" />
          <soilmodule type="modulename" description="Name of your soil module : " />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
          <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
          <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
          <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        </ui>
      </rule>
      <rule name="Reset water, nitrogen and surfaceOM on sowing">
        <script name="[modulename].[eventname]">
          <text>
if {[dateIs [reset_date]]} {
   if {"[resetWater]" == "yes"} {
       apsimSendMessage "[soilmodule] Water" reset
   }
   if {"[resetNitrogen]" == "yes"} {
       apsimSendMessage "[soilmodule] Nitrogen" reset
   }
   if {"[resetSurfaceOM]" == "yes"} {
       apsimSendMessage "[surfaceommodule] Water" reset
   }
   apsimSendMessage * reseting
endif
      </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should a reset be done" />
          <modulename type="modulename" description="The module the event is to come from : ">wheat</modulename>
          <eventname type="text" description="On which event should a reset be done : ">sowing</eventname>
          <category name="Reset details" />
          <soilmodule type="modulename" description="Name of your soil module : " />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">SurfaceOrganicMatter</surfaceommodule>
          <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
          <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
          <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        </ui>
      </rule>
      <rule name="Establish Bambatsi pasture">
        <ui>
          <category description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">1-sep</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">31-dec</date2>
          <raincrit type="text" description="Amount of rainfall : ">15</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <category description="Sowing parameters" />
          <crop type="crop" description="Enter name of module to sow : ">bambatsi</crop>
          <density type="text" description="Enter sowing density  (plants/ha) : ">100</density>
        </ui>
        <script name="init">
          <text>
set [crop]_in 0
           </text>
          <event>init</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
if {[dateWithin [date1] [date2]] && [crop]_in == 0} {
   if ([apsimGet rain\[[rainnumdays]\]] >= [raincrit]} {
      apsimSendMessage [crop]  establish plants = [density], init_section = seedling
      [crop]_in = 1
   }
}
            ]]></text>
          <event>prepare</event>
        </script>
      </rule>
      <rule name="Manage Bambatsi">
        <ui>
          <category description="Cutting criteria" />
          <hmass type="text" description="Enter critical biomass for harvest (kg/ha) : ">2000</hmass>
          <category description="Cutting parameters" />
          <crop type="crop" description="Enter name of module to cut : ">bambatsi</crop>
          <ffraction type="text" description="Enter fraction of foliage removed  (0-1) : ">0.9</ffraction>
          <sfraction type="text" description="Enter fraction of stem removed  (0-1) : ">0.9</sfraction>
        </ui>
        <script name="prepare">
          <text><![CDATA[
if {[apsimGet [crop].biomass] > [hmass] && [crop]_in != 0} {
   [crop] cut {foliage_remove_fr  [ffraction]} {adm_remove_fr [sfraction]}
}
            ]]></text>
          <event>prepare</event>
        </script>
      </rule>
      <rule name="Rotations - Sequential">
        <ui>
          <category type="category" />
          <SummerFallowName type="text" description="Enter summer fallow name : ">sf</SummerFallowName>
          <SummerFallowEndDate type="text" description="Enter summer fallow END date (dd-mmm) : ">15-mar</SummerFallowEndDate>
          <WinterFallowName type="text" description="Enter winter fallow name : ">wf</WinterFallowName>
          <WinterFallowEndDate type="text" description="Enter winter fallow END date (dd-mmm) : ">23-aug</WinterFallowEndDate>
          <category type="category" />
          <crop1 type="crop" description="Enter 1st crop : ">wheat</crop1>
          <crop2 type="crop" description="Enter 2nd crop : ">sf</crop2>
          <crop3 type="crop" description="Enter 3rd crop : ">nil</crop3>
          <crop4 type="crop" description="Enter 4th crop : ">nil</crop4>
          <crop5 type="crop" description="Enter 5th crop : ">nil</crop5>
          <crop6 type="crop" description="Enter 6th crop : ">nil</crop6>
          <crop7 type="crop" description="Enter 7th crop : ">nil</crop7>
          <crop8 type="crop" description="Enter 8th crop : ">nil</crop8>
          <crop9 type="crop" description="Enter 9th crop : ">nil</crop9>
          <crop10 type="crop" description="Enter 10th crop : ">nil</crop10>
          <crop11 type="crop" description="Enter 11th crop : ">nil</crop11>
          <crop12 type="crop" description="Enter 12th crop : ">nil</crop12>
          <crop13 type="crop" description="Enter 13th crop : ">nil</crop13>
          <crop14 type="crop" description="Enter 14th crop : ">nil</crop14>
          <crop15 type="crop" description="Enter 15th crop : ">nil</crop15>
          <crop16 type="crop" description="Enter 16th crop : ">nil</crop16>
          <crop17 type="crop" description="Enter 17th crop : ">nil</crop17>
          <crop18 type="crop" description="Enter 18th crop : ">nil</crop18>
          <crop19 type="crop" description="Enter 19th crop : ">nil</crop19>
          <crop20 type="crop" description="Enter 20th crop : ">nil</crop20>
        </ui>
        <script name="init">
          <text>
set NextCropIndex   1
set NextCrop        ""
set ChooseNextCrop  yes
set SummerFallowIn  no
set WinterFallowIn  no
set FallowIn        no
      </text>
          <event>init</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
if {$ChooseNextCrop == "yes"} {
   if {$NextCropIndex == "1"} {
      set NextCrop "[crop1]"
   } elseif {$NextCropIndex == "2"} {
      set NextCrop "[crop2]"
   } elseif {$NextCropIndex == "3"} {
      set NextCrop "[crop3]"
   } elseif {$NextCropIndex == "4"} {
      set NextCrop "[crop4]"
   } elseif {$NextCropIndex == "5"} {
      set NextCrop "[crop5]"
   } elseif {$NextCropIndex == "6"} {
      set NextCrop "[crop6]"
   } elseif {$NextCropIndex == "7"} {
      set NextCrop "[crop7]"
   } elseif {$NextCropIndex == "8"} {
      set NextCrop "[crop8]"
   } elseif {$NextCropIndex == "9"} {
      set NextCrop "[crop9]"
   } elseif {$NextCropIndex == "10"} {
      set NextCrop "[crop10]"
   } elseif {$NextCropIndex == "11"} {
      set NextCrop "[crop11]"
   } elseif {$NextCropIndex == "12"} {
      set NextCrop "[crop12]"
   } elseif {$NextCropIndex == "13"} {
      set NextCrop "[crop13]"
   } elseif {$NextCropIndex == "14"} {
      set NextCrop "[crop14]"
   } elseif {$NextCropIndex == "14"} {
      set NextCrop "[crop14]"
   } elseif {$NextCropIndex == "15"} {
      set NextCrop "[crop15]"
   } elseif {$NextCropIndex == "16"} {
      set NextCrop "[crop16]"
   } elseif {$NextCropIndex == "17"} {
      set NextCrop "[crop17]"
   } elseif {$NextCropIndex == "18"} {
      set NextCrop "[crop18]"
   } elseif {$NextCropIndex == "19"} {
      set NextCrop "[crop19]"
   } elseif {$NextCropIndex == "20"} {
      set NextCrop "[crop20]"
   }
   
   if {$NextCrop == "nil" || $NextCrop == ""} {
      set NextCrop "[crop1]"
      set NextCropIndex 1
   }
   set NextCropIndex [expr $NextCropIndex + 1]
   set ChooseNextCrop "no"
}

# if the next crop is due to be a fallow and we're within the
# correct date range then put a fallow in.
if {$NextCrop == "[WinterFallowName]"} {
   if {[paddockIsFallow] && $FallowIn == "no"} {
      if {[dateWithin [SummerFallowEndDate] [WinterFallowEndDate]] } {
         set WinterFallowIn "yes"
         set FallowIn "yes"
         set ChooseNextCrop "yes"
      }
   }
} elseif {$NextCrop == "[SummerFallowName]"} {
   if {[paddockIsFallow] && $FallowIn == "no"} {
      if {[dateWithin [WinterFallowEndDate] [SummerFallowEndDate]] } {
         set SummerFallowIn "yes"
         set FallowIn "yes"
         set ChooseNextCrop "yes"
      }
   }
}

# if we currently have a fallow in and we're at the end of the fallow window
# then remove the fallow.
if {$WinterFallowIn == "yes" && [dateIs 1+[WinterFallowEndDate]]} {
   set WinterFallowIn "no"
   set FallowIn "no"
}
if {$SummerFallowIn == "yes" && [dateIs 1+[SummerFallowEndDate]]} {
   set SummerFallowIn "no"
   set FallowIn "no"
}
      ]]></text>
          <event>prepare</event>
        </script>
      </rule>
      <rule name="Sowing fertiliser">
        <ui>
          <category type="category" description="When should fertiliser be applied" />
          <modulename type="modulename" description="On which module should the event come from : ">lucerne</modulename>
          <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
          <category type="category" description="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
          <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">150</fert_amount_sow>
          <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">urea_N</fert_type_sow>
        </ui>
        <script name="[modulename].[eventname]">
          <text>

  apsimSendMessage [fertmodule] apply {amount [fert_amount_sow]} {depth 50} {type [fert_type_sow]}

            </text>
          <event>[modulename].[eventname]</event>
        </script>
      </rule>
    </tclmanager>
    <cropui name="Crop UI">
      <ui>
        <state>Wheat</state>
        <crop>wheat</crop>
        <date1>15-may</date1>
        <date2>10-jul</date2>
        <raincrit>25</raincrit>
        <rainnumdays>3</rainnumdays>
        <esw_amount>50</esw_amount>
        <must_sow>no</must_sow>
        <wait_machinery>no</wait_machinery>
        <cultivar>hartog</cultivar>
        <plants>100</plants>
        <sowing_depth>30</sowing_depth>
        <row_spacing>250</row_spacing>
        <sowing_costs>
        </sowing_costs>
        <sow_tractor>Machinery - 200kwFWA</sow_tractor>
        <sow_implement>Machinery - Precision Planter</sow_implement>
        <fert_type>urea_N</fert_type>
        <fert_cost>???</fert_cost>
        <target_n>
        </target_n>
        <harvest_costs>100</harvest_costs>
        <price>200</price>
        <moisture>12</moisture>
        <harv_tractor>Machinery - 200kwFWA</harv_tractor>
        <harv_implement>Machinery - Plough</harv_implement>
        <criteria type="text" description="criteria">variable</criteria>
        <skipplant type="text" description="skipplant">0</skipplant>
        <skiprow type="text" description="skiprow">0</skiprow>
        <class type="text" description="class">plant</class>
        <module type="text" description="module">plant</module>
      </ui>
      <CustomUI>
        <criteria type="text" description="criteria">variable</criteria>
      </CustomUI>
      <script name="Init">
        <text><![CDATA[
     # Support procedures test
     # Can we plant a crop today?
     proc canPlant_[crop] {} {
     if {"[criteria]" == "variable"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "[date1]-$year"] -format %j]
     set d2 [clock format [clock scan "[date2]-$year"] -format %j]
     
     if {"[must_sow]" == "yes" && $day == $d2} {return 1}
     
     if {$d1 > $d2} {
     set dateOK [expr $day >= $d1 || $day <= $d2]
     } else {
     set dateOK [expr $day >= $d1 && $day <= $d2]
     }
     set rainOK [expr [apsimGet rain\[[rainnumdays]\]] >= [raincrit]]
     set eswOK [expr [apsimGet esw] >= [esw_amount]]
     return [expr $dateOK && $rainOK && $eswOK]
     } elseif {"[criteria]" == "fixed"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "[date1]-$year"] -format %j]
     return [expr $day == $d1]
     } else {
     error "Unknown sowing criteria \"[criteria]\"."
     }
     return "notreached"
     }
     
     # Plant a crop now
     proc sow_[crop] {} {
     if {"[module]" == "plant"} {
     apsimSendMessage [crop] sow {plants [plants]} {sowing_depth [sowing_depth]} \
     {cultivar [cultivar]} {row_spacing [row_spacing]} \
     {skipplant [skipplant]} {skiprow [skiprow]} {crop_class [class]}
     } elseif {"[module]" == "cropmod"} {
     apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} \
     {cultivar [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]}
     } elseif {"[module]" == "growth"} {
     apsimSendMessage [crop] ???
     } elseif {"[module]" == "ozcot"} {
     apsimSendMessage [crop] sow {plants_pm [plants_pm]} {sowing_depth [sowing_depth]} \
     {row_spacing [row_spacing]} {skiprow [skiprow]} {cultivar [cultivar]}
     } elseif {"[module]" == "oryza"} {
     apsimSendMessage [crop] sow {cultivar [cultivar]}
     } elseif {"[module]" == "sorghum"} {
     apsimSendMessage [crop] sow {plants [plants]} {sowing_depth [sowing_depth]} \
     {cultivar [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]} \
     {tiller_no_fertile [tiller_no_fertile]}
     } elseif {"[module]" == "sugar"} {
     apsimSendMessage [crop] sow {plants [plants]} {cultivar [cultivar]} {sowing_depth [sowing_depth]}
     } else {
     error "Unknown crop module \"[module]\"."
     }
     }
             ]]></text>
        <event>init</event>
      </script>
    </cropui>
    <RotPlot name="Rotation Management">
      <rotnode name="Rotations">
        <rule name="Init rule" invisible="yes" condition="init"><![CDATA[package require struct
    ::struct::graph stateGraph
    ]]></rule>
      </rotnode>
    </RotPlot>
    <RugPlotUI name="Rug Plot Graph" />
  </folder>
  <RLink name="R Management">
    <script>
      <text>
      </text>
      <event>init</event>
    </script>
  </RLink>
  <folder name="AgPasture management">
    <manager name="Regular cut and remove (no return)">
      <ui>
        <category description="Regular harvest or grazing" type="category" />
        <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter pasture type">agpasture</AgPasture>
        <date1 type="date" description="Enter the first harvest or grazing date">1/7/1995</date1>
        <amount_type type="list" listvalues="SetResidueAmount,SetRemoveAmount" description="Select the amount type">SetResidueAmount</amount_type>
        <amount type="text" description="Enter herbage amount (kg/ha)">1250</amount>
        <interval type="text" description="Enter the intervals between harvest or grazing (days)">14</interval>
      </ui>
      <script name="end_of_day">
        <text><![CDATA[account = account + 1
   if ( (today = date('[date1]')) or 
         (today >date('[date1]') and account = [interval] ) ) then
                 account = 0
                '[AgPasture]'  graze type = '[amount_type]', amount = [amount] (kg/ha)             
    endif
           

                  

   ]]></text>
        <event>end_of_day</event>
      </script>
      <script name="init">
        <text>account = 0
   somMass = 0
   somN = 0
   urineN =0</text>
        <event>init</event>
      </script>
    </manager>
    <manager name="Cut and remove on fixed dates (no return)">
      <ui>
        <category description="Harvest" type="category" />
        <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter crop name">agpasture</AgPasture>
        <amount type="text" description="Enter harvest amount (kg/ha):">1000</amount>
        <type type="list" listvalues="SetResidueAmount,SetRemoveAmount" description="Enter harvest amount  type">SetResidueAmount</type>
        <date1 type="date" description="Enter harvest date 1">14/10/1966</date1>
        <date2 type="date" description="Enter harvest date 2:">28/10/1966</date2>
      </ui>
      <script name="end_of_day">
        <text>
           if (today = date('[date1]') ) then
                '[AgPasture]' graze type = '[type]', amount = [amount]
            endif
           
           if (today = date('[date2]') ) then
               '[AgPasture]' graze type ='[type]', amount =[amount]
           endif
                  

   </text>
        <event>end_of_day</event>
      </script>
    </manager>
    <manager name="Regular harvest or grazing (with return)">
      <ui>
        <category description="Regular harvest or grazing" type="category" />
        <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter pasture type">agpasture</AgPasture>
        <date1 type="date" description="Enter the first harvest or grazing date">1/7/1900</date1>
        <amount_type type="list" listvalues="SetResidueAmount,SetRemoveAmount" description="Select the amount type">SetResidueAmount</amount_type>
        <amount type="text" description="Enter herbage amount (kg/ha)">1000</amount>
        <interval type="text" description="Enter the intervals between harvest or grazing (days)">21</interval>
        <category description="Material returns" type="category" />
        <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
        <urine_n_frac type="text" description="Fraction of returned nitrogen in urine">0.6</urine_n_frac>
        <urine_depth type="text" description="Urine deposit depth (mm)">150</urine_depth>
      </ui>
      <script name="end_of_day">
        <text><![CDATA[account = account + 1
   dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0
   if ( (today = date('[date1]')) or
        (today >date('[date1]') and account = [interval] )) then
                 account = 0
                 '[AgPasture]' graze type = '[amount_type]', amount = [amount] (kg/ha)
                 digest = DefoliatedDigestibility                 
                 dm_som = HarvestWt * (1-digest)
                           
                 n_removed  = HarvestN *(1.0-[dm_frac])
                 n_returned = HarvestN * [dm_frac]
                 n_som      = n_returned * ( 1.0 - [urine_n_frac] )
                 n_urine    = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                  'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
    endif
    
           

                  

   ]]></text>
        <event>end_of_day</event>
      </script>
      <script name="init">
        <text>account = 0
   </text>
        <event>init</event>
      </script>
    </manager>
    <manager name="Harvest or grazing on fixed dates (with return)">
      <ui>
        <category description="Harvest or grazeing" type="category" />
        <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Select pasture name">agpasture</AgPasture>
        <amount type="text" description="Enter harvest amount (kg/ha):">1000</amount>
        <amount_type type="list" listvalues="SetResidueAmount,SetRemoveAmount" description="Enter harvest amount  type">SetResidueAmount</amount_type>
        <category description="Material returns" type="category" />
        <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
        <urine_n_frac type="text" description="Fraction of returned nitrogen in urine">0.6</urine_n_frac>
        <urine_depth type="text" description="Depth of returned nitrogen in soil profile (mm)">300</urine_depth>
        <category description="Enter dates: (d/mm/yyyy)" type="category" />
        <date1 type="date" description="Date 1">1/10/1990</date1>
        <date2 type="date" description="Date 2">1/11/1990</date2>
        <date3 type="date" description="Date 3">1/12/1990</date3>
      </ui>
      <script name="end_of_day">
        <text>dm_som = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0
   if (today = date('[date1]')) or
      (today = date('[date2]')) or
      (today = date('[date3]'))then
                 '[AgPasture]' graze type = '[amount_type]', amount = [amount] (kg/ha)
                 digest = DefoliatedDigestibility                 
                 dm_som = HarvestWt * (1-digest)
                           
                 n_removed  = HarvestN *(1.0-[dm_frac])
                 n_returned = HarvestN * [dm_frac]
                 n_som      = n_returned * ( 1.0 - [urine_n_frac] )
                 n_urine    = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                  'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
   endif
   </text>
        <event>end_of_day</event>
      </script>
    </manager>
    <manager name="Rotational grazing with herbage mass between two limits">
      <ui>
        <category description="Regular harvest or grazing" type="category" />
        <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum, ryegrass,clover" description="Enter pasture type">agpasture</AgPasture>
        <date1 type="date" description="Enter the first harvest or grazing date">1/7/1900</date1>
        <upper_amount type="text" description="Enter herbage anmount to start grazing (harvest)  (kg/ha)">1800</upper_amount>
        <amount type="text" description="Enter daily amount (kg/ha) or -1 for remove once to residee below">400</amount>
        <lower_amount type="text" description="Enter herbage amount to stop grazing (residue, kg/ha)">1000</lower_amount>
        <category description="Material returns" type="category" />
        <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
        <urine_n_frac type="text" description="Fraction of returned nitrogen in urine">0.6</urine_n_frac>
        <urine_depth type="text" description="Urine deposit depth (mm)">300</urine_depth>
      </ui>
      <script name="end_of_day">
        <text><![CDATA[dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0

   if ( today >= date('[date1]') )  then
          if ( ( [AgPasture].AboveGroundWt  > '[upper_amount]' )  or  (  ( [AgPasture].AboveGroundWt > '[lower_amount]') and (continuegrazing = 1) ) ) then
                 removable_amt  =  [AgPasture].AboveGroundWt - [lower_amount]               
                 if ([amount] = -1 )  or ('[amount]' > removable_amt ) then
                        daily_amt =  removable_amt 
                        continuegrazing = 0
                 else
                        daily_amt = [amount]
                        continuegrazing= 1
                 endif      
                 
                 '[AgPasture]' graze type = 'SetRemoveAmount', amount = daily_amt (kg/ha)                
                 digest = DefoliatedDigestibility                 
                 dm_som = HarvestWt * (1-digest)                        
                 n_removed  = HarvestN *(1.0-[dm_frac])
                 n_returned = HarvestN * [dm_frac]
                 n_som      = n_returned * ( 1.0 - [urine_n_frac] )
                 n_urine    = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                  'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
         endif
    endif
           

                  

   ]]></text>
        <event>end_of_day</event>
      </script>
      <script name="init">
        <text>account = 0
   dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   continuegrazing = 1
   daily_amt = 0</text>
        <event>init</event>
      </script>
    </manager>
    <manager name="Rotation grazing with herbage mass between two limits-clover">
      <ui>
        <category description="Regular harvest or grazing" type="category" />
        <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass,clover" description="Enter pasture type">clover</AgPasture>
        <date1 type="date" description="Enter the first harvest or grazing date">1/7/1900</date1>
        <upper_amount type="text" description="Enter herbage anmount to start grazing (harvest)  (kg/ha)">600</upper_amount>
        <amount type="text" description="Enter daily amount (kg/ha) or -1 for remove once to residee below">100</amount>
        <lower_amount type="text" description="Enter herbage amount to stop grazing (residue, kg/ha)">300</lower_amount>
        <category description="Material returns" type="category" />
        <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
        <urine_n_frac type="text" description="Fraction of returned nitrogen in urine">0.6</urine_n_frac>
        <urine_depth type="text" description="Urine deposit depth (mm)">300</urine_depth>
      </ui>
      <script name="end_of_day">
        <text><![CDATA[dm_som = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0

   if ( today >= date('[date1]') )  then
          if ( ( [AgPasture].AboveGroundWt  > '[upper_amount]' )  or  (  ( [AgPasture].AboveGroundWt > '[lower_amount]') and (continuegrazing = 1) ) ) then
                 removable_amt  =  [AgPasture].AboveGroundWt - [lower_amount]               
                 if ([amount] = -1 )  or ('[amount]' > removable_amt ) then
                        daily_amt =  removable_amt 
                        continuegrazing = 0
                 else
                        daily_amt = [amount]
                        continuegrazing= 1
                 endif      
                 
                '[AgPasture]' graze type = 'SetRemoveAmount', amount = daily_amt (kg/ha)  
                 
                 digest = DefoliatedDigestibility
                 dm_som = HarvestWt * ([1-digest)
                                    
                 n_removed   = [AgPasture].HarvestN *(1-[dm_frac])
                 n_returned  = [AgPasture].HarvestN * [dm_frac]
                 n_som       = n_returned* ( 1 - [urine_n_frac] )
                 n_urine     = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                 'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
         endif
    endif
           

                  

   ]]></text>
        <event>end_of_day</event>
      </script>
      <script name="init">
        <text>account = 0
   dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   continuegrazing = 1
   daily_amt = 0</text>
        <event>init</event>
      </script>
    </manager>
    <manager name="Rotation grazing with herbage mass between two limits-ryegrass">
      <ui>
        <category description="Regular harvest or grazing" type="category" />
        <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass,clover" description="Enter pasture type">ryegrass</AgPasture>
        <date1 type="date" description="Enter the first harvest or grazing date">1/7/1900</date1>
        <upper_amount type="text" description="Enter herbage anmount to start grazing (harvest)  (kg/ha)">750</upper_amount>
        <amount type="text" description="Enter daily amount (kg/ha) or -1 for remove once to residee below">100</amount>
        <lower_amount type="text" description="Enter herbage amount to stop grazing (residue, kg/ha)">300</lower_amount>
        <category description="Material returns" type="category" />
        <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
        <urine_n_frac type="text" description="Fraction of returned nitrogen returned in urine">0.6</urine_n_frac>
        <urine_depth type="text" description="Urine deposit depth (mm)">300</urine_depth>
      </ui>
      <script name="end_of_day">
        <text><![CDATA[dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0

   if ( today >= date('[date1]') )  then
          if ( ( [AgPasture].AboveGroundWt  > '[upper_amount]' )  or  (  ( [AgPasture].AboveGroundWt > '[lower_amount]') and (continuegrazing = 1) ) ) then
                 removable_amt  =  [AgPasture].AboveGroundWt - [lower_amount]               
                 if ([amount] = -1 )  or ('[amount]' > removable_amt ) then
                        daily_amt =  removable_amt 
                        continuegrazing = 0
                 else
                        daily_amt = [amount]
                        continuegrazing= 1
                 endif      
                 
                '[AgPasture]'  graze type = 'SetRemoveAmount', amount = daily_amt (kg/ha)                                   
                 dm_som = HarvestWt * ([1-digest)             
                 
                 n_removed   = [AgPasture].HarvestN *(1-[dm_frac])
                 n_returned  = [AgPasture].HarvestN * [dm_frac]
                 n_som       = n_returned* ( 1 - [urine_n_frac] )
                 n_urine     = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                 'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
         endif
    endif
           

                  

   ]]></text>
        <event>end_of_day</event>
      </script>
      <script name="init">
        <text>account = 0
   dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 =0
   n_urine2 = 0
   continuegrazing = 1
   daily_amt = 0</text>
        <event>init</event>
      </script>
    </manager>
    <manager name="Sow pasture on a fixed date">
      <ui>
        <category description="Sowing criteria" type="category" />
        <date type="text" description="Enter sowing date (d/mmm/yyyy) : ">1/07/1990</date>
        <category description="Sowing parameters" type="category" />
        <pasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter name of pasture to sow : ">agpasture</pasture>
      </ui>
      <script name="start_of_day">
        <text>
           if (today = date('[date]') then
                 [pasture] sow 
            endif
                  </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="End pasture on a fixed date">
      <ui>
        <category description="Harvesting criteria" type="category" />
        <crop type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter name of pasture to end:">agpasture</crop>
        <date type="date" description="Enter ending date :">10/12/1990</date>
      </ui>
      <script name="end_of_day">
        <text>
           if (today = date('[date]') then
                 [crop]  KillCrop KillFracion = 0
           endif

               </text>
        <event>end_of_day</event>
      </script>
    </manager>
  </folder>
  <operations name="Operations Schedule" />
  <accum>
    <variable name="variable">variable</variable>
  </accum>
  <tracker />
  <YPCalc name="YP Calculator" />
  <venlink>
    <model_filename type="filename" description="Name of VENSIM model filename" />
    <variable type="multiedit" description="Name of VENSIM variable(s) that are gettable/settable by APSIM" />
    <ini name="Constants">
      <filename>%apsim%\Examples\Advanced\VenLink\Vensim.ini</filename>
    </ini>
  </venlink>
  <log name="Diagnostic log file" />
  <sysbal name="System balance checker" />
  <tclmanager name="Debugger">
    <rule name="Debugger">
      <ui />
      <script name="init">
        <event>init</event>
        <text><![CDATA[package require Tk
wm withdraw .

package require tkcon
tkcon show
tkcon title "Apsim Debugging Console"
puts "Commands:"
puts " 'c'       - Continue"
puts " 's <n>'   - Step n days (default 1)"
puts " 'p <what>'- Print apsim variable"
puts " 'b <cond>'- Set break condition"
set steps 1
update

# A 4 command debugger:
proc c {}      {uplevel #0 set steps -1}  ;# Continue
proc s {{n 1}} {uplevel #0 set steps $n}  ;# Step n days
proc p {var}   {apsimGet $var}            ;# print apsim variable
proc b {cond}  {global Conds; lappend Conds $cond} ;# set break condition
set Conds {}

# Link an apsim variable
proc link {apsimName tclName} {
   global $tclName; set $tclName {}
   trace variable $tclName r "getLinked $apsimName"
   trace variable $tclName w "setLinked $apsimName"
}
proc getLinked {a n1 n2 op} {uplevel #0 set $n1 [apsimGet $a]}
proc setLinked {a n1 n2 op} {apsimSet $a $n1}

]]></text>
      </script>
\          <script name="process"><event>process</event><text>update
foreach cond $Conds {
  if {[expr $cond]} {
    set steps 1
  }
}

incr steps -1
if {$steps == 0} {tkwait variable steps}
        </text></script></rule>
  </tclmanager>
  <folder name="Rice">
    <manager name="Reset watertable">
      <script>
        <text>water_table = 2000
</text>
        <event>init</event>
      </script>
      <script>
        <text> 
    if DWT= -1.0 then                                                      !Use water table values
    else
            water_table = DWT*1000 - para_height
    endif
</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
        </text>
        <event>end_of_day</event>
      </script>
    </manager>
    <manager name="Pond_depth">
      <ui>
        <category description="Manage pond depth " type="category" />
        <soilmodule type="modulename" description="Name of your soil module : ">BholaSouthBalia06</soilmodule>
        <date1 type="ddmmmdate" description="Start date for ponding (dd-mmm)">1-dec</date1>
        <date2 type="ddmmmdate" description="End date for ponding (dd-mmm)">30-nov</date2>
        <max_dop type="text" description="Maximum depth of pond (mm)">100</max_dop>
        <min_dop type="text" description="Minimum depth of pond for irrigation trigger">20</min_dop>
        <category description="Enable irrigation - to top up pond " type="category" />
        <irrig_yes type="yesno" description="Enable irrigation (yes/no)">yes</irrig_yes>
        <date3 type="ddmmmdate" description="Start date for irrigation (dd-mmm)">1-jan</date3>
        <date4 type="ddmmmdate" description="End date for irrigation (dd-mmm)">15-may</date4>
        <irrig_number type="text" description="Maximum number of irrigations allowed">10</irrig_number>
      </ui>
      <script>
        <text>                                                                                                                                ! Pond  on/off
   if (date_within('[date1], [date2]') = 1) then
            '[soilmodule] Water' set max_pond = [max_dop]
    else
            '[soilmodule] Water' set max_pond = 0
    endif

   if '[irrig_yes]' = 'yes' then                                                                                ! Enable irrigation
     if (date_within('[date3], [date4]') = 1) then                                             ! Enable irrigation
            if rice.plant_status = 'alive' and pond &lt; [min_dop] and count &lt;= [irrig_number] then          ! Top up pond 
                irrig_amount = [max_dop] - pond
                irrigation apply amount = irrig_amount 
                tot_irrig = tot_irrig + irrig_amount
                count = count + 1
            endif
      endif
   endif

    if today = date('[date4]') then                                                                   ! Reset irrigation counter
        count = 0
    endif </text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
count = 0
irrig_amount = 0
max_dop = 100
min_dop = 20</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Pond_depth_with rice">
      <ui>
        <category description="Manage pond depth " type="category" />
        <soilmodule type="modulename" description="Name of your soil module : ">BholaSouthBalia06</soilmodule>
        <date1 type="ddmmmdate" description="Start date for ponding (dd-mmm)">1-dec</date1>
        <date2 type="ddmmmdate" description="End date for ponding (dd-mmm)">30-nov</date2>
        <max_dop type="text" description="Maximum depth of pond (mm)">100</max_dop>
        <min_dop type="text" description="Minimum depth of pond for irrigation trigger">20</min_dop>
        <category description="Enable irrigation - to top up pond " type="category" />
        <irrig_yes type="yesno" description="Enable irrigation (yes/no)">yes</irrig_yes>
        <date3 type="ddmmmdate" description="Start date for irrigation (dd-mmm)">1-jan</date3>
        <date4 type="ddmmmdate" description="End date for irrigation (dd-mmm)">15-may</date4>
        <irrig_number type="text" description="Maximum number of irrigations allowed">10</irrig_number>
      </ui>
      <script>
        <text>                                                                                                                                ! Pond  on/off
   if (date_within('[date1], [date2]') = 1) then
                                         
        if rice.plant_status = 'alive' then
            '[soilmodule] Water' set max_pond = [max_dop]
       else 
            '[soilmodule] Water' set max_pond = 0
       endif
    else
            '[soilmodule] Water' set max_pond = 0
    endif

   if '[irrig_yes]' = 'yes' then                                                                                ! Enable irrigation
     if (date_within('[date3], [date4]') = 1) then                                             ! Enable irrigation
            if rice.plant_status = 'alive' and pond &lt; [min_dop] and count &lt;= [irrig_number] then          ! Top up pond 
                irrig_amount = [max_dop] - pond
                irrigation apply amount = irrig_amount 
                tot_irrig = tot_irrig + irrig_amount
                count = count + 1
            endif
      endif
   endif

    if today = date('[date4]') then                                                                   ! Reset irrigation counter
        count = 0
    endif </text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
count = 0
irrig_amount = 0
max_dop = 100
min_dop = 20</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Rice-Transplant-Cambodia">
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-jul</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">15-jul</date2>
        <must_sow type="yesno" description="Must sow? : ">yes</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">20</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">20</esw_amount>
        <category type="category" description="Crop parameters" />
        <ricemodule type="modulename" description="Name of your soil module : ">rice</ricemodule>
        <ricecultivar type="list" listvalues="Malis_Sral, Sen_Pidao, Phka_Rumdoul, Krasang_Teab" description="Cultivar"> Phka_Rumdoul</ricecultivar>
        <r_sbdur type="text" description="Duration of seedbed">26</r_sbdur>
        <r_nplh type="text" description="Number of plants on hills">11</r_nplh>
        <r_nh type="text" description="Number of hills">25</r_nh>
        <r_nplsb type="text" description="Number of plants per seed bed">1000</r_nplsb>
        <ferttype type="text" description="Fertilizer type">urea</ferttype>
        <sowfert type="text" description="Amount of fertilizer at transplant">0</sowfert>
        <topfert type="text" description="Amount of fertilizer for topdress ">0</topfert>
      </ui>
      <script>
        <text>                                                                                                                                                                     !Transplanted Rice                
                                    
  if (paddock_is_fallow() = 1  and date_within('[date1], [date2]') = 1) then    
        if (rain[[rainnumdays]] &gt;= [raincrit] AND esw &gt;= [esw_amount]) OR
              ('[must_sow]' = 'yes' AND today = date('[date2]')))    then 
                                                                                                                                                                      !sbdur= duration of seedbed
                                                                                                                                                                      !nplh= number of plants on hills
                                                                                                                                                                      !nh= number of hills
                 [ricemodule] sow cultivar = [ricecultivar], establishment = transplant, sbdur = [r_sbdur], nplh = [r_nplh], nh = [r_nh], nplsb = [r_nplsb]
                 fertiliser apply amount = [sowfert], type=[ferttype]              !Inital fertilizer
                 top_dress = 0
                 tot_irrig = 0
         endif
   endif

   if rice.dvs &gt; 0.3 and top_dress = 0 then                                                                                          ! Add top dress fertilizer 
          fertiliser apply amount = [topfert], type = urea
          top_dress = 1
   endif

   if rice.plant_status = 'dead' then                                                                                                       ! Harvest Rice crop
         rice  end_crop
   endif
 
</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
top_dress = 0
tot_irrig = 0
</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Rice-Transplant Aman">
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">1-aug</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">1-sep</date2>
        <must_sow type="yesno" description="Must sow? : ">yes</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">20</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">20</esw_amount>
        <category type="category" description="Crop parameters" />
        <ricemodule type="modulename" description="Name of your rice module : ">rice</ricemodule>
        <ricecultivar type="text" description="Cultivar">BR23</ricecultivar>
        <r_sbdur type="text" description="Duration of seedbed">32</r_sbdur>
        <r_nplh type="text" description="Number of plants on hills">1</r_nplh>
        <r_nh type="text" description="Number of hills">25</r_nh>
        <r_nplsb type="text" description="Number of plants per seed bed">1000</r_nplsb>
        <ferttype type="text" description="Fertilizer type">urea</ferttype>
        <sowfert type="text" description="Amount of fertilizer at transplant">100</sowfert>
      </ui>
      <script>
        <text>                                                                                                                                                                     !Transplanted Rice                
                                    
  if (paddock_is_fallow() = 1  and date_within('[date1], [date2]') = 1) then    
        if (rain[[rainnumdays]] &gt;= [raincrit] AND esw &gt;= [esw_amount]) OR
              ('[must_sow]' = 'yes' AND today = date('[date2]')))    then 
                                                                                                                                                                      !sbdur= duration of seedbed
                                                                                                                                                                      !nplh= number of plants on hills
                                                                                                                                                                      !nh= number of hills
                 [ricemodule] sow cultivar = [ricecultivar], establishment = transplant, sbdur = [r_sbdur], nplh = [r_nplh], nh = [r_nh], nplsb = [r_nplsb]
                 fertiliser apply amount = [sowfert], type=[ferttype]              !Inital fertilizer
                 top_dress = 0
                 tot_irrig = 0
         endif
   endif

   if rice.plant_status = 'dead' then                                                                                                       ! Harvest Rice crop
         rice  end_crop
   endif
 
</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
top_dress = 0
tot_irrig = 0
</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Rice-Transplant Aus">
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">1-apr</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">30-apr</date2>
        <must_sow type="yesno" description="Must sow? : ">yes</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">20</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">20</esw_amount>
        <category type="category" description="Crop parameters" />
        <ricemodule type="modulename" description="Name of your soil module : ">rice</ricemodule>
        <ricecultivar type="text" description="Cultivar">BR23</ricecultivar>
        <r_sbdur type="text" description="Duration of seedbed">32</r_sbdur>
        <r_nplh type="text" description="Number of plants on hills">1</r_nplh>
        <r_nh type="text" description="Number of hills">25</r_nh>
        <r_nplsb type="text" description="Number of plants per seed bed">1000</r_nplsb>
        <ferttype type="text" description="Fertilizer type">urea</ferttype>
        <sowfert type="text" description="Amount of fertilizer at transplant">100</sowfert>
      </ui>
      <script>
        <text>                                                                                                                                                                     !Transplanted Rice                
                                    
  if (paddock_is_fallow() = 1  and date_within('[date1], [date2]') = 1) then    
        if (rain[[rainnumdays]] &gt;= [raincrit] AND esw &gt;= [esw_amount]) OR
              ('[must_sow]' = 'yes' AND today = date('[date2]')))    then 
                                                                                                                                                                      !sbdur= duration of seedbed
                                                                                                                                                                      !nplh= number of plants on hills
                                                                                                                                                                      !nh= number of hills
                 [ricemodule] sow cultivar = [ricecultivar], establishment = transplant, sbdur = [r_sbdur], nplh = [r_nplh], nh = [r_nh], nplsb = [r_nplsb]
                 fertiliser apply amount = [sowfert], type=[ferttype]              !Inital fertilizer
                 top_dress = 0
                 tot_irrig = 0
         endif
   endif

   if rice.plant_status = 'dead' then                                                                                                       ! Harvest Rice crop
         rice  end_crop
   endif
 
</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
top_dress = 0
tot_irrig = 0
</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Rice-Transplant Boro">
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">1-jan</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">15-jan</date2>
        <must_sow type="yesno" description="Must sow? : ">yes</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">20</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">20</esw_amount>
        <category type="category" description="Crop parameters" />
        <ricemodule type="modulename" description="Name of your soil module : ">rice</ricemodule>
        <ricecultivar type="text" description="Cultivar">BR23</ricecultivar>
        <r_sbdur type="text" description="Duration of seedbed">32</r_sbdur>
        <r_nplh type="text" description="Number of plants on hills">1</r_nplh>
        <r_nh type="text" description="Number of hills">25</r_nh>
        <r_nplsb type="text" description="Number of plants per seed bed">1000</r_nplsb>
        <ferttype type="text" description="Fertilizer type">urea</ferttype>
        <sowfert type="text" description="Amount of fertilizer at transplant">100</sowfert>
      </ui>
      <script>
        <text>                                                                                                                                                                     !Transplanted Rice                
                                    
  if (paddock_is_fallow() = 1  and date_within('[date1], [date2]') = 1) then    
        if (rain[[rainnumdays]] &gt;= [raincrit] AND esw &gt;= [esw_amount]) OR
              ('[must_sow]' = 'yes' AND today = date('[date2]')))    then 
                                                                                                                                                                      !sbdur= duration of seedbed
                                                                                                                                                                      !nplh= number of plants on hills
                                                                                                                                                                      !nh= number of hills
                 [ricemodule] sow cultivar = [ricecultivar], establishment = transplant, sbdur = [r_sbdur], nplh = [r_nplh], nh = [r_nh], nplsb = [r_nplsb]
                 fertiliser apply amount = [sowfert], type=[ferttype]              !Inital fertilizer
                 top_dress = 0
                 tot_irrig = 0
         endif
   endif

   if rice.plant_status = 'dead' then                                                                                                       ! Harvest Rice crop
         rice  end_crop
   endif
 
</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
top_dress = 0
tot_irrig = 0
</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Rice-Direct seeding">
      <ui>
        <category type="category" description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-Jul</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">15-jul</date2>
        <must_sow type="yesno" description="Must sow? : ">yes</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">20</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">20</esw_amount>
        <category type="category" description="Crop parameters" />
        <ricemodule type="modulename" description="Name of your rice module : ">rice</ricemodule>
        <ricecultivar type="text" description="Cultivar">local</ricecultivar>
        <r_nplds type="text" description="Number of plants per seed bed (plants/m2)">180</r_nplds>
        <ferttype type="text" description="Fertilizer type">urea</ferttype>
        <sowfert type="text" description="Amount of fertilizer at sowing">0</sowfert>
      </ui>
      <script>
        <text>                                                                                                                                                                     !Transplanted Rice                
                                    
  if (paddock_is_fallow() = 1  and date_within('[date1], [date2]') = 1) then    
        if (rain[[rainnumdays]] &gt;= [raincrit] AND esw &gt;= [esw_amount]) OR
              ('[must_sow]' = 'yes' AND today = date('[date2]')))    then 
                                                                                                            !sbdur= duration of seedbed                                                                                                                                                             !nplh= number of plants on hills
                                                                                                            !nh= number of hills
                 [ricemodule] sow cultivar = [ricecultivar], establishment = direct-seed, nplds = [r_nplds]
                 fertiliser apply amount = [sowfert], type=[ferttype]              !Inital fertilizer
                 top_dress = 0
                 tot_irrig = 0
         endif
   endif

   if rice.plant_status = 'dead' then                                                                                                       ! Harvest Rice crop
         rice  end_crop
   endif
 
</text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>
top_dress = 0
tot_irrig = 0
</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Fertilise on growth stage">
      <ui>
        <category type="category" />
        <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
        <category type="category" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : ">Fertiliser</fertmodule>
        <rice_dvs type="text" description="Rice growth stage to apply fertiliser (0-2) dvs =0.3">0.3</rice_dvs>
        <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">100</fert_amount>
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NO3_N</fert_type>
      </ui>
      <script>
        <text>
  
            N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
            if (N_topsoil &lt; [fert_criteria]) then
                  if rice.dvs &gt; [rice_dvs] and  top_dress = 0 then                                                                                          ! Add top dress fertilizer 
                     [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
                     top_dress = 1
                  endif
            endif
    </text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>top_dress = 0</text>
        <event>init</event>
      </script>
    </manager>
    <manager name="Fertilise and Irrigate Rabi crop">
      <ui>
        <croptype type="crop" description="Crop type">mungbean</croptype>
        <cropdas type="text" description="DAS to apply fertiliser and irrigation">20</cropdas>
        <category description="Fertiliser application details" type="category" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : ">Fertiliser</fertmodule>
        <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">0</fert_amount>
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea" description="Fertiliser type : ">urea_N</fert_type>
        <category description="Irrigation application details" type="category" />
        <irrig_amount type="text" description="Amount of irrigation to apply">0</irrig_amount>
      </ui>
      <script>
        <text>
   if [croptype].daysaftersowing = [cropdas] then        
         [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] (mm)
         irrigation apply amount = [irrig_amount] (mm) 
         tot_irrig = 0              
    endif

    tot_irrig = tot_irrig + irrig_amount
</text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Fertilise on date">
      <ui>
        <category type="category" />
        <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">13-sep</fert_date>
        <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
        <category type="category" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : ">Fertiliser</fertmodule>
        <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">18</fert_amount>
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : "> urea</fert_type>
      </ui>
      <script>
        <text>
         if (today = date('[fert_date]') then
            N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
            if (N_topsoil &lt; [fert_criteria]) then
               [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
            endif
         endif </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Irrigate on date">
      <ui>
        <category type="category" />
        <irrigate_date type="ddmmmdate" description="Enter irrigation date (dd-mmm) : ">06-Sep</irrigate_date>
        <category type="category" />
        <irrigate_module type="modulename" description="Module used to apply the irrigation : ">Irrigation</irrigate_module>
        <irrigate_amount type="text" description="Amount of irrigation to apply (mm) : ">60</irrigate_amount>
        <irrigate_efficiency type="text" description="Irrigation efficiency (0-1) : ">1.0</irrigate_efficiency>
      </ui>
      <script>
        <text>
            if (today = date('[irrigate_date]')) then
               '[irrigate_module]' set irrigation_efficiency = [irrigate_efficiency]
               '[irrigate_module]' apply amount = [irrigate_amount] (mm)
            endif </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="automatic crop irrigation">
      <ui>
        <croptype type="crop" description="Crop type">rice</croptype>
        <cropdas type="text" description="DAS to start irrigation window">20</cropdas>
        <irrig type="list" listvalues="on , off" description="Automatic irrigation (on/noff)"> off</irrig>
        <irrig_fr type="text" description="Critical fraction for irrigation to be applied (0-1)">.99</irrig_fr>
        <irrig_depth type="text" description="Depth for soil water fraction (mm)">100</irrig_depth>
      </ui>
      <script>
        <text>
 
    if [croptype].dae = [cropdas] then         
      irrigation set automatic_irrigation = [irrig]
      irrigation set crit_fr_asw = [irrig_fr]
      irrigation set asw_depth = [irrig_depth]
      count = count + 1
   endif


</text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Rice residue">
      <ui>
        <category description="When should tillage be performed" type="category" />
        <modulename type="modulename" description="The module the event come from : ">rice</modulename>
        <eventname type="text" description="On which event should tillage be done : ">harvesting</eventname>
        <category description="Tillage details" type="category" />
        <surfaceommodule type="modulename" description="Module used to apply the tillage : ">SurfaceOM</surfaceommodule>
        <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">user_defined</tillage_type>
        <tillage_depth type="text" description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
        <tillage_f_incorp type="text" description="User_defined fraction of surface residues to incorporate (0-1): ">0.85</tillage_f_incorp>
      </ui>
      <script>
        <text> if day &gt; 213 then       ! 1-August------------- 40% residue left after Aus compared to 15% after Aman
            '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
 else
            '[surfaceommodule]' tillage type = [tillage_type], f_incorp = 0.60 (), tillage_depth = [tillage_depth]
endif  </text>
        <event>[modulename].[eventname]</event>
      </script>
    </manager>
    <manager name="Rabi residue">
      <ui>
        <category description="When should tillage be performed" type="category" />
        <modulename type="modulename" description="The module the event come from : ">wheat</modulename>
        <eventname type="text" description="On which event should tillage be done : ">harvesting</eventname>
        <category description="Tillage details" type="category" />
        <surfaceommodule type="modulename" description="Module used to apply the tillage : ">SurfaceOM</surfaceommodule>
        <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">user_defined</tillage_type>
        <tillage_depth type="text" description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
        <tillage_f_incorp type="text" description="User_defined fraction of surface residues to incorporate (0-1): ">0.88</tillage_f_incorp>
      </ui>
      <script>
        <text>
            '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
      </text>
        <event>[modulename].[eventname]</event>
      </script>
    </manager>
    <manager name="Fertilise on DAE">
      <ui>
        <category type="category" />
        <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
        <category type="category" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser : ">Fertiliser</fertmodule>
        <rice_dae type="text" description="Days after emergence">20</rice_dae>
        <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">100</fert_amount>
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NO3_N</fert_type>
      </ui>
      <script>
        <text>
  
            N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
            if (N_topsoil &lt; [fert_criteria]) then
                  if rice.dae &gt; [rice_dae] and  top_dress = 0 then                                                                                          ! Add top dress fertilizer 
                     [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
                     top_dress = 1
                  endif
            endif
    </text>
        <event>start_of_day</event>
      </script>
      <script>
        <text>top_dress = 0</text>
        <event>init</event>
      </script>
    </manager>
  </folder>
  <folder name="SugarCane">
    <manager name="Crop lodging">
      <ui>
        <category name="Conditions for lodging" />
        <lodge_wt type="text" description="Weight after which lodging can occur :">2000</lodge_wt>
        <lodge_rain type="text" description="Amount of daily rain to trigger lodging (-1 = off) :">-1</lodge_rain>
      </ui>
      <script>
        <text> 
      if DaysAfterSowing = 1 then
         LodgeFlag = 0
      endif

      if (cane_wt &gt; [lodge_wt]) and (rain &gt; [lodge_rain]) and (LodgeFlag=0) then
         sugar lodge
         chk_lodge = chk_lodge + 1
         LodgeAge = DaysAfterSowing
         LodgeDate = dd_mmm_yyyy
         LodgeFlag = 1
      endif
            </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Residue management pre plantiing">
      <ui>
        <category name="When should tillage be done" />
        <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) :">8-jul</tillage_date>
        <category name="Tillage application details" />
        <surfaceommodule type="modulename" description="Module used to apply the tillage :">SurfaceOrganicMatter</surfaceommodule>
        <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type :">user_defined</tillage_type>
        <tillage_depth description="User_defined depth of incorporation (mm) :">200</tillage_depth>
        <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1):">1</tillage_f_incorp>
      </ui>
      <script>
        <text>if (today = date('[tillage_date]') and (sugar.crop_status = 'out')) then
            if ('[tillage_type]' = 'user_defined') then
                '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
            else
                '[surfaceommodule]' tillage type = [tillage_type]
            endif
endif
</text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Irrigate at DAS">
      <ui>
        <category name="When should irrigation be applied" />
        <irrig_das type="text" description="How many das should irrigation be applied :">20</irrig_das>
        <category name="Irrigation application details" />
        <irrigatemodule type="modulename" description="Module used to apply the irrigation :">irrigation</irrigatemodule>
        <irrig_amount type="text" description="Amount of irrigation to apply (mm) :">30</irrig_amount>
      </ui>
      <script>
        <text>if (sugar.DaysAfterSowing = [irrig_das]) then
            [irrigatemodule] apply amount = [irrig_amount] (mm)
         endif
</text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Irrigate Schedule1">
      <script>
        <text>delaycount = 0
         rain3day = 0
         rain3 = 0
         rain2 = 0
         rain1 = 0
         num_irr = 0
         irr_count = 0
         irr_applied = 0
</text>
        <event>init</event>
      </script>
      <script>
        <text><![CDATA[! Limited irrigation is applied on schedule which is altered by significant rainfall events
 

         rain3 = rain2    !set rain fall 2 days ago
         rain2 = rain1    !set rain fall yesterday
         rain1 = rain      !set rain fall today
         rain3day = rain1 + rain2 + rain3   !total rainfall over last three days

         if (DaysAfterSowing > (plantlen - [dryoff]) and (ratoon_no = 0)) or (DaysAfterSowing > (ratoonlen - [dryoff]) and (ratoon_no > 0)) then
             ! STOP IRRIGATION FOR DRYOFF
             num_irr = 0
             irr_applied = 0
             irr_count = 0
         else
             if delaycount > 0 then
                 delaycount = delaycount - 1
             endif
             if rain3day > [totrain3d] and delaycount < [rain_delay] then
                 delaycount = [rain_delay]
             endif
             if delaycount = 0 and (DaysAfterSowing >= [irrigstart]) and (num_irr < [max_irr]) then
                 [irrigatemodule] apply amount = [irrig_amt] (mm)
                 delaycount = [dai]
                 num_irr = num_irr + [irrig_amt]
                 irr_count = irr_count + 1
                 if irr_applied = 0 then
                     irr_applied = 1
                     chk_first_irr = dd_mmm_yyyy
                 endif
                 chk_last_irr  = dd_mmm_yyyy
             endif
         endif
]]></text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category name="When should irrigation be applied" />
        <irrigstart type="text" description="How many das should irrigation be applied :">57</irrigstart>
        <max_irr type="text" description="Irrigation allocation (mm) :">375</max_irr>
        <dryoff type="text" description="Number of days before harvest to stop irrigating :">98</dryoff>
        <totrain3d type="text" description="How much rain in the last 3 days will delay irrigation :">25</totrain3d>
        <rain_delay type="text" description="How many days is irrigation delayed due to rain :">8</rain_delay>
        <dai type="text" description="Minimum days between irrigations :">14</dai>
        <category name="Irrigation application details" />
        <irrigatemodule type="modulename" description="Module used to apply the irrigation :">irrigation</irrigatemodule>
        <irrig_amt type="text" description="Amount per irrigation (mm) :">37.5</irrig_amt>
      </ui>
    </manager>
    <manager name="Residue application on DAS">
      <script>
        <text>if (sugar.crop_status = 'out') and (day = [surfaceom_date]) then
            '[surfaceommodule]' add_surfaceom name=[surfaceom_name], type = [surfaceom_type], mass=[millmud_amt], cnr=[millmud_cnr] 
            [irrigatemodule] apply amount = [millmud_water]
         endif
</text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category name="When should surface organic matter be applied" />
        <surfaceom_date type="ddmmmdate" description="Enter organic matter aplication date (dd-mmm) :">dd-mmm</surfaceom_date>
        <category name="Residue application details" />
        <surfaceommodule type="modulename" description="Module used to apply the residue :">SurfaceOrganicMatter</surfaceommodule>
        <irrigatemodule type="modulename" description="Module used to apply the irrigation :">Irrigation</irrigatemodule>
        <surfaceom_name type="text" description="Name of organic matter :">Manure</surfaceom_name>
        <surfaceom_type type="text" description="Type of organic matter :">manure</surfaceom_type>
        <surfaceom_amt type="text" description="Amount of organic matter to apply (kgDM/ha) :">30000</surfaceom_amt>
        <surfaceom_cnr type="text" description="C:N of organic matter :">28.7</surfaceom_cnr>
        <surfaceom_water type="text" description="Water in organic matter (mm) :">9.0</surfaceom_water>
      </ui>
    </manager>
    <manager name="Tillage on fixed date">
      <script>
        <text>if (today = date('[tillage_date]') and (sugar.crop_status = 'out')) then
            if ('[tillage_type]' = 'user_defined') then
                '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
            else
                '[surfaceommodule]' tillage type = [tillage_type]
            endif
            ready_to_till_pre_sow = 0
            till_day_pre_sow = 0
         endif
</text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category name="When should tillage be done" />
        <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) :">8-jul</tillage_date>
        <category name="Tillage application details" />
        <surfaceommodule type="modulename" description="Module used to apply the tillage :">SurfaceOrganicMatter</surfaceommodule>
        <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type :">user_defined</tillage_type>
        <tillage_depth description="User_defined depth of seedbed preparation (mm) :">200</tillage_depth>
        <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1):">1</tillage_f_incorp>
      </ui>
    </manager>
    <manager name="Irrigate at planting">
      <script>
        <text><![CDATA[
         if ([irrig_amount_evt] > 0) then
            '[irrigatemodule]' apply amount = [irrig_amount_evt] (mm)
         endif
         totalirrigation = totalirrigation + Irrigation.irrigation

   ]]></text>
        <event>[modulename].[eventname]</event>
      </script>
      <ui>
        <category name="When should irrigation be applied" />
        <modulename type="modulename" description="The module the event come from : ">sugar</modulename>
        <eventname type="text" description="Which event should irrigation be applied : ">sowing</eventname>
        <category name="Irrigation application details" />
        <irrigatemodule type="modulename" description="Module used to apply the irrigation : ">Irrigation</irrigatemodule>
        <irrig_amount_evt type="text" description="Amount of irrigation to apply (mm) : ">20</irrig_amount_evt>
      </ui>
    </manager>
    <manager name="Fertilise at X das">
      <script>
        <text><![CDATA[   if (ratoon_no = 0) and (sugar.DaysAfterSowing = [fertpl_lag]) then
         [fertmodule] apply amount = [fertpl_amt] (kg/ha) , type =  [fert_type] , depth =  80 (mm)
   endif

   if (ratoon_no > 0) and (sugar.DaysAfterSowing = [fertrat_lag]) then
         [fertmodule] apply amount = [fertrat_amt] (kg/ha) , type =  [fert_type] , depth =  80 (mm)
   endif

   totalfertiliser = totalfertiliser + fertiliser.fertilizer]]></text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category name="When should fertiliser be applied" />
        <fertpl_lag type="text" description="Days after planting :">31</fertpl_lag>
        <fertrat_lag type="text" description="Days after harvest :">31</fertrat_lag>
        <category name="Fertiliser application details" />
        <fertmodule type="modulename" description="Module used to apply the fertiliser :">fertiliser</fertmodule>
        <fertpl_amt type="text" description="Amount of fertiliser to apply to plant crop (kg/ha) :">22.5</fertpl_amt>
        <fertrat_amt type="text" description="Amount of fertiliser to apply to ratoon crop (kg/ha) :">30</fertrat_amt>
        <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea" description="Sowing fertiliser type :">urea_N</fert_type>
      </ui>
    </manager>
    <manager name="SUGAR management">
      <script>
        <text>cropcycle = 0
</text>
        <event>init</event>
      </script>
      <script>
        <text><![CDATA[            ! -----------------------------------------------------------------
            ! Book keeping to round days to integer values
            plantlen = [plantlen]

            totalrain = totalrain + rain
            totaldnit = totaldnit + dnit
            totalleach = totalleach + flow_no3

            ! Initialise and set a time counter for entire run
            dah = 0


            if (sugar.crop_status = 'alive') then
               dah = 0

               ! Set harvest dates for each crop phase
              if (sugar.DaysAfterSowing = [plantlen] and ratoon_no = 0) or
                  (sugar.DaysAfterSowing = ratoonlen and ratoon_no > 0) then

                  replace_kgNha = cane_wt * 10 * replace_pcN

                  sugar harvest
                  totalfertiliser = 0
                  totalirrigation = 0
                  totalrain = 0
                  totaldnit = 0
                  totalleach = 0

                  if '[burn_flag]' = 1 then
                      if ('[tillage_type]' = 'user_defined') then
                      '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
                  else
                      '[surfaceommodule]' tillage type = [tillage_type]
                  endif
              endif

                  if (ratoon_no = [NoRatoons] + 1) then
                     ! plough the crop out
                     sugar kill_crop
                     sugar end_crop
                  else
                     ! Set stalk density
                     if ratoon_no = 1 then
                        ratoonlen = [ratoonlen1]
                        sugar.plants = [ratoon1_stalks]
                     elseif ratoon_no = 2 then
                        ratoonlen = [ratoonlen2]
                        sugar.plants = [ratoon2_stalks]
                     elseif ratoon_no = 3 then
                        ratoonlen = [ratoonlen3]
                        sugar.plants = [ratoon3_stalks]
                     elseif ratoon_no = 4 then
                        ratoonlen = [ratoonlen4]
                        sugar.plants = [ratoon4_stalks]
                     endif
!                     !sugar.plants = [ratoon_stalks]
                  endif
               else
                  ! We have not reached the harvest date for this ratoon.
               endif

            elseif (sugar.crop_status = 'dead') then
               sugar harvest
               sugar end_crop

            elseif (sugar.crop_status = 'out') and (today = date('[planting_day]') then
               cropcycle = cropcycle + 1
               sugar sow plants = 10 (), cultivar = [variety], sowing_depth = [sowing_depth]
               sugar.plants = [plant_stalks]
               dah = 0

            else
               dah = dah + 1
            endif
               ]]></text>
        <event>start_of_day</event>
      </script>
      <ui>
        <category name="Sugar plant crop management parameters" />
        <crop type="crop" description="Enter name of crop to sow :">sugar</crop>
        <planting_day type="ddmmmdate" description="Enter planting date (dd-mmm) :">12-may</planting_day>
        <plantlen type="text" description="Duration of a plant crop (days) (30 days/month * 15 months) :">461</plantlen>
        <plant_stalks type="text" description="Stalk density of plant crop (/m2) :">6</plant_stalks>
        <variety type="list" listvalues="q117,q96,q138,ts65-28,h73,q141,nco376,n12,n14,cp51,r570,m1356,m55560,q124" description="Planting variety :">q117</variety>
        <sowing_depth type="text" description="Planting depth mm) :">150</sowing_depth>
        <category name="Ratoon management parameters" />
        <NoRatoons type="text" description="Number of ratoons (max = 5):">4</NoRatoons>
        <ratoonlen1 type="text" description="Duration of a 1st ratoon (days) :">366</ratoonlen1>
        <ratoonlen2 type="text" description="Duration of a 2nd ratoon (days) :">366</ratoonlen2>
        <ratoonlen3 type="text" description="Duration of a 3rd ratoon (days) :">366</ratoonlen3>
        <ratoonlen4 type="text" description="Duration of a 4th ratoon (days) :">366</ratoonlen4>
        <ratoon1_stalks type="text" description="Stalk density of 1st ratoon (/m2) :">6</ratoon1_stalks>
        <ratoon2_stalks type="text" description="Stalk density of 2nd ratoon (/m2) :">6</ratoon2_stalks>
        <ratoon3_stalks type="text" description="Stalk density of 3rd ratoon (/m2) :">6</ratoon3_stalks>
        <ratoon4_stalks type="text" description="Stalk density of 4th ratoon (/m2) :">6</ratoon4_stalks>
        <category name="Residue management at harvest" />
        <burn_flag type="text" description="Was the cane burnt? 1 = Yes">1</burn_flag>
        <surfaceommodule type="modulename" description="Module used to apply the tillage :">SurfaceOrganicMatter</surfaceommodule>
        <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type :">user_defined</tillage_type>
        <tillage_depth description="User_defined depth of incorporation. 0 = removed. (mm) :">0</tillage_depth>
        <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1):">0.7</tillage_f_incorp>
      </ui>
    </manager>
    <operations>
      <operation condition="start_of_day">
        <date>1/12/2000</date>
        <action>sugar sow plants = 11, sowing_depth = 150, row_spacing = 0.0155, cultivar = Q124, tiller_no_fertile = 0 ! originally 335</action>
      </operation>
      <operation condition="start_of_day">
        <date>14/1/2001</date>
        <action>irrigation apply amount = 50 (mm)</action>
      </operation>
      <operation condition="start_of_day">
        <date>16/1/2001</date>
        <action>fertiliser apply amount = 165     (kg/ha), type = urea_N, depth = 100 (mm)</action>
      </operation>
      <operation condition="start_of_day">
        <date>15/10/2001</date>
        <action>sugar harvest                                                                                                           </action>
      </operation>
      <operation condition="start_of_day">
        <date>16/10/2001</date>
        <action>'Surface Organic Matter' tillage type = user_defined, f_incorp = 0.9, tillage_depth = 200. (mm)                                        </action>
      </operation>
      <operation condition="start_of_day">
        <date>28/12/2001</date>
        <action>fertiliser apply amount = 164.5   (kg/ha), type = urea_N, depth = 100 (mm)</action>
      </operation>
      <operation condition="start_of_day">
        <date>28/9/2002</date>
        <action>sugar harvest                                                                                                           </action>
      </operation>
      <operation condition="start_of_day">
        <date>7/10/2002</date>
        <action>'Surface Organic Matter' tillage type = user_defined, f_incorp = 0.9, tillage_depth = 200. (mm)                                        </action>
      </operation>
      <operation condition="start_of_day">
        <date>14/11/2002</date>
        <action>fertiliser apply amount = 158.1   (kg/ha), type = urea_N, depth = 100 (mm)</action>
      </operation>
      <operation condition="start_of_day">
        <date>2/11/2003</date>
        <action>sugar harvest                                                                                                           </action>
      </operation>
      <operation condition="start_of_day">
        <date>11/11/2003</date>
        <action>'Surface Organic Matter' tillage type = user_defined, f_incorp = 0.9, tillage_depth = 200. (mm)                                        </action>
      </operation>
      <operation condition="start_of_day">
        <date>13/12/2003</date>
        <action>fertiliser apply amount = 158   (kg/ha), type = urea_N, depth = 100 (mm)</action>
      </operation>
      <operation condition="start_of_day">
        <date>20/11/2004</date>
        <action>sugar harvest                                                                                                           </action>
      </operation>
      <operation condition="start_of_day">
        <date>27/11/2004</date>
        <action>'Surface Organic Matter' tillage type = user_defined, f_incorp = 0.9, tillage_depth = 200. (mm)                                        </action>
      </operation>
      <operation condition="start_of_day">
        <date>17/12/2004</date>
        <action>fertiliser apply amount = 158   (kg/ha), type = urea_N, depth = 100 (mm)</action>
      </operation>
      <operation condition="start_of_day">
        <date>20/11/2005</date>
        <action>sugar harvest                                                                                                           </action>
      </operation>
      <operation condition="start_of_day">
        <date>27/11/2005</date>
        <action>'Surface Organic Matter' tillage type = user_defined, f_incorp = 0.9, tillage_depth = 200. (mm)                                        </action>
      </operation>
    </operations>
    <manager name="Sow (non sugar crop) using a variable rule (for rotations involving sugar with other crops)">
      <ui>
        <category description="Sowing criteria" />
        <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-nov</date1>
        <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-feb</date2>
        <must_sow type="yesno" description="Must sow? : ">yes</must_sow>
        <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
        <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
        <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
        <category description="Sowing parameters" />
        <crop type="crop" description="Enter name of crop to sow : ">soybean</crop>
        <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
        <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
        <cultivar type="cultivars" description="Enter cultivar : ">valiant</cultivar>
        <class type="classes" description="Enter crop growth class : ">plant</class>
        <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
      </ui>
      <script name="start_of_day">
        <text><![CDATA[
      if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
!difference between this sowing rule and generic is that the esw is changed to [crop].esw so that this does not get confused with sugar.esw 
            if (rain[[rainnumdays]] >= [raincrit] AND [crop].esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            ]]></text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="SUGAR management (rotations)">
      <ui>
        <category description="Sugar plant crop management parameters" />
        <crop type="crop" description="Enter name of crop to sow :">sugar</crop>
        <planting_day type="ddmmmdate" description="Enter planting date (dd-mmm) :">12-may</planting_day>
        <plantlen type="text" description="Duration of a plant crop (days) (30 days/month * 15 months) :">461</plantlen>
        <plant_stalks type="text" description="Stalk density of plant crop (/m2) :">6</plant_stalks>
        <variety type="list" listvalues="q117,q96,q138,ts65-28,h73,q141,nco376,n12,n14,cp51,r570,m1356,m55560,q124" description="Planting variety :">q117</variety>
        <sowing_depth type="text" description="Planting depth mm) :">150</sowing_depth>
        <category description="Ratoon management parameters" />
        <NoRatoons type="text" description="Number of ratoons (max = 5):">4</NoRatoons>
        <ratoonlen1 type="text" description="Duration of a 1st ratoon (days) :">366</ratoonlen1>
        <ratoonlen2 type="text" description="Duration of a 2nd ratoon (days) :">366</ratoonlen2>
        <ratoonlen3 type="text" description="Duration of a 3rd ratoon (days) :">366</ratoonlen3>
        <ratoonlen4 type="text" description="Duration of a 4th ratoon (days) :">300</ratoonlen4>
        <ratoon1_stalks type="text" description="Stalk density of 1st ratoon (/m2) :">8</ratoon1_stalks>
        <ratoon2_stalks type="text" description="Stalk density of 2nd ratoon (/m2) :">8</ratoon2_stalks>
        <ratoon3_stalks type="text" description="Stalk density of 3rd ratoon (/m2) :">7</ratoon3_stalks>
        <ratoon4_stalks type="text" description="Stalk density of 4th ratoon (/m2) :">6</ratoon4_stalks>
        <category description="Residue management at harvest" />
        <burn_flag type="text" description="Was the cane burnt? 1 = Yes">0</burn_flag>
        <surfaceommodule type="modulename" description="Module used to apply the tillage :">SurfaceOrganicMatter</surfaceommodule>
        <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type :">user_defined</tillage_type>
        <tillage_depth type="text" description="User_defined depth of incorporation. 0 = removed. (mm) :">20</tillage_depth>
        <tillage_f_incorp type="text" description="User_defined fraction of surface residues to incorporate (0-1):">0.2</tillage_f_incorp>
      </ui>
      <script name="init">
        <text>cropcycle = 0
totalrain =0
totaldnit = 0.00000
totalleach = 0.00000
totalfertiliser = 0
ratoonlen = 0
replace_pcn = 0
</text>
        <event>init</event>
      </script>
      <script name="start_of_day">
        <text><![CDATA[            ! -----------------------------------------------------------------
            ! Book keeping to round days to integer values
            plantlen = [plantlen]

            totalrain = totalrain + rain
            totaldnit = totaldnit + dnit
            totalleach = totalleach + flow_no3

            ! Initialise and set a time counter for entire run
            dah = 0

! test to see if sugar is the next crop in the rotation.
if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then


!STATUS ALIVE

            if (sugar.crop_status = 'alive') then    
                            dah = 0

                             ! Set harvest dates for each crop phase
                             if (sugar.DaysAfterSowing = [plantlen] and ratoon_no = 0) or
                                (sugar.DaysAfterSowing = ratoonlen and ratoon_no > 0) then

                                                  replace_kgNha = cane_wt * 10 * replace_pcN

                                                  sugar harvest
                                                  totalfertiliser = 0
                                                  totalirrigation = 0
                                                  totalrain = 0
                                                  totaldnit = 0
                                                  totalleach = 0

                                                  if '[burn_flag]' = 1 then
                                                                 if ('[tillage_type]' = 'user_defined') then
                                                                                  '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
                                                                 else
                                                                                  '[surfaceommodule]' tillage type = [tillage_type]
                                                                 endif
                                                  endif

                                                  if (ratoon_no = [NoRatoons] + 1) then

                                                                   ! plough the crop out
                                                                   sugar kill_crop
                                                                   sugar end_crop

                                                                  ! when the crop is dead then tell it to use the next crop for rotations
                                                                  ChooseNextCrop = 'yes'
                                                  else
                                                                   ! Set stalk density
                                                                   if ratoon_no = 1 then
                                                                               ratoonlen = [ratoonlen1]
                                                                               sugar.plants = [ratoon1_stalks]
                                                                   elseif ratoon_no = 2 then
                                                                               ratoonlen = [ratoonlen2]
                                                                               sugar.plants = [ratoon2_stalks]
                                                                    elseif ratoon_no = 3 then
                                                                                ratoonlen = [ratoonlen3]
                                                                               sugar.plants = [ratoon3_stalks]
                                                                    elseif ratoon_no = 4 then
                                                                               ratoonlen = [ratoonlen4]
                                                                              sugar.plants = [ratoon4_stalks]
                                                                    endif
!                                                                  !sugar.plants = [ratoon_stalks]
                                                   endif
                               else
                                                 ! We have not reached the harvest date for this ratoon.
                               endif


 ! STATUS DEAD

            elseif (sugar.crop_status = 'dead') then

                            ! when the crop is dead then tell it to use the next crop for rotations
                             ChooseNextCrop = 'yes'

                             sugar harvest
                             sugar end_crop

! STATUS OUT

            elseif (sugar.crop_status = 'out') and (today = date('[planting_day]') then
                              cropcycle = cropcycle + 1
                              sugar sow plants = 10 (), cultivar = [variety], sowing_depth = [sowing_depth]
                              sugar.plants = [plant_stalks]
                              dah = 0

! STATUS anything else

            else
                               dah = dah + 1
            endif


endif]]></text>
        <event>start_of_day</event>
      </script>
    </manager>
  </folder>
</folder>