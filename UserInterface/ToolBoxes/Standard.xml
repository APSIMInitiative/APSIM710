<folder version="23" name="Standard Toolbox" image="%apsim%\UserInterface\Images\Package24.png">
  <soilwatkludge name="soilwatkludge">
    <mwcon>1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0</mwcon>
    <max_pond>100</max_pond>
  </soilwatkludge>
  <folder name="Structural">
    <memo />
	<SysBal2 />
    <folder />
    <area name="paddock">
      <registrations name="global" />
    </area>
   <ini>
    <filename>
    </filename>
   </ini>
   <PlugIns/>
  </folder>
  <folder name="Animals">
    <stock>
      <fraction_faeces_added type="text" description="fraction_faeces_added">0.5</fraction_faeces_added>
      <fraction_urine_added type="text" description="fraction_urine_added">0.5</fraction_urine_added>
      <herbage1 type="text" description="First plant herbage source">lucerne</herbage1>
      <herbage2 type="text" description="Second plant herbage source">
      </herbage2>
    </stock>
    <supplement>
      <spoilage_time type="text" description="spoilage_time">0</spoilage_time>
    </supplement>
    <graz name="Simple grazing model">
      <intake_util_intercept type="text" description="Intercept in intake and utilization eqn (p142)">1</intake_util_intercept>
      <intake_util_slope type="text" description="Slope in intake and utilization eqn (p143)">-0.3</intake_util_slope>
      <yld_eat_restr type="text" description="Yield at which intake restriction no longer applies (p144)">300</yld_eat_restr>
      <summer_lwg type="text" description="Expected summer lwg @ low SR (p145)">70</summer_lwg>
      <autumn_lwg type="text" description="Expected autumn lwg @ low SR (p146)">35</autumn_lwg>
      <winter_lwg type="text" description="Expected winter lwg @ low SR (p147)">10</winter_lwg>
      <spring_lwg type="text" description="Expected spring lwg @ low SR (p148)">35</spring_lwg>
      <leaf_diet type="text" description="Proportion of leaf in diet (p132/100)">0.85</leaf_diet>
      <std_alw type="text" description="std_alw">200</std_alw>
      <metabol_expon type="text" description="metabol_expon">0.75</metabol_expon>
      <acc_eaten_reset type="text" description="Day to reset eaten accumulator">335</acc_eaten_reset>
      <prop_can_eat type="text" description="prop_can_eat">1</prop_can_eat>
      <allow_supplements type="text" description="allow_supplements">1</allow_supplements>
    </graz>
  </folder>
  <folder name="Crops">
    <AusfarmPasture>
      <debug type="list" listvalues="on,off" description="debug">off</debug>
      <sand type="text" description="sand">0.1 0.1 0.1 0.1 0.1</sand>
      <svp_fract type="text" description="svp_fract">0.75</svp_fract>
      <co2_ppm type="text" description="co2 (ppm)">400</co2_ppm>
      <species type="list" description="Name of the pasture species" listvalues="Perennial Ryegrass,Phalaris,Cocksfoot,Annual Ryegrass,Annual Grass - Early,Sub Clover - Mt Barker,Sub Clover - Leura,Sub Clover - Seaton Park,Sub Clover - Dalkeith,Medic - Paraggio,White Clover (beta),Lucerne - Hunter River (beta),Lucerne - winter active (beta),Capeweed">Cocksfoot</species>
    </AusfarmPasture>
    <AusfarmPasture name="AusfarmEstablishedPasture">
      <debug type="list" listvalues="on,off" description="debug">off</debug>
      <sand type="text" description="sand">0.1 0.1 0.1 0.1 0.1</sand>
      <svp_fract type="text" description="svp_fract">0.75</svp_fract>
      <co2_ppm type="text" description="co2 (ppm)">400</co2_ppm>
      <species type="list" description="Name of the pasture species" listvalues="Perennial Ryegrass,Phalaris,Cocksfoot,Annual Ryegrass,Annual Grass - Early,Sub Clover - Mt Barker,Sub Clover - Leura,Sub Clover - Seaton Park,Sub Clover - Dalkeith,Medic - Paraggio,White Clover (beta),Lucerne - Hunter River (beta),Lucerne - winter active (beta),Capeweed">Cocksfoot</species>
      <nutrients type="list" listvalues="Null,N,NP,NS,NPS" description="Determines which of the plant nutrient submodels to activate">N</nutrients>
      <fertility type="text" description="Fertility scalar. Only meaningful in simple mode">1</fertility>
      <max_rtdep type="text" description="Maximum rooting depth (mm)">1300</max_rtdep>
      <lagged_day_t type="text" description="Lagged daytime temperature (oC)">-999.9</lagged_day_t>
      <phenology type="text" description="Value denoting the phenological stage of the species">1.005</phenology>
      <flower_len type="text" description="Current maximum length of the flowering period (d)">0</flower_len>
      <flower_time type="text" description="Time since the start of flowering (d)">0</flower_time>
      <senc_index type="text" description="Number of preceding days of dry conditions (d)">0</senc_index>
      <dorm_index type="text" description="Number of preceding days of cool, moist conditions (d)">0</dorm_index>
      <dorm_t type="text" description="Lagged mean temperature used in summer-dormancy calculations (oc)">-999.9</dorm_t>
      <seed_dorm_time type="text" description="Time since commencement of embryo dormancy (d)">0</seed_dorm_time>
      <germ_index type="text" description="Germination index. Only meaningful if the species is modelled with seed pools (d)">0</germ_index>
      <kl type="text" description="kl (-)">
      </kl>
      <ll type="text" description="lower limit (mm/mm)">
      </ll>
      <AusfarmPastureGreen name="Green">
        <status type="list" listvalues="seedling,established,senescing" description="status">established</status>
        <rt_dep type="text" description="Current rooting depth of the cohort (mm)">100</rt_dep>
        <estab_index type="text" description="Establishment index.  Only meaningful if status = seedling">0</estab_index>
        <stress_index type="text" description="Stress index.  Only meaningful if status = seedling:">0</stress_index>
        <stem_reloc type="text" description="Maximum amount of stem tissue to be relocated to seed (kg/ha)">0</stem_reloc>
        <frosts type="text" description="Number of frosts experienced by this herbage cohort during its lifetime">0</frosts>
        <AusfarmPastureGreenHerbage name="Leaf">
          <dmd type="text" description="dmd (kg/kg)">0.825</dmd>
          <weight type="text" description="weight (kg/ha)">8000</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
          <root_wt type="text" description="root_wt (kg/ha)">3600</root_wt>
        </AusfarmPastureGreenHerbage>
        <AusfarmPastureGreenHerbage name="Stem">
          <dmd type="text" description="dmd (kg/kg)">0.825</dmd>
          <weight type="text" description="weight (kg/ha)">1000</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
          <root_wt type="text" description="root_wt (kg/ha)">0</root_wt>
        </AusfarmPastureGreenHerbage>
      </AusfarmPastureGreen>
      <AusfarmPastureDry name="Dry">
        <status type="list" listvalues="dead,litter" description="State of a cohort of dry herbage:">dead</status>
        <AusfarmPastureDryHerbage name="Leaf">
          <dmd type="text" description="dmd (kg/kg)">0.65</dmd>
          <weight type="text" description="weight (kg/ha)">500</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
        </AusfarmPastureDryHerbage>
        <AusfarmPastureDryHerbage name="Stem">
          <dmd type="text" description="dmd (kg/kg)">0.425</dmd>
          <weight type="text" description="weight (kg/ha)">100</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
        </AusfarmPastureDryHerbage>
      </AusfarmPastureDry>
      <AusfarmPastureDry name="Litter">
        <status type="list" listvalues="dead,litter" description="State of a cohort of dry herbage:">litter</status>
        <AusfarmPastureDryHerbage name="Leaf">
          <dmd type="text" description="dmd (kg/kg)">0.651</dmd>
          <weight type="text" description="weight (kg/ha)">233</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
        </AusfarmPastureDryHerbage>
        <AusfarmPastureDryHerbage name="Stem">
          <dmd type="text" description="dmd (kg/kg)">0</dmd>
          <weight type="text" description="weight (kg/ha)">0</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
        </AusfarmPastureDryHerbage>
      </AusfarmPastureDry>
      <AusfarmPastureSeeds name="Seeds">
        <soft_unripe type="text" description="Mass of soft, unripe seeds (kg/ha)">
        </soft_unripe>
        <soft_ripe type="text" description="Mass of soft, ripe seeds (kg/ha)">
        </soft_ripe>
        <hard_unripe type="text" description="Mass of hard, unripe seeds (kg/ha)">
        </hard_unripe>
        <hard_ripe type="text" description="Mass of hard, ripe seeds (kg/ha)">
        </hard_ripe>
      </AusfarmPastureSeeds>
    </AusfarmPasture>
     <AgPasture>
       <Nspecies type="text" description="Number of species">2</Nspecies>
       <thisCropName type="text" description="Crop name shown as on the simulation tree">AgPasture</thisCropName>
       <cropName type="text" description="Species names">ryegrass whiteclover</cropName>
       <dmtotal type="text" description="Initial shoot dry matter (kg/ha)">1500      350</dmtotal>
       <dmlitter type="text" description="Initial litter dry matter (kg/ha)">250        50</dmlitter>
       <dmgreenmin type="text" description="Minimum green dry matter (kg/ha)">500        50</dmgreenmin>
       <rootDepth type="text" description="Root depth (mm)">900        400</rootDepth>
       <rlvp type="text" description="Root distribution parameter ([0-1] relative to Root depth)">1.0 1.0</rlvp>
       <WaterUptakeSource type="text" description="Water uptake done by AgPasture (calc) or by apsim?">calc</WaterUptakeSource>
     </AgPasture>
    <barley />
    <bambatsi />
    <butterflypea />
    <canola />
    <centro />
    <chickpea />
    <cotton />
    <cowpea />
    <egrandis />
    <fababean />
    <fieldpea />
    <frenchbean />
    <OilPalm />
    <grasp name="Grasp">
      <category name="Initial values at establishment" />
      <root_depth_init description="Initial depth of roots (mm)">750</root_depth_init>
      <dm_dead_leaf_init description="Initial Dead Leaf weight (kg/ha)">0</dm_dead_leaf_init>
      <dm_dead_stem_init description="Initial Dead Stem weight (kg/ha)">0</dm_dead_stem_init>
      <dm_dead_root_init description="Initial Dead Root weight (kg/ha)">0</dm_dead_root_init>
      <dm_green_leaf_init description="Initial Green Leaf weight (p135, kg/ha)">0</dm_green_leaf_init>
      <dm_green_stem_init description="Initial Green Stem weight (p136, kg/ha)">0</dm_green_stem_init>
      <dm_green_root_init description="Initial Green Root weight (kg/ha)">0</dm_green_root_init>
      <basal_area_init description="Initial Basal area of tussocks (p005, %)">0.5</basal_area_init>
      <acc_trans_for_n_init description="Initial accumulated transpiration, used for N uptake (mm)">0</acc_trans_for_n_init>
      <acc_growth_for_n_init description="Initial accumulated growth, used for N uptake (kg/ha)">0</acc_growth_for_n_init>
      <category name="Soil Properties" />
      <max_n_avail description="Limit to total N (p099, kg/year)">15</max_n_avail>
      <max_n_avail_dist description="Distribution of N in profile">0.8 0.1 0.05  0.05  0.0 0.0  0.0</max_n_avail_dist>
      <ll description="Lower limit (ll) of water extraction (mm/mm)">.230     .240    .240    .250 .260 .270 .280</ll>
      <kl description="Rate of water extraction (kl)">0.5      0.5      0.5    0.5  0.0  0.0  0.0</kl>
      <kl2rlv>1.0</kl2rlv>
      <category name="Parameter values" />
      <crop_type>grass</crop_type>
      <uptake_source>calc</uptake_source>
      <height_max description="Maximum canopy height (mm)">1200</height_max>
      <hgt_vpd_screen description="Height at which surface effects on vpd are 0 (p095*10, mm)">200</hgt_vpd_screen>
      <height_1000kg description="Sward Height per tonne (p096*10, mm)">100</height_1000kg>
      <et_use_efficiency description="Evapotranspiration use efficiency used in BA calc (p288, kg/ha/mm) (p288)">0</et_use_efficiency>
      <frac_leaf2total description="Fraction of total dm produced that goes into leaf pool (p123,0-1)">0.5</frac_leaf2total>
      <yld_cover_slope description="Shape of exponential curve relating yield and cover">0.693147</yld_cover_slope>
      <yld_fpc50 description="yld_fpc50 (p046)">1000</yld_fpc50>
      <yld_cov50 description="Yield transpiring at 50% of pan evap (p045)">1000</yld_cov50>
      <yld_tcov50 description="Tsdm yield at which cover for runoff is 50% (p271)">1000</yld_tcov50>
      <swi_fullgreen description="Min soil water for 100% green (p009)">0.1</swi_fullgreen>
      <swi_nogrow description="SWI when growth stops (swi_nogrow)">0.4</swi_nogrow>
      <pot_regrow description="Max rate regrowth from tussocks (p006, kg/ha/unit grass ba)">3.0</pot_regrow>
      <te_std description="Transpiration efficiency at vpd=20mb (p007)">10.0</te_std>
      <rad_factor>8.97</rad_factor>
      <residual_plant_N description="Always this much n in plant (p097, kg/ha)">5</residual_plant_N>
      <litter_n description="N conc of detached stems and roots ((p110-p111)/2)">0.3</litter_n>
      <n_uptk_per100 description="Nitrogen uptake per 100mm water (p098, kg/ha)">5</n_uptk_per100>
      <frost_start description="Minimum screen temp at which green cover=100% (p125, oC)">2</frost_start>
      <frost_kill description="Minimum screen temp at which frost kills all green (p011, oC)">0</frost_kill>
      <death_slope description="Rate of green death per soil water (p051)">0.013</death_slope>
      <death_intercept description="Background death rate (p010)">0.002</death_intercept>
      <leaf_death_ratio description="Proportion of leaf death to total death (p133)">1</leaf_death_ratio>
      <stem_death_ratio description="Proportion of stem death to total death (p134)">1</stem_death_ratio>
      <n_conc_dm_crit description="Level of plant N at which no N stress occurs (p102)">2.5</n_conc_dm_crit>
      <n_conc_dm_min description="Level of soil N at which no N stress occurs (p101)">0.4</n_conc_dm_min>
      <n_conc_dm_max description="Level of soil N at which soil N to high for growth (p100)">0.5</n_conc_dm_max>
      <stem_thresh description="stem_thresh (p124)">0</stem_thresh>
      <detach_dryseason description="detach_dryseason: root, leaf, stem">0.0   0.002     0.002</detach_dryseason>
      <detach_wetseason description="detach_wetseason: root, leaf, stem">0.0   0.002     0.002</detach_wetseason>
      <category name="Date resets" />
      <day_start_summer>335</day_start_summer>
      <day_end_summer>59</day_end_summer>
      <acc_et_reset>273</acc_et_reset>
      <acc_growth_reset>273</acc_growth_reset>
      <trans_for_n_reset>273</trans_for_n_reset>
      <growth_for_n_reset>273</growth_for_n_reset>
      <day_start_wet>274</day_start_wet>
      <day_start_dry>91</day_start_dry>
      <enr_a_coeff>7.4</enr_a_coeff>
      <enr_b_coeff>0.2</enr_b_coeff>
    </grasp>
    <horsegram />
    <lablab />
    <lucerne />
    <lupin />
    <maize />
    <millet />
    <mucuna />
    <mungbean />
    <navybean />
    <oats />
    <peanut />
    <pigeonpea />
    <rice />
    <root />
    <seedling />
    <slurp />
    <sorghum />
    <soybean />
    <stylo />
    <sugar />
    <sunflower />
    <SweetCorn />
    <SweetSorghum />
    <weed />
    <wheat />
    <WF_Millet />
     <canopy>
       <intercrop type="text" description="Enter crop names to intercrop">maize weed</intercrop>
     </canopy>
  </folder>
    <folder name="Soil related">
      <soil name="Soil">
        <Country />
        <Site></Site>
        <Region></Region>
        <LocalName></LocalName>
        <SoilType description="Classification"></SoilType>
        <NearestTown description="Nearest town"></NearestTown>
        <NaturalVegetation description="Natural vegetation"></NaturalVegetation>
        <State />
        <ApsoilNumber description="Apsoil number" />
        <Latitude description="Latitude (WGS84)" />
        <Longitude description="Longitude (WGS84)" />
        <LocationAccuracy description="Location accuracy" />
        <DataSource type="multiedit" description="Data source" />
        <Comments type="multiedit" description="Comments" />
        <Water>
           <Layer>
              <Thickness units="mm" />
              <KS units="mm/day"/>
              <BD units="g/cc" />
              <Airdry units="mm/mm" />
              <LL15 units="mm/mm" />
              <DUL units="mm/mm" />
              <SAT units="mm/mm" />
           </Layer>
          <SoilCrop name="Crop">
           <Layer>
              <Thickness units="mm" />
              <LL units="mm/mm"/>
              <KL units="/day"/>
              <XF units="0-1"/>
           </Layer>
         </SoilCrop>           
        </Water>
        <SoilWat>
          <SummerCona />
          <SummerU />
          <SummerDate />
          <WinterCona />
          <WinterU />
          <WinterDate />
          <DiffusConst />
          <DiffusSlope />
          <Salb />
          <Cn2Bare />
          <CnRed />
          <CnCov />
          <Slope />
          <DischargeWidth />
          <CatchmentArea />
          <MaxPond />
           <Layer>
              <Thickness units="mm" />
              <SWCON units="0-1" />
              <MWCON units="0-1" />
              <KLAT units="mm/d" />
           </Layer>
        </SoilWat>
        <SoilOrganicMatter>
          <RootCn></RootCn>
          <RootWt></RootWt>
          <SoilCn></SoilCn>
          <EnrACoeff></EnrACoeff>
          <EnrBCoeff></EnrBCoeff>
           <Layer>
              <Thickness units="mm" />
              <OC units="Walkley Black %" />
              <FBIOM units="0-1" />
              <FINERT units="0-1" />
           </Layer>
        </SoilOrganicMatter>
        <Analysis>
           <Layer>
              <Thickness units="mm" />
              <Rocks units="%" />
              <Texture />
              <MunsellColour />
              <EC units="1:5 dS/m" />
              <PH units="1:5 water" />
              <CL units="mg/kg" />
              <Boron units="Hot water mg/kg" />
              <CEC units="cmol+/kg" />
              <Ca units="cmol+/kg" />
              <Mg units="cmol+/kg" />
              <Na units="cmol+/kg" />
              <K units="cmol+/kg" />
              <ESP units="%" />
              <Mn units="mg/kg" />
              <Al units="cmol+/kg" />
              <ParticleSizeSand units="%" />
              <ParticleSizeSilt units="%" />
              <ParticleSizeClay units="%" />
           </Layer>
        </Analysis>
        <InitWater>
          <percentmethod>
            <percent>1</percent>
            <distributed>filled from top</distributed>
          </percentmethod>
        </InitWater>
        <Sample name="Soil sample">
          <Date type="date" description="Sample date:" />
          <Layer>
             <Thickness units="mm">100</Thickness>
             <SW units="mm/mm">0</SW>
             <NO3 units="ppm">0</NO3>
             <NH4 units="ppm">0</NH4>
          </Layer> 
        </Sample>
        <Phosphorus>
           <RootCP/>
           <RateDissolRock/>
           <RateLossAvail/>
           <Layer>
              <LabileP units="mg/kg">5</LabileP>
              <Sorption units="-">50</Sorption>
              <BandedP units="kg/ha">0</BandedP>
              <RockP units="kg/ha">0</RockP>
           </Layer>
        </Phosphorus>        
      </soil>
        <folder name="SWIM3">
      <soil name="SWIM Soil">
        <Site></Site>
        <Region></Region>
        <LocalName></LocalName>
        <SoilType description="Classification"></SoilType>
        <NearestTown description="Nearest town"></NearestTown>
        <NaturalVegetation description="Natural vegetation"></NaturalVegetation>
        <State />
        <ApsoilNumber description="Apsoil number" />
        <Latitude description="Latitude (WGS84)" />
        <Langitude description="Longitude (WGS84)" />
        <LocationAccuracy description="Location accuracy" />
        <DataSource type="multiedit" description="Data source" />
        <Comment type="multiedit" description="Comments" />
        <InitWater>
          <percentmethod>
            <percent>1</percent>
            <distributed>filled from top</distributed>
          </percentmethod>
        </InitWater>
        <Sample name="Initial nitrogen">
          <Date type="date" description="Sample date:" />
          <Layer>
             <Thickness units="mm">100</Thickness>
             <SW units="mm/mm">0</SW>
             <NO3 units="ppm">0</NO3>
             <NH4 units="ppm">0</NH4>
          </Layer>           
        </Sample>
        <Water>
           <Layer>
              <Thickness units="mm" />
              <KS units="mm/day"/>
              <BD units="g/cc" />
              <Airdry units="mm/mm" />
              <LL15 units="mm/mm" />
              <DUL units="mm/mm" />
              <SAT units="mm/mm" />
           </Layer>
          <SoilCrop name="Crop">
           <Layer>
              <Thickness units="mm" />
              <LL units="mm/mm"/>
              <KL units="/day"/>
              <XF units="0-1"/>
           </Layer>
         </SoilCrop>
        </Water>
        <Thickness>
           <Values description="Enter soil profile thickness values for APSIM (mm)">10 20 30 40 100 200 300 300 300 300 300 100 </Values>
         </Thickness>
          <Swim>
            <Salb type="text" description="Bare Soil Albedo">0.13</Salb>
            <Cn2Bare type="text" description="Bare Soil Runoff Curve Number">75</Cn2Bare>
            <CnRed type="text" description="Max. Reduction in Curve Number due to cover">20</CnRed>
            <CnCov type="text" description="Cover for max Curve Number reduction">0.8</CnCov>
            <Kdul type="text" description="Hydraulic Conductivity at DUL (mm/d)">.1</Kdul>
            <psidul type="text" description="Matric Potential at DUL (cm)">-100</psidul>
            <VC type="list" listvalues="on,off" description="Vapour Conductivity Calculations (on/off)">on</VC>
            <dtmin type="text" description="Minimum Timestep (min)">0.0</dtmin>
            <dtmax type="text" description="Maximum Timestep (min)">1440.</dtmax>
            <MaxWaterIncrement type="text" description="Maximum Water Increment (mm)">10</MaxWaterIncrement>
            <SpaceWeightingFactor type="text" description="Space Weighting Factor">0</SpaceWeightingFactor>
            <SoluteSpaceWeightingFactor type="text" description="Solute Space Weighting Factor">0.0</SoluteSpaceWeightingFactor>
            <diagnostics type="yesno" description="Diagnostic Information?">no</diagnostics>
            <SwimSoluteParameters>
              <dis type="text" description="Dispersivity - dis ((cm^2/h)/(cm/h)^p) ">15</dis>
              <disp type="text" description="Dispersivity Power - disp">1</disp>
              <a type="text" description="Tortuosity Constant - a">1.0</a>
              <dthc type="text" description="Tortuoisty Offset - dthc">0.0</dthc>
              <dthp type="text" description="Tortuoisty Power - dthp">1.0</dthp>
              <WaterTableCl type="text" description="Water Table Cl Concentration (ppm)">0.0</WaterTableCl>
              <WaterTableNO3 type="text" description="Water Table NO3 Concentration (ppm)">0.0</WaterTableNO3>
              <WaterTableNH4 type="text" description="Water Table NH4 Concentration (ppm)">0.0</WaterTableNH4>
              <WaterTableUrea type="text" description="Water Table Urea Concentration (ppm)">0.0</WaterTableUrea>
              <Layer>
                <Thickness units="mm">1000</Thickness>
                <NO3Exco units="">0</NO3Exco>
                <NO3FIP units="">1.0</NO3FIP>
                <NH4Exco units="">100.0</NH4Exco>
                <NH4FIP units="">1.0</NH4FIP>
                <UreaExco units="">0.0</UreaExco>
                <UreaFIP units="">1.0</UreaFIP>
                <ClExco units="">0.0</ClExco>
                <ClFIP units="">1.0</ClFIP>
              </Layer>
              <Layer>
                <Thickness units="mm">1000</Thickness>
                <NO3Exco units="">0</NO3Exco>
                <NO3FIP units="">1.0</NO3FIP>
                <NH4Exco units="">100.0</NH4Exco>
                <NH4FIP units="">1.0</NH4FIP>
                <UreaExco units="">0.0</UreaExco>
                <UreaFIP units="">1.0</UreaFIP>
                <ClExco units="">0.0</ClExco>
                <ClFIP units="">1.0</ClFIP>
              </Layer>
              <Layer>
                <Thickness units="mm">1000</Thickness>
                <NO3Exco units="">0.0</NO3Exco>
                <NO3FIP units="">1.0</NO3FIP>
                <NH4Exco units="">100.0</NH4Exco>
                <NH4FIP units="">1.0</NH4FIP>
                <UreaExco units="">0.0</UreaExco>
                <UreaFIP units="">1.0</UreaFIP>
                <ClExco units="">0.0</ClExco>
                <ClFIP units="">1.0</ClFIP>
              </Layer>
            </SwimSoluteParameters>
       <SwimWaterTable name="SwimWaterTable">
          <WaterTableDepth type="text" description="Depth to Water Table (mm)">2000.0</WaterTableDepth>
        </SwimWaterTable>        
       <SwimSubsurfaceDrain name="SwimSubsurfaceDrain">
          <DrainDepth type="text" description="Depth of subsurface drain (mm)">600.0</DrainDepth>
          <DrainSpacing type="text" description="Distance between subsurface drains (mm)">30000.0</DrainSpacing>
          <DrainRadius type="text" description="Radius of each subsurface drain (mm)">50.0</DrainRadius>
          <Klat type="text" description="Lateral saturated soil water conductivity (mm/d)">1000.0</Klat>
          <ImpermDepth type="text" description="Depth to impermeable soil (mm)">3000.0</ImpermDepth>
        </SwimSubsurfaceDrain>

          </Swim>
        <SoilOrganicMatter>
          <RootCn></RootCn>
          <RootWt></RootWt>
          <SoilCn></SoilCn>
          <EnrACoeff></EnrACoeff>
          <EnrBCoeff></EnrBCoeff>
           <Layer>
              <Thickness units="mm" />
              <OC units="Walkley Black %" />
              <FBIOM units="0-1" />
              <FINERT units="0-1" />
           </Layer>
        </SoilOrganicMatter>
        <Analysis>
           <Layer>
              <Thickness units="mm" />
              <Rocks units="%" />
              <Texture />
              <MunsellColour />
              <EC units="1:5 dS/m" />
              <PH units="1:5 water" />
              <CL units="mg/kg" />
              <Boron units="Hot water mg/kg" />
              <CEC units="cmol+/kg" />
              <Ca units="cmol+/kg" />
              <Mg units="cmol+/kg" />
              <Na units="cmol+/kg" />
              <K units="cmol+/kg" />
              <ESP units="%" />
              <Mn units="mg/kg" />
              <Al units="cmol+/kg" />
              <ParticleSizeSand units="%" />
              <ParticleSizeSilt units="%" />
              <ParticleSizeClay units="%" />
           </Layer>
        </Analysis>
        <Sample name="Soil sample">
          <Date type="date" description="Sample date:" />
          <Layer>
             <Thickness units="mm">100</Thickness>
             <SW units="mm/mm">0</SW>
             <NO3 units="ppm">0</NO3>
             <NH4 units="ppm">0</NH4>
          </Layer>           
        </Sample>
      </soil>
      
        </folder>
      <surfaceom name="Surface Organic Matter">
      <PoolName description="Organic Matter pool name">wheat_stubble</PoolName>
      <type type="list" description="Organic Matter type" listvalues="bambatsi,barley,base_type,broccoli,camaldulensis,canola,centro,chickpea,chikenmanure_base,cm,cmA,cmB,constants,cotton,cowpea,danthonia,fababean,fieldpea,fym,gbean,globulus,goatmanure,grandis,grass,horsegram,inert,lablab,lentil,lucerne,lupin,maize,manB,manure,medic,millet,mucuna,nativepasture,navybean,oats,orobanche,peanut,pigeonpea,potato,rice,sorghum,soybean,stylo,sugar,sunflower,sweetcorn,sweetsorghum,tillage,tithonia,vetch,weed,WF_Millet,wheat">wheat</type>
      <mass description="Initial surface residue (kg/ha)">1000.</mass>
      <cnr description="C:N ratio of initial residue">80.0</cnr>
      <cpr description="C:P ratio of initial residue (optional)">
      </cpr>
      <standing_fraction description="Fraction of residue standing">0.0</standing_fraction>
    </surfaceom>
    <fertiliser name="Fertiliser" />
    <soiltemp name="Soil Temperature">
      <bound_layer_cond description="boundary layer conductance">20.0</bound_layer_cond>
      <clay description="proportion of clay">0.1  0.1  0.1  0.1  0.1  0.2  0.3</clay>
      <soil_temp description="Initial soil temperature">15 15 15 15 15 15 15</soil_temp>
    </soiltemp>
    <SoilTemp2 name="Soil Temperature (dotNET)">
      <maxt_time_default type="text" description="hours">14</maxt_time_default>
      <bound_layer_cond_source type="text" description="boundary layer conductance source (calc/constant)">calc</bound_layer_cond_source>
      <bound_layer_cond type="text" description="boundary layer conductance">20</bound_layer_cond>
      <boundary_layer_conductance_iterations type="text" description="Number of iterations to calc boundary layer conductance (0-10)">1</boundary_layer_conductance_iterations>
      <net_radn_source type="text" description="net radiation source (calc/eos)">calc</net_radn_source>
      <default_wind_speed type="text" description="m/s">3</default_wind_speed>
      <default_altitude type="text" description="default altitude (m) 275m (700 ft) is approx 980 hPa">18</default_altitude>
      <default_instrum_height type="text" description="default instrument height for wind and temperature (m)">1.2</default_instrum_height>
      <bare_soil_height type="text" description="height of bare soil (mm)">57</bare_soil_height>
    </SoilTemp2>
    <cl name="Cl">
      <d0 description="Cl diffusivity in water (mm2/d)">108</d0>
      <layers description="Cl in each layer (kg/ha)">491 62 1490 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000</layers>
    </cl>
    <erosion name="Erosion">
      <model description="Model Name">freebairn</model>
      <slope description="Slope of plot in percent (%)">6.5</slope>
      <slope_length description="Length of plot (m)">60.0</slope_length>
      <k_factor description="Soil erodibility factor (t/ha/EI 30 )">0.4</k_factor>
      <p_factor description="Supporting practise factor (unitless)">1.0</p_factor>
      <bed_depth description="Depth to bedrock (mm)">1900</bed_depth>
      <profile_reduction type="list" listvalues="off,on" description="Profile Reduction">off</profile_reduction>
      <profile_layer_merge description="Fraction of original size in which the lowest layer is merged into the layer above (0-1)">0.05</profile_layer_merge>
      <minimum_depth description="If the profile erodes to this depth, the simulation is stopped (mm)">100.0</minimum_depth>
    </erosion>
    <Thickness>
      <Values description="Enter soil profile thickness values for APSIM (mm)">100 100 100 300 300 300</Values>
    </Thickness>
  </folder>
  <folder name="Meteorological">
    <metfile name="met">
      <filename name="filename">%apsim%\Examples\MetFiles\dalby.met</filename>
    </metfile>
    <manager name="ClimateControl">
      <ui>
        <category description="Climate Control Window" />
        <date1 type="ddmmmdate" description="Enter window START date (dd-mmm) : ">1-jan</date1>
        <date2 type="ddmmmdate" description="Enter window END date (dd-mmm) : ">31-dec</date2>
        <category description="Climate Change Parameters" />
        <MaxtChange type="text" description="Change in maximum temperature (oC):">1</MaxtChange>
        <MintChange type="text" description="Change in minimum temperature (oC):">1</MintChange>
        <RainChange type="text" description="Relative change in daily rainfall (%):">-10</RainChange>
        <RadnChange type="text" description="Relative change in daily radiation (%):">0</RadnChange>
        <CO2 type="text" description="Atmospheric CO2 Concentration (ppm)">350</CO2>
      </ui>
      <script name="prenewmet">
        <text>
!  Adjust daily temperatures, rainfall and radiation up or down according to user-defined amounts
! To apply different levels of climate control to different times of year add multiple copies of this logic into your simulation and change the window.

if (date_within('[date1], [date2]') = 1) then
   maxt = maxt + [MaxtChange]
   mint = mint + [MintChange]
   rain = rain + rain * [RainChange] / 100
   radn = radn + radn * [RadnChange] / 100
   co2 = [CO2]
 endif
</text>
        <event>prenewmet</event>
      </script>
      <script name="Init">
        <text>co2 = [CO2]</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Climate Change Yearly Increase">
      <ui>
        <category description="Climate Control Year" />
        <startyear type="text" description="Enter year to start climate change from : ">1990</startyear>
        <category description="Yearly Increase in Climate Change Parameters" />
        <MaxtChange type="text" description="Change in maximum temperature (oC):">0.01</MaxtChange>
        <MintChange type="text" description="Change in minimum temperature (oC):">0.01</MintChange>
        <RainChange type="text" description="Relative change in daily rainfall (%):">0</RainChange>
        <RadnChange type="text" description="Relative change in daily radiation (%):">0</RadnChange>
        <CO2 type="text" description="Atmospheric CO2 Concentration (ppm)">1</CO2>
      </ui>
      <script name="prenewmet">
      <text><![CDATA[
!  Yearly increase the daily temperatures, rainfall and radiation up or down according to user-defined amounts

if (year > [startyear]) then

  changemultiplier = year - startyear
   maxt = maxt + ([MaxtChange] * changemultiplier)
   mint = mint + ([MintChange]  * changemultiplier)
   rain = rain + rain * (([RainChange] / 100)  * changemultiplier)
   radn = radn + radn * (([RadnChange] / 100)  * changemultiplier)
   co2 = ([CO2]  * changemultiplier)
 endif
]]></text>
        <event>prenewmet</event>
      </script>
    </manager>
    <patchinput>
      <filename name="filename">
      </filename>
    </patchinput>
    <input />
    <siloinput>
      <station_number></station_number>
      <url>http://apsrunet.apsim.info/cgi-bin/getData.tcl</url>
    </siloinput>
    <micromet name="Micromet">
      <soilalbedo name="soilalbedo">0.23</soilalbedo>
      <a_interception name="a_interception">0.0</a_interception>
      <b_interception name="b_interception">0.0</b_interception>
      <c_interception name="c_interception">0.0</c_interception>
      <d_interception name="d_interception">0.0</d_interception>
    </micromet>
    <eo>
      <vpd_fac description="Tanner Sinclair VPD factor for net positive radiation">0.75</vpd_fac>
      <albedo description="Soil albedo (0-1). Used for net radiation">0.13</albedo>
      <max_albedo description="Albedo at 100% green crop cover (0-1). Used for net radiation">0.23</max_albedo>
      <z0soil description="Soil z0 (used when lai=0) (mm). This is the minimum that z0 may be">3</z0soil>
      <default_wind description="default wind speed (km/day) if not found in system (eg met or manager)">60.0</default_wind>
      <default_pa description="Default atmospheric pressure (hPa) if not found in met or manager">1000</default_pa>
      <default_instrum_height description="Default instrument height (mm) if not found in system">2000</default_instrum_height>
      <disp_instrum description="Zero plane displacement at instrument site (mm)">37.0</disp_instrum>
      <z0_instrum description="Roughness length at instrument site (mm)">4.0</z0_instrum>
      <extinct_coef description="Extinction coefficient for adjustment of Eo_pm to obtain">0.8</extinct_coef>
      <eo_plant_method type="list" listvalues="eo_transpiration,eo_pm,eo_penman,eo_penman_x_cover,eo_penman_d_x_cover,eo_pm_x_cover,eo_pm_x_kfunction,eo_radn_x_kfunction,eo_priestly_taylor,eo_ritchie" description="Method used to calculate plant transpiration (eo_plant)">eo_penman_d_x_cover</eo_plant_method>
      <wind_day_fraction description="Optional fraction of wind in daylight hours (day:night is 2:1)">0.66</wind_day_fraction>
      <adjustment_factor description="Calibration or crop factor">1.0</adjustment_factor>
      <wind_multiplier description="Multiplier for wind to alter wind run for shelter effects (-)">1.0</wind_multiplier>
    </eo>
    <soi>
      <filename>%apsim%\Examples\Climate\phases.soi</filename>
    </soi>
    <ocean_data name="Ocean data">
      <filename name="filename">%apsim%\Examples\Climate\OceanData.dat</filename>
    </ocean_data>
    <gcm_data name="GCM data">
      <filename name="filename">%apsim%\Examples\Climate\GCMData.dat</filename>
    </gcm_data>
  </folder>
  <folder name="Management">
    <manager name="Empty manager">
      <script name="init">
        <text>
        </text>
        <event>init</event>
      </script>
      <script name="start_of_day">
        <text>
        </text>
        <event>start_of_day</event>
      </script>
      <script name="end_of_day">
        <text>
        </text>
        <event>end_of_day</event>
      </script>
    </manager>
    <folder name="Manager (common tasks)">
      <manager name="Sow using a fasw in top layer">
        <ui>
          <category description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <sw1mm type="text" description="sw above ll15 in top layer (mm)">20</sw1mm>
          <category description="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
          <class type="classes" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        </ui>
        <script name="start_of_day">
         <text><![CDATA[     sw1=[sw1mm]/dlayer(1)                                                !convert from mm to a volumetric sw

if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
    if (date_within('[date1], [date2]') = 1) then

    if (sw(1)>=(sw1 + ll15(1))  OR  ('[must_sow]' = 'yes' AND today = date('[date2]'))  then
       [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
       endif
    endif

     if today = date('[date2]') then
        ChooseNextCrop = 'yes'
    endif
endif
      ]]></text>
          <event>start_of_day</event>
        </script>
      </manager>
      <manager name="Sow on a fixed date">
        <script>
          <text>
        if (today = date('[date]') then
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
         endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date type="text" description="Enter sowing date (dd-mmm) : ">1-jan</date>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">10</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">50</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : " />
          <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">500</row_spacing>
        </ui>
      </manager>
      <manager name="Sow using a variable rule">
        <script>
          <text><![CDATA[
      if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : ">hartog</cultivar>
          <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        </ui>
      </manager>
      <manager name="Cotton sowing rule">
        <script>
          <text><![CDATA[
      if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants_pm =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], skiprow = [skiprow]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">cotton</crop>
          <density type="text" description="Enter sowing density  (plants/m2 in row) : ">10</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : ">siok</cultivar>
          <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
          <skiprow type="list" listvalues="0, 1, 2" description="Skip row : ">0</skiprow>
        </ui>
      </manager>
      <manager name="Sorghum sowing rule">
        <script>
          <text><![CDATA[
      if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], skip = [skiprow]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">sorghum</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">7</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : ">early</cultivar>
          <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
          <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
        </ui>
      </manager>
      <manager name="Sorghum Sowing with Tillers">
        <ui>
          <category description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category description="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">sorghum</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">7</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">early</cultivar>
          <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
          <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
          <ftn type="text" description="Enter Fertile Tiller Number :">3</ftn>
        </ui>
        <script name="start_of_day">
          <text><![CDATA[      if (paddock_is_fallow() = 0) then
            outputfile do_output
         endif

         if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
            if (date_within('[date1], [date2]') = 1) then
               if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                   ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
                  ChooseNextCrop = 'yes'   ! for rotations
                  [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], skip = [skiprow], tiller_no_fertile = [ftn]
               endif
               if today = date('[date2]') then
                  ChooseNextCrop = 'yes'
               endif
            endif
         endif
               ]]></text>
          <event>start_of_day</event>
        </script>
        <script name="init">
          <text>
               nextcrop = 0
               fallowin = 0
               </text>
          <event>init</event>
        </script>
      </manager>
      <manager name="SUGAR management">
        <script>
          <text><![CDATA[
            ! -----------------------------------------------------------------
            ! Book keeping to round days to integer values
            plantlen = nearest_int(plantlen)
            ratoonlen = nearest_int(ratoonlen)

            ! Initialise and set a time counter for entire run
            dah = 0

            if (sugar.crop_status = 'alive') then
               dah = 0

               ! Set harvest dates for each crop phase
               if (sugar.DaysAfterSowing = [plantlen] and ratoon_no = 0) or
                  (sugar.DaysAfterSowing = [ratoonlen] and ratoon_no > 0) then

                  sugar harvest

                  if (ratoon_no = [NoRatoons] + 1) then
                     ! plough the crop out
                     sugar kill_crop
                     sugar end_crop

                  else
                     ! Set stalk density
                     sugar.plants = [ratoon_stalks]
                  endif
               else
                  ! We have not reached the harvest date for this ratoon.
               endif

            elseif (sugar.crop_status = 'dead') then
               sugar harvest
               sugar end_crop

            elseif (sugar.crop_status = 'out') and (today = date('[planting_day]') then
               sugar sow plants = 10 (), cultivar = [variety], sowing_depth = [sowing_depth]
               sugar.plants = [plant_stalks]
               dah = 0

            else
               dah = dah + 1
            endif
               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sugar plant crop management parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">sugar</crop>
          <planting_day type="text" description="Enter planting date (dd-mmm) : ">1-jan</planting_day>
          <plantlen type="text" description="Duration of a plant crop (days) (30 days/month * 15 months) : ">450</plantlen>
          <plant_stalks type="text" description="Stalk density of plant crop (/m2) :">10</plant_stalks>
          <variety type="list" listvalues="q117,q96,q138,ts65-28,h73,q141,nco376,n12,n14,cp51,r570,m1356,m55560,q124" description="Planting variety :">q117</variety>
          <sowing_depth type="text" description="Planting depth mm) :">150</sowing_depth>
          <category name="Ratoon management parameters" />
          <NoRatoons type="text" description="Number of ratoons (max = 5): ">4</NoRatoons>
          <ratoonlen type="text" description="Duration of a ratoon crop (days) (30 days/month * 13 months) : ">390</ratoonlen>
          <ratoon_stalks type="text" description="Stalk density of ratoon crop (/m2) :">10</ratoon_stalks>
        </ui>
      </manager>
      <manager name="Lucerne Ley fixed sow harvest at flowering">
        <script>
          <text>
       if (today = date('[date]') then
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
              [crop]LeyYears = [leyyears]
       endif

</text>
          <event>start_of_day</event>
        </script>
        <script name="end_of_day">
          <text><![CDATA[
             if [crop].StageName = 'flowering'  then
                [crop]  harvest height = [harvest_ht]
              endif
              if today= date('[killdate]') and [crop].plant_status <>'out' then
                   if ( [crop]LeyYears > 0 ) then
                         [crop]LeyYears = [crop]LeyYears - 1
                   else
                              [crop] end_crop
                   endif
              endif
         ]]></text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date type="text" description="Enter sowing date (dd-mmm-yyyy) : ">1-jan-1985</date>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : " />
          <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
          <category name="Number of years" />
          <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
          <category name="Harvesting criteria" />
          <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
          <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
          <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
        </ui>
      </manager>
      <manager name="Lucerne Ley variable sow harvest at flowering">
        <script>
          <text><![CDATA[
       if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
               [crop]LeyYears = [leyyears]! for the length of the lucerne ley
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif

         ]]></text>
          <event>start_of_day</event>
        </script>
        <script>
          <text><![CDATA[
                if [crop].StageName = 'flowering'  then
             [crop]  harvest height = [harvest_ht]
        endif
        if today= date('[killdate]') and [crop].plant_status <>'out' then
             if ( [crop]LeyYears > 0 ) then
                   [crop]LeyYears = [crop]LeyYears - 1
             else
                        [crop] end_crop
             endif
        endif
         ]]></text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : " />
          <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
          <category name="Number of years" />
          <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
          <category name="Harvesting criteria" />
          <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
          <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
          <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
        </ui>
      </manager>
      <manager name="Harvesting rule">
        <script>
          <text><![CDATA[
           if ('[crop]' = 'cotton') then
              if ([crop].ozcot_status > 0) then
                  [crop] harvest
              endif
           elseif ([crop].StageName = 'harvest_ripe' or [crop].plant_status = 'dead') then
              [crop]  harvest
              [crop]  end_crop
           endif
]]></text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category name="Harvesting criteria" />
          <crop type="crop" description="Enter name of crop to harvest when ripe : ">wheat</crop>
        </ui>
      </manager>
      <manager name="End crop on a fixed date">
        <script>
          <text>

        if (today = date('[date]') then
              [crop]  end_crop
        endif

            </text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category name="Harvesting criteria" />
          <crop type="crop" description="Enter name of crop to harvest when ripe : ">wheat</crop>
          <date type="text" description="Enter ending date (dd-mmm) : ">1-jan</date>
        </ui>
      </manager>
      <manager name="Fertilise at sowing">
        <script>
          <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = 50 (mm), type = [fert_type_sow]
            </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <modulename type="modulename" description="On which module should the event come from : ">wheat</modulename>
          <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
          <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">150</fert_amount_sow>
          <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">urea_N</fert_type_sow>
        </ui>
      </manager>
      <manager name="Fertilise on fixed date">
        <script>
          <text><![CDATA[
         if (today = date('[fert_date]') then
            N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
            if (N_topsoil < [fert_criteria]) then
               [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
            endif
         endif ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
          <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">150</fert_amount>
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </manager>
      <manager name="Fertilise in a zadok stage window">
        <script>
          <text>
            fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 0
        </text>
          <event>init</event>
        </script>
        <script>
          <text>
            fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 0
        </text>
          <event>sowing</event>
        </script>
        <script>
          <text><![CDATA[
         if (zadok_stage >= [zadok_fert_stage_begin]
            AND zadok_stage <= [zadok_fert_stage_end]
            AND fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 0) then
            if (esw >= [esw_amount]) then
               N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
               if (N_topsoil < [fert_criteria]) then
                  [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
               fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 1
               endif
            endif
         endif
         ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <zadok_fert_stage_begin type="text" description="Enter start of zadok window (10-71):   ">30</zadok_fert_stage_begin>
          <zadok_fert_stage_end type="text" description="Enter end of zadok window (10-71):   ">32</zadok_fert_stage_end>
          <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
          <esw_amount type="text" description="Enter amount of soil water (mm)">30</esw_amount>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">25</fert_amount>
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </manager>
      <manager name="Fertilise on fixed date - top up">
        <script>
          <text>
         if (today = date('[fert_date]') then
            N_deficit = [fert_criteria] - (no3(1) + nh4(1) + no3(2) + nh4(2) + no3(3) + nh4(3))
            '[fertmodule]' apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type] ()
         endif </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
          <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </manager>
      <manager name="Fertilise on days after sowing - top up">
        <script>
          <text>
         if ([modulename].DaysAfterSowing = [fert_das]) then
            N_deficit = [fert_criteria] - (no3(1) + nh4(1) + no3(2) + nh4(2) + no3(3) + nh4(3))
            '[fertmodule]' apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type] ()
         endif </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <modulename type="modulename" description="On which crop is fertiliser being applied : ">wheat</modulename>
          <fert_das type="text" description="Enter fertiliser days after sowing  : ">dd-mmm</fert_das>
          <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </manager>
      <manager name="Fertilise incrop on critical NO3 level- top up">
        <script>
          <text><![CDATA[
         if ([modulename].plant_status = 'alive') then
            NO3_available = no3(1) + no3(2) + no3(3)
            if (NO3_available <= [fert_critical]) then
               N_deficit = [fert_criteria] - NO3_available
               '[fertmodule]' apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type] ()
            endif
         endif ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <modulename type="modulename" description="In which crop is fertiliser being applied : ">wheat</modulename>
          <fert_criteria type="text" description="Maximum Amount of NO3 required in top 3 layers (kg/ha) : ">200</fert_criteria>
          <fert_critical type="text" description="Critical Amount of NO3 in top 3 layers (kg/ha) : ">100</fert_critical>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NO3_N</fert_type>
        </ui>
      </manager>
      <manager name="Irrigate at sowing">
        <script>
          <text><![CDATA[
         if ([irrig_amount_evt] > 0) then
            '[irrigatemodule]' apply amount = [irrig_amount_evt] (mm)
         endif
   ]]></text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should irrigation be applied" />
          <modulename type="modulename" description="The module the event come from : " />
          <eventname type="text" description="Which event should irrigation be applied : ">sowing</eventname>
          <category name="Irrigation application details" />
          <irrigatemodule type="modulename" description="Module used to apply the irrigation : " />
          <irrig_amount_evt type="text" description="Amount of irrigation to apply (mm) : ">50</irrig_amount_evt>
        </ui>
      </manager>
      <manager name="Irrigate on fixed date">
        <script>
          <text>
            if (today = date('[irrigate_date]')) then
               '[irrigate_module]' set irrigation_efficiency = [irrigate_efficiency]
               '[irrigate_module]' apply amount = [irrigate_amount] (mm)
            endif </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should irrigation be applied" />
          <irrigate_date type="ddmmmdate" description="Enter irrigation date (dd-mmm) : ">dd-mmm</irrigate_date>
          <category name="Irrigation application details" />
          <irrigate_module type="modulename" description="Module used to apply the irrigation : ">ClockAllYears</irrigate_module>
          <irrigate_amount type="text" description="Amount of irrigation to apply (mm) : ">50</irrigate_amount>
          <irrigate_efficiency type="text" description="Irrigation efficiency (0-1) : ">1.0</irrigate_efficiency>
        </ui>
      </manager>
        <manager name="irrigate at sw deficit">
          <ui>
            <trigger type="text" description="Enter sw deficit to irrigate at (mm)">50</trigger>
          </ui>
          <script>
            <text>
            </text>
            <event>init</event>
          </script>
          <script>
            <text>if sw_dep() &gt; [trigger] then        
            irrigation apply amount = [trigger]
            endif</text>
            <event>start_of_day</event>
          </script>
          <script>
            <text>
            </text>
            <event>end_of_day</event>
          </script>
        </manager>
        <manager name="Irrigate based on rainfall">
          <ui>
            <category type="category" description="When should irrigation be applied" />
            <pastdays type="text" description="If rainfall over the past number of days">7</pastdays>
            <EnoughRain type="text" description="Is less than (mm)">100</EnoughRain>
            <category type="category" description="This will happen" />
            <irrigate_module type="modulename" description="Module used to apply the irrigation : ">Irrigation</irrigate_module>
            <irrigate_efficiency type="text" description="Irrigation efficiency (0-1) : ">1</irrigate_efficiency>
          </ui>
          <script>
            <text>!if not enough rain has occured then irrigate. 
            !Irrigate with the amount that is missing.
            !Only irrigate if a certain number of days have passed.

            if (rain[[pastdays]] &lt; [EnoughRain]) then
               '[irrigate_module]' set irrigation_efficiency = [irrigate_efficiency]
               difference = [EnoughRain] - rain[[pastdays]]
                '[irrigate_module]' apply amount = difference (mm)
            endif 
            </text>
            <event>start_of_day</event>
          </script>
          <script>
            <text>
            </text>
            <event>init</event>
          </script>
        </manager>
        <manager name="Irrigate at start of week">
          <ui>
            <category description="When should irrigation be applied" type="category" />
            <pastdays type="text" description="If rainfall over the past number of days">7</pastdays>
            <EnoughRain type="text" description="Is less than (mm)">100</EnoughRain>
            <category description="This will happen" type="category" />
            <irrigate_module type="modulename" description="Module used to apply the irrigation : ">Irrigation</irrigate_module>
            <irrigate_efficiency type="text" description="Irrigation efficiency (0-1) : ">1</irrigate_efficiency>
          </ui>
          <script>
            <text>'Every monday check and if not enough rain has occured then irrigate. Irrigate with the amount that is missing
            if (start_week = 1) then
            if (rain[[pastdays]] &lt; [EnoughRain]) then
               '[irrigate_module]' set irrigation_efficiency = [irrigate_efficiency]
               difference = [EnoughRain] - rain[[pastdays]]
                '[irrigate_module]' apply amount = difference (mm)
            endif 
            endif</text>
            <event>start_of_day</event>
          </script>
        </manager>
        <manager name="Irrigation cycle">
          <ui>
            <category description="When should irrigation be applied" type="category" />
            <pastdays type="text" description="If rainfall over the past number of days">7</pastdays>
            <EnoughRain type="text" description="Is less than (mm)">100</EnoughRain>
            <category description="This will happen" type="category" />
            <irrigate_module type="modulename" description="Module used to apply the irrigation : ">Irrigation</irrigate_module>
            <irrigate_efficiency type="text" description="Irrigation efficiency (0-1) : ">1</irrigate_efficiency>
            <irrigcycle type="text" description="number of days in irrigation cycle">7</irrigcycle>
          </ui>
          <script>
            <text>!if not enough rain has occured then irrigate. 
            !Irrigate with the amount that is missing.
            !Only irrigate if a certain number of days have passed.            
			!since last irrigation

            if (dai &gt; [irrigcycle]) then
                if (rain[[pastdays]] &lt; [EnoughRain]) then
                    '[irrigate_module]' set irrigation_efficiency = [irrigate_efficiency]
                    difference = [EnoughRain] - rain[[pastdays]]
                    '[irrigate_module]' apply amount = difference (mm)
                    dai = 0
                endif 
            endif
            dai = dai + 1</text>
            <event>start_of_day</event>
          </script>
          <script>
            <text>
			dai = 0
            </text>
            <event>init</event>
          </script>
        </manager>  
      <manager name="Tillage on fixed date">
        <script>
          <text>
         if (today = date('[tillage_date]') then
            if ('[tillage_type]' = 'user_defined') then
                '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
            else
                '[surfaceommodule]' tillage type = [tillage_type]
            endif
            ready_to_till_pre_sow = 0
            till_day_pre_sow = 0
         endif
      </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should tillage be done" />
          <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) : ">dd-mmm</tillage_date>
          <category name="Tillage application details" />
          <surfaceommodule type="modulename" description="Module used to apply the tillage : " />
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
        </ui>
      </manager>
      <manager name="Tillage on an event">
        <script>
          <text>
            '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
      </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should tillage be performed" />
          <modulename type="modulename" description="The module the event come from : ">ClockAllYears</modulename>
          <eventname type="text" description="On which event should tillage be done : ">sowing</eventname>
          <category name="Tillage details" />
          <surfaceommodule type="modulename" description="Module used to apply the tillage : ">ClockAllYears</surfaceommodule>
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
        </ui>
      </manager>
      <manager name="Reset water, nitrogen and surfaceOM on fixed date">
        <script>
          <text>
         if (today = date('[reset_date]')) then
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            act_mods reseting
         endif
      </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should a reset be done" />
          <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">dd-mmm</reset_date>
          <category name="Reset details" />
          <soilmodule type="modulename" description="Name of your soil module : " />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
          <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
          <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
          <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        </ui>
      </manager>
      <manager name="Reset water, nitrogen and surfaceOM on sowing">
        <script>
          <text>
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            if (resetWater = 'yes' or resetNitrogen = 'yes' or resetSurfaceOM = 'yes') then
               act_mods reseting
            endif
      </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should a reset be done" />
          <modulename type="modulename" description="The module the event is to come from : ">wheat</modulename>
          <eventname type="text" description="On which event should a reset be done : ">sowing</eventname>
          <category name="Reset details" />
          <soilmodule type="modulename" description="Name of your soil module : " />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
          <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
          <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
          <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        </ui>
      </manager>
      <manager name="Rotations">
        <script>
          <text>
         NextCropIndex = 1
         NextCrop = ' '
         ChooseNextCrop = 'yes'
         SummerFallowIn = 'no'
         WinterFallowIn = 'no'
         FallowIn = 'no'
      </text>
          <event>init</event>
        </script>
        <script>
          <text>
      if (ChooseNextCrop = 'yes') then
         if (NextCropIndex = 1) then
            NextCrop = '[crop1]'
         elseif (NextCropIndex = 2) then
            NextCrop = '[crop2]'
         elseif (NextCropIndex = 3) then
            NextCrop = '[crop3]'
         elseif (NextCropIndex = 4) then
            NextCrop = '[crop4]'
         elseif (NextCropIndex = 5) then
            NextCrop = '[crop5]'
         elseif (NextCropIndex = 6) then
            NextCrop = '[crop6]'
         elseif (NextCropIndex = 7) then
            NextCrop = '[crop7]'
         elseif (NextCropIndex = 8) then
            NextCrop = '[crop8]'
         elseif (NextCropIndex = 9) then
            NextCrop = '[crop9]'
         elseif (NextCropIndex = 10) then
            NextCrop = '[crop10]'
         elseif (NextCropIndex = 11) then
            NextCrop = '[crop11]'
         elseif (NextCropIndex = 12) then
            NextCrop = '[crop12]'
         elseif (NextCropIndex = 13) then
            NextCrop = '[crop13]'
         elseif (NextCropIndex = 14) then
            NextCrop = '[crop14]'
         elseif (NextCropIndex = 15) then
            NextCrop = '[crop15]'
         elseif (NextCropIndex = 16) then
            NextCrop = '[crop16]'
         elseif (NextCropIndex = 17) then
            NextCrop = '[crop17]'
         elseif (NextCropIndex = 18) then
            NextCrop = '[crop18]'
         elseif (NextCropIndex = 19) then
            NextCrop = '[crop19]'
         elseif (NextCropIndex = 20) then
            NextCrop = '[crop20]'
         endif
         if (NextCrop = 'nil' or NextCrop = ' ') then
            NextCrop = '[crop1]'
            NextCropIndex = 1
         endif
         NextCropIndex = NextCropIndex + 1
         ChooseNextCrop = 'no'
      endif
      ! if the next crop is due to be a fallow and we're within the
      ! correct date range then put a fallow in.
      if (NextCrop = '[WinterFallowName]') then
         if (paddock_is_fallow() = 1 and FallowIn = 'no') then
            if (date_within('[SummerFallowEndDate], [WinterFallowEndDate]') then
               WinterFallowIn = 'yes'
               FallowIn = 'yes'
               ChooseNextCrop = 'yes'
            endif
         endif
      elseif (NextCrop = '[SummerFallowName]') then
         if (paddock_is_fallow() = 1 and FallowIn = 'no') then
            if (date_within('[WinterFallowEndDate], [SummerFallowEndDate]') then
               SummerFallowIn = 'yes'
               FallowIn = 'yes'
               ChooseNextCrop = 'yes'
            endif
         endif
      endif

      ! if we currently have a fallow in and we're at the end of the fallow window
      ! then remove the fallow.
      if (WinterFallowIn = 'yes' and today = date('[WinterFallowEndDate]')+1) then
         WinterFallowIn = 'no'
         FallowIn = 'no'
      endif
      if (SummerFallowIn = 'yes' and today = date('[SummerFallowEndDate]')+1) then
         SummerFallowIn = 'no'
         FallowIn = 'no'
      endif
      </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Fallow options" />
          <SummerFallowName type="text" description="Enter summer fallow name : ">sf</SummerFallowName>
          <SummerFallowEndDate type="text" description="Enter summer fallow END date (dd-mmm) : ">15-mar</SummerFallowEndDate>
          <WinterFallowName type="text" description="Enter winter fallow name : ">wf</WinterFallowName>
          <WinterFallowEndDate type="text" description="Enter winter fallow END date (dd-mmm) : ">23-aug</WinterFallowEndDate>
          <category name="Crop rotation sequence" />
          <crop1 type="crop" description="Enter 1st crop : ">nil</crop1>
          <crop2 type="crop" description="Enter 2nd crop : ">nil</crop2>
          <crop3 type="crop" description="Enter 3rd crop : ">nil</crop3>
          <crop4 type="crop" description="Enter 4th crop : ">nil</crop4>
          <crop5 type="crop" description="Enter 5th crop : ">nil</crop5>
          <crop6 type="crop" description="Enter 6th crop : ">nil</crop6>
          <crop7 type="crop" description="Enter 7th crop : ">nil</crop7>
          <crop8 type="crop" description="Enter 8th crop : ">nil</crop8>
          <crop9 type="crop" description="Enter 9th crop : ">nil</crop9>
          <crop10 type="crop" description="Enter 10th crop : ">nil</crop10>
          <crop11 type="crop" description="Enter 11th crop : ">nil</crop11>
          <crop12 type="crop" description="Enter 12th crop : ">nil</crop12>
          <crop13 type="crop" description="Enter 13th crop : ">nil</crop13>
          <crop14 type="crop" description="Enter 14th crop : ">nil</crop14>
          <crop15 type="crop" description="Enter 15th crop : ">nil</crop15>
          <crop16 type="crop" description="Enter 16th crop : ">nil</crop16>
          <crop17 type="crop" description="Enter 17th crop : ">nil</crop17>
          <crop18 type="crop" description="Enter 18th crop : ">nil</crop18>
          <crop19 type="crop" description="Enter 19th crop : ">nil</crop19>
          <crop20 type="crop" description="Enter 20th crop : ">nil</crop20>
        </ui>
      </manager>
      <manager name="Yield moisture correction">
        <script>
          <text>
          WetYield = yield / (1 - [MoistureContent]/100)
          </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Properties" />
          <MoistureContent type="text" description="Moisture content of grain (%) : ">12</MoistureContent>
        </ui>
      </manager>
      <manager name="Simple gross margin (put before harvesting rule)">
        <script>
          <text><![CDATA[
           ! Reset the bank to zero the day after harvest.
           if (ResetBank = 1) then
              Bank = 0
              ResetBank = 0
           endif

           ! Subtract fertiliser cost from the bank
           if (fertiliser > 0)then
              Bank = Bank - ([NCost] * fertiliser + [NApplicationCost])
           endif

           ! Add harvest return to the bank
           if StageName = 'harvest_ripe' or plant_status = 'dead' then
              FullPrice = [Price] + (grain_protein - [MinimumProtein]) * 2 * [ProteinIncrement]
              Bank = Bank + FullPrice * (WetYield / 1000)
              ResetBank = 1
           endif
           ]]></text>
          <event>post</event>
        </script>
        <ui>
          <category name="Cost properties" />
          <NCost type="text" description="Cost of N fertiliser ($/ha) : ">1.2</NCost>
          <NApplicationCost type="text" description="Cost of N application ($/ha) : ">15</NApplicationCost>
          <category name="Price properties" />
          <Price type="text" description="Price ($/t) : ">140</Price>
          <MinimumProtein type="text" description="Minimum protein for classification ($/t) : ">10.5</MinimumProtein>
          <ProteinIncrement type="text" description="Protein increment payment ($/t) : ">2</ProteinIncrement>
        </ui>
      </manager>
      <manager name="Publish an event when an APSIM variable meets a 2 part condition">
        <script>
          <text><![CDATA[
          if ([VariableName1] = [VariableValue1] and
              [VariableName2] >= [LowerBound] and
              [VariableName2] <= [UpperBound]) then
             act_mods [EventName]
          endif]]></text>
          <event>post</event>
        </script>
        <ui>
          <category name="Condition1 properties" />
          <VariableName1 type="text" description="Name of 1st APSIM variable to check (e.g. stage_name) : ">stage_name</VariableName1>
          <VariableValue1 type="text" description="Value that 1st variable must have (e.g. flowering) : ">'flowering'</VariableValue1>
          <category name="Condition2 properties" />
          <VariableName2 type="text" description="Name of 2nd APSIM variable to bound check (e.g. maxt, mint, avtemp) : ">mint</VariableName2>
          <LowerBound type="text" description="Lower bound of variable : ">-100</LowerBound>
          <UpperBound type="text" description="Upper bound of variable : ">0</UpperBound>
          <category name="Event properties" />
          <EventName type="text" description="Name of event to publish when above 2 conditions are met : ">SevereFrostAtFlowering</EventName>
        </ui>
      </manager>
      <manager name="Create a yes-no variable when within x TT of start of a crop stage">
        <script>
          <text><![CDATA[
            if (StageName = '[StageName]') then
               TTFromStart[StageName] = TTFromStart[StageName] + TT
               [OutputVariableName] = 'yes'
               if (TTFromStart[StageName] > [TT]) then
                  [OutputVariableName] = 'no'
               endif
            else
               TTFromStart[StageName] = 0
               [OutputVariableName] = 'no'
            endif ]]></text>
          <event>post</event>
        </script>
        <ui>
          <category name="Properties" />
          <StageName type="text" description="Crop stage name (e.g. start_grain_fill) : ">start_grain_fill</StageName>
          <TT type="text" description="Thermal time threshold : ">150</TT>
          <category name="Output variable properties" />
          <OutputVariableName type="text" description="Name of output variable to hold yes/no flag : ">InHeatShockWindow</OutputVariableName>
        </ui>
      </manager>
      <manager name="Establish Bambatsi pasture">
        <ui>
          <category description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">1-sep</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">31-dec</date2>
          <raincrit type="text" description="Amount of rainfall : ">15</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <category description="Sowing parameters" />
          <crop type="crop" description="Enter name of growth module to sow : ">bambatsi</crop>
          <density type="text" description="Enter sowing density  (plants/ha) : ">100</density>
        </ui>
        <script name="init">
          <text>
  bambatsi_in = 0
            </text>
          <event>init</event>
        </script>
        <script name="start_of_day">
          <text><![CDATA[
    if (date_within('[date1], [date2]') = 1) and bambatsi_in = 0 then
        if (rain[[rainnumdays]] >= [raincrit] then
               [crop]  establish plants =[density], init_section = seedling
        bambatsi_in = 1
        endif
   endif
            ]]></text>
          <event>start_of_day</event>
        </script>
      </manager>
      <manager name="Manage Bambatsi">
        <ui>
          <category description="Cutting criteria" />
          <hmass type="text" description="Enter critical biomass for harvest (kg/ha) : ">2000</hmass>
          <category description="Cutting parameters" />
          <crop type="crop" description="Enter name of growth module to cut : ">bambatsi</crop>
          <ffraction type="text" description="Enter fraction of foliage removed  (0-1) : ">0.9</ffraction>
          <sfraction type="text" description="Enter fraction of stem removed  (0-1) : ">0.9</sfraction>
        </ui>
        <script name="start_of_day">
          <text><![CDATA[
         if ([crop].biomass > [hmass] and bambatsi_in = 1 then
               [crop]  cut foliage_remove_fr = [ffraction], adm_remove_fr = [sfraction]
         endif
            ]]></text>
          <event>start_of_day</event>
        </script>
      </manager>
    <manager name="Canola Oil Conc Calculator">
      <script>
        <event>script</event>
        <text><![CDATA[start_of_day
         if (DaysAfterSowing = 1) then
            cum_temp = 0
            cum_swdef = 0
            cum_days = 0
         elseif (StageName = 'start_grain_fill' or
                       StageName = 'end_grain_fill' or
                       StageName = 'maturity' or
                       StageName = 'harvest_ripe') then
            cum_temp = cum_temp + (maxt + mint) / 2
            cum_swdef = cum_swdef + swdef_photo
            cum_days = cum_days + 1
         endif

         ! calculate canola oil content
         if (cum_days > 0) then
            avg_temp = cum_temp / cum_days
            avg_swdef = cum_swdef / cum_days
            if (avg_temp <= 14) then
               oil_conc =  47
            else
               oil_conc = (47 - ((avg_temp - 14)*1.21)) - (1.91*(1 - avg_swdef^2))
            endif
         else
            oil_conc = 0
         endif
      ]]></text>
      </script>
    </manager>
	<manager name="Residue percipitation interception">
            <script>
              <text>!initialise variables

precip = 0
Maximum_interception = 0
Residue_water = 0
Interception_today = 0
Evaporated_interception = 0
</text>
              <event>init</event>
            </script>
            <script>
              <text>!Set interception variables
     
precip = rain + irrigation.irrigation 
Maximum_interception = 0.0002 * surfaceom_wt
            
! Determine the amount of water intercepted by residue today

if (precip * surfaceom_cover) &gt;= (Maximum_interception - Residue_water) then
   Interception_today = (Maximum_interception - Residue_water)
else
   Interception_today = (precip * surfaceom_cover) 
endif 

! Send message to soil module to take interception out of water balance
    
residueinterception = Interception_today
            
! Add intercepted water into residual water pool

Residue_water = Residue_water + Interception_today


! The remainder of the residue interception/evaporation procedure is on the end_of_day tab
            
</text>
              <event>start_of_day</event>
            </script>
            <script>
              <text>! calculate the amount of water that is going to evaporate from the residue water pool

if Residue_water &gt; eo then
   Evaporated_interception = eo
else
   Evaporated_interception = Residue_water
endif

! remove evaporation from residue water pool               

Residue_water = Residue_water - Evaporated_interception</text>
              <event>end_of_day</event>
            </script>
        </manager>
    </folder>
    <folder name="Manager.NET (common tasks)">
	<manager2 name="Plant1 Defoliation Rule">
          <ui>
            <DefoliationDateString type="text" description="Date of defoliation">05/9/1998</DefoliationDateString>
            <ResidualStem type="text" description="Amount of stem remaining after defoliation (g/m2)">10</ResidualStem>
            <ResidualLeaf type="text" description="Amount of leaf remaining after defoliation (g/m2)">10</ResidualLeaf>
            <Crop2Defoliate type="crop" description="Name of crop to defoliate (must be a Plant1 crop)">wheat</Crop2Defoliate>
          </ui>
          <text>
using System;
using ModelFramework;

public class Script : Instance
   {
   [Param()] private string DefoliationDateString;
   [Param()] private double ResidualStem;
   [Param()] private double ResidualLeaf;
   [Param()] private string Crop2Defoliate;
   
   [Link()]
   public Paddock MyPaddock;
   [Input()] private DateTime Today;
   
   private double GreenLeaf = 0.0;
   private double GreenStem = 0.0;
   private double dlt_GreenLeaf = 0.0;
   private double dlt_GreenStem = 0.0;
   private double Grazed = 0.0;
   
   [Output()]
   private DateTime DefoliationDate;
   
   public override void Initialised()
   {
      DefoliationDate = DateTime.ParseExact(DefoliationDateString, "d/M/yyyy", null);
   }
      
   [EventHandler] public void OnPrepare()
   {
      if ((Today &gt;= DefoliationDate) &amp;&amp; (Grazed == 0))   
         {
            Grazed = 1;
            GreenLeaf = MyPaddock.ComponentByName(Crop2Defoliate).Variable("leafgreenwt").ToDouble();
            GreenStem = MyPaddock.ComponentByName(Crop2Defoliate).Variable("stemgreenwt").ToDouble();

            dlt_GreenLeaf = Math.Max(0, GreenLeaf - ResidualLeaf);
            dlt_GreenStem = Math.Max(0, GreenStem - ResidualStem);
 
            RemoveCropBiomassdmType GreenRemoveCropDmDm = new RemoveCropBiomassdmType();
         
            GreenRemoveCropDmDm.pool = "green";
            GreenRemoveCropDmDm.part = new string[]
               {"leaf","stem"};
            GreenRemoveCropDmDm.dlt = new double[] 
               {dlt_GreenLeaf, dlt_GreenStem};
         
            RemoveCropBiomassType MyRemoveCropDM = new RemoveCropBiomassType();
        
            MyRemoveCropDM.dm = new RemoveCropBiomassdmType[] { GreenRemoveCropDmDm };
         
            MyPaddock.ComponentByName(Crop2Defoliate).Publish("remove_crop_biomass", MyRemoveCropDM);
         
         Console.WriteLine(Today.ToShortDateString() + " - " + "Plant1 Defoliation Rule Invoked");
         Console.WriteLine("          - " + Crop2Defoliate + " has been defoliated");
         Console.WriteLine("          - Removed " + dlt_GreenLeaf + " g/m2 of Leaf");
         Console.WriteLine("          - Removed " + dlt_GreenStem + " g/m2 of Stem");
         Console.WriteLine(" ");
         }
   }
}
      </text>
     </manager2>
	</folder>
	<folder name="African and Indian specialisations">
      <folder name="Phosphorus and Manure">
        <manager name="Fertilise with Phosphorus at sowing">
          <script>
            <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = 50 (mm), type = [fert_type_sow]
            </text>
            <event>[modulename].[eventname]</event>
          </script>
          <ui>
            <category name="When should fertiliser be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">maize</modulename>
            <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
            <category name="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">150</fert_amount_sow>
            <fert_type_sow type="list" listvalues="rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">broadcast_p</fert_type_sow>
          </ui>
        </manager>
        <manager name="Fertilise with Phosphorus on fixed date">
          <script>
            <text>
         if (today = date('[fert_date]') then
               [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
         endif </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="When should fertiliser be applied" />
            <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
            <category name="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">150</fert_amount>
            <fert_type type="list" listvalues="rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">broadcast_p</fert_type>
          </ui>
        </manager>
        <manager name="Manure on fixed date">
          <script>
            <text>
         if (today = date('[manure_date]') then
               '[surfaceommodule]' add_surfaceom type=[manure_type], name=[manure_type], mass=[manure_amount], cnr=[manure_cnr], cpr=[manure_cpr]
         endif </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="When should fertiliser be applied" />
            <manure_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</manure_date>
            <category name="Manure application details" />
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <manure_amount type="text" description="Amount of manure to apply (kg/ha) : ">4</manure_amount>
            <manure_type type="list" listvalues="manure,fym,heap_uncov,heap_cov,pit,communal" description="manure type : ">manure</manure_type>
            <manure_cnr type="text" description="manure CNR : ">20</manure_cnr>
            <manure_cpr type="text" description="manure CPR : ">50</manure_cpr>
          </ui>
        </manager>
        <manager name="Manure at sowing">
          <script>
            <text>
               '[surfaceommodule]' add_surfaceom type=[manure_type], name=[manure_type], mass=[manure_amount], cnr=[manure_cnr], cpr=[manure_cpr]
            </text>
            <event>[modulename].[eventname]</event>
          </script>
          <ui>
            <category name="When should manure be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">wheat</modulename>
            <eventname type="text" description="On which event should manure be applied : ">sowing</eventname>
            <category name="Manure application details" />
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <manure_amount type="text" description="Amount of manure to apply (kg/ha) : ">4</manure_amount>
            <manure_type type="list" listvalues="manure,fym,heap_uncov,heap_cov,pit,communal" description="manure type : ">manure</manure_type>
            <manure_cnr type="text" description="manure CNR : ">20</manure_cnr>
            <manure_cpr type="text" description="manure CPR : ">50</manure_cpr>
          </ui>
        </manager>
      </folder>
      <folder name="Tillage">
        <manager name="Tillage with cn_red on fixed date">
          <script>
            <text>
         if (today = date('[tillage_date]') then
            if ('[tillage_type]' = 'user_defined') then
                '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
                '[soilmodule] Water' type = [tillage_type], cn_red = [tillage_cn_red], cn_rain = [tillage_cn_rain]
            else
                '[surfaceommodule]' tillage type = [tillage_type]
                '[soilmodule] Water' type = [tillage_type]
            endif
            ready_to_till_pre_sow = 0
            till_day_pre_sow = 0
         endif
      </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="When should tillage be done" />
            <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) : ">dd-mmm</tillage_date>
            <category name="Tillage application details" />
            <surfaceommodule type="modulename" moduletype="surfaceom" description="Module used to apply the tillage : " />
            <soilmodule type="modulename" moduletype="soil" description="Name of your soil module : " />
            <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
            <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
            <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
            <tillage_cn_red description="cn reduction after tillage () : ">0</tillage_cn_red>
            <tillage_cn_rain description="amount of cummulative rain to dissipate tillage effects on cn () : ">0</tillage_cn_rain>
          </ui>
        </manager>
      </folder>
      <folder name="Intercropping, Rotations and Weeds">
      <manager name="End crop on a fixed date for intercropping">
        <script>
          <text>

        if (today = date('[date]') then
            [crop] kill_crop
            [crop] end_crop
                  crop_in = crop_in - 1
            [crop]_to_harvest = 0
            fert_tot = 0
            sow_year = 0
            if (crop_current = '[crop]') then
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current1 = '[crop]') then
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current2 = '[crop]') then
               crop_current2 = blank
            endif
        endif

            </text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category name="Harvesting criteria" />
          <crop type="crop" description="Enter name of crop to end : ">weed</crop>
          <date type="text" description="Enter ending date (dd-mmm) : ">1-jan</date>
        </ui>
      </manager>
        <manager name="Harvesting rule for intercropping">
          <script>
            <text>
          [crop]_to_harvest = 0
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
         if ([crop]_to_harvest = 1) then
            [crop] harvest, remove=[fraction_to_remove]
            [crop] kill_crop
            [crop] end_crop
                  crop_in = crop_in - 1
            [crop]_to_harvest = 0
            fert_tot = 0
            sow_year = 0
            if (crop_current = '[crop]') then
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current1 = '[crop]') then
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current2 = '[crop]') then
               crop_current2 = blank
            endif
         endif

         if ([crop].StageName = 'harvest_ripe' OR [crop].plant_status = 'dead') then
            [crop]_to_harvest = 1
         endif
            </text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">maize</crop>
            <fraction_to_remove type="text" description="Enter fraction of stover to remove (not for maize): ">0.0</fraction_to_remove>
          </ui>
        </manager>
        <manager name="Output at harvesting for intercropping">
          <script>
            <text>
         if ([crop]_to_harvest = 1) then
            '[outputfile]' do_output
         endif
            </text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Output criteria" />
            <crop type="crop" description="Enter name of crop to output at harvest : ">maize</crop>
            <outputfile type="modulename" moduletype="outputfile" description="Name of outputfile component : " />
          </ui>
        </manager>
        <manager name="Output at all phenological stages">
          <script>
            <text>
               last_stage_name = 'none'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
         if [crop].StageName = last_stage_name  then
         else
            '[outputfile]' do_output
         endif
         last_stage_name = [crop].StageName
            </text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Output criteria" />
            <crop type="crop" description="Enter name of crop to output at harvest : ">maize</crop>
            <outputfile type="modulename" moduletype="outputfile" description="Name of outputfile component : " />
          </ui>
        </manager>
        <manager name="Output at specified phenological stage">
          <script>
            <text>
         if [crop].StageName = [StageName]  then
         else
            '[outputfile]' do_output
         endif
         last_stage_name = [crop].StageName
            </text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Output criteria" />
            <crop type="crop" description="Enter name of crop to output at harvest : ">maize</crop>
            <stage_name type="list" listvalues="sowing,germination,emergence,end_of_juvenile,floral_initiation,flag_leaf,flowering,start_grain_fill,end_grain_fill,maturity,harvest_ripe,end_crop" description="Phenological stage name at which to output : ">flowering</stage_name>
            <outputfile type="modulename" moduletype="outputfile" description="Name of outputfile component : " />
          </ui>
        </manager>
        <manager name="Sow using a variable rule with intercropping">
          <script>
            <text>
         next = 1
         crop_in = 0
         blank = 'fallow'
         next_crop = blank
         crop_current = blank
         crop_current1 = blank
         crop_current2 = blank
         crop_sow = blank
         ready_for_next = 1
         ready_to_manure_pre_sow = 0
         days_last_year = 365
         manure_day_pre_sow = 0
         ready_to_till_pre_sow = 0
         till_day_pre_sow = 0
         days_after_weed_kill = 0
        </text>
            <event>init</event>
          </script>
          <script>
            <text>

         if (date_within('[date1], [date2]') = 1) THEN
         else
            wht_sow_opp_num = 0
            wht_sow_opp_days = 0
         endif
         </text>
            <event>end_of_day</event>
          </script>
          <script>
            <text><![CDATA[
         days_this_year = 364 + (date('1-mar') - date('28-feb'))
         if (next_crop = '[crop]' OR next_crop = blank OR '[rotation_exclude]' = 'yes') then
               !  Presowing  manure application

            if ([manure_amount_pre_sow] > 0) then
               !  calculate day to fertilise
               manure_day_pre_sow = date('[date1]') - [manure_days_pre_sow]
               ! Need to correct for possible year boundary condition
               if (manure_day_pre_sow < today) then
                  manure_day_pre_sow = days_this_year + manure_day_pre_sow
               endif
               if (today = manure_day_pre_sow) then
                  ready_to_manure_pre_sow = 1
               endif
               if (crop_in = 0 and ready_to_manure_pre_sow = 1) then
                        ! just put on a fixed amount of manure
                  '[surfaceommodule_pre_sow]' add_surfaceom type=[manure_type_pre_sow], name=[manure_type_pre_sow], mass=[manure_amount_pre_sow], cnr=[manure_cnr_pre_sow], cpr=[manure_cpr_pre_sow]
                  ready_to_manure_pre_sow = 0
                  manure_day_pre_sow = 0
               endif
            endif

               !  Presowing  fertiliser application

            if ([fert_amount_pre_sow] > 0 OR [totn_pre_sow] > 0 ) then
               !  calculate day to fertilise
               fert_day_pre_sow = date('[date1]') - [fert_days_pre_sow]
               ! Need to correct for possible year boundary condition
               if (fert_day_pre_sow < today) then
                  fert_day_pre_sow = days_this_year + fert_day_pre_sow
               endif
               if (today = fert_day_pre_sow) then
                  ready_to_fert_pre_sow = 1
               endif
               if (crop_in = 0 and ready_to_fert_pre_sow = 1) then
                  if ([totn_pre_sow] > 0) then
                     !   Top up soil N of top 3 layers
                     N_deficit = [totn_pre_sow] - (no3(1) + nh4(1) + no3(2) + nh4(2) + no3(3) + nh4(3))
                     if (N_deficit < 0) then
                        ! do nothing
                        N_deficit = 0
                     else
                        fertiliz apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type_pre_sow] ()
                     endif
                  else
                     N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
                     if (N_topsoil > [fert_criteria_pre_sow]) then
                        ! enough N already in topsoil
                     else
                        ! just put on a fixed amount of N
                        fertiliz apply amount = [fert_amount_pre_sow] (kg/ha), depth = 50 (mm), type = [fert_type_pre_sow] ()
                     endif
                  endif
                  ready_to_fert_pre_sow = 0
                  fert_day_pre_sow = 0
               endif
            endif

            !   Tillage - presowing seedbed preparation
            if ( [till_days_pre_sow] > 0) then
               ! calculate presowing tillage date
               till_day_pre_sow = date('[date1]') - [till_days_pre_sow]
               ! Need to correct for possible year boundary condition
               if (till_day_pre_sow < today) then
                  till_day_pre_sow = days_this_year + till_day_pre_sow
               endif
               if (today = till_day_pre_sow) then
                  ready_to_till_pre_sow = 1
               endif
               if ((crop_in = 0 OR '[must_till]' = 'yes') AND (ready_to_till_pre_sow = 1)) then
                  ! tillage
                if (crop_current = 'weed' or crop_current1 = 'weed' or crop_current2 = 'weed') then
                  if (weed.plant_status <> 'out') then
                        weed harvest, remove=[fraction]
                        weed kill_crop
                        weed end_crop
                        days_after_weed_kill = 0
                       crop_in = crop_in - 1
                       if (crop_current = 'weed') then
                           crop_current = crop_current1
                           crop_current1 = crop_current2
                           crop_current2 = blank
                        elseif (crop_current1 = 'weed') then
                           crop_current1 = crop_current2
                           crop_current2 = blank
                        elseif (crop_current2 = 'weed') then
                           crop_current2 = blank
                        endif
                  endif
                 endif
                  if ('[tillage_type]' = 'user_defined') then
                      '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
                      '[soilmodule] Water' type = [tillage_type], cn_red = [tillage_cn_red], cn_rain = [tillage_cn_rain]
                  else
                      '[surfaceommodule]' tillage type = [tillage_type] ()
                      '[soilmodule] Water' type = [planter_type]
                  endif
                  ready_to_till_pre_sow = 0
                  till_day_pre_sow = 0
               endif
            endif

            if (today = date('[date2]')) then
               if ('[rotation_exclude]' = 'no') then
                  ready_for_next = 1
               endif
            endif

            if (wht_sow_opp_num > 0) then
               wht_sow_opp_days = wht_sow_opp_days + 1
            else
            endif

         if (crop_in = 0 OR ('[cropmethod]' = 'intercrop'
             AND [crop].plant_status = 'out')) then
               if (date_within('[date1], [date2]') = 1) then
                  crop_sow = 'waiting'
                  surface_moist = (sw(1) - ll15(1)) / (dul(1)- ll15(1))
                  if ((rain[[rain_days]] >= [rain_amount]  AND  esw >= [esw_amount] AND
                        (surface_moist <= [surface_up] and surface_moist >= [surface_low])) OR
                      ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN


                     if (wht_sow_opp_days >= [rain_days] OR wht_sow_opp_num = 0) then
                        wht_sow_opp_num = wht_sow_opp_num + 1
                        wht_sow_opp_days = 0
                     endif

                     if ((wht_sow_opp_num >= [sow_opp]) OR ('[must_sow]' = 'yes' AND today = date('[date2]')) then
                        if ('[crop]' = 'sorghum') then
                           [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar1], row_spacing = [row_spacing], tiller_no_fertile = [ftn] (), skip = [skiprow]
                        else
                          [crop] sow cultivar = [cultivar1], plants = [density] (plants/m2), sowing_depth = [depth], row_spacing = [row_spacing]
                        endif
                        crop_in = crop_in + 1
                        if ('[rotation_exclude]' = 'no') then
                           ready_for_next = 1
                        endif
                        crop_current2 = crop_current1
                        crop_current1 = crop_current
                        crop_current = '[crop]'
                        crop_sow = '[crop]'
                        ready_to_manure_pre_sow = 0
                        if ([fert_amount_sow] > 0) then
                           fertiliser apply amount = [fert_amount_sow] (kg/ha), depth = 50 (mm), type = [fert_type_sow] ()
                        endif
                        !   Planter -
                        ! Planting
                        if (crop_current = 'weed' or crop_current1 = 'weed' or crop_current2 = 'weed') then
                           if (weed.plant_status <> 'out' AND [thin_fraction] > 0) then
                              weed kill_crop plants_kill_fraction = [thin_fraction]
                              if ([thin_fraction] = 1.0) then
                                 weed end_crop
                                 days_after_weed_kill = 0
                              else
                              endif
                              if ([thin_fraction] = 1.0) then
                                    crop_in = crop_in - 1
                                   if (crop_current = 'weed') then
                                       crop_current = crop_current1
                                       crop_current1 = crop_current2
                                       crop_current2 = blank
                                    elseif (crop_current1 = 'weed') then
                                       crop_current1 = crop_current2
                                       crop_current2 = blank
                                    elseif (crop_current2 = 'weed') then
                                       crop_current2 = blank
                                    endif
                              endif
                           endif
                        endif
                        if ('[planter_type]' = 'user_defined') then
                            '[surfaceommodule]' tillage type = [planter_type], f_incorp = [planter_f_incorp] (), tillage_depth = [planter_depth]
                            '[soilmodule] Water' type = [planter_type], cn_red = [planter_cn_red], cn_rain = [planter_cn_rain]
                        else
                            '[surfaceommodule]' tillage type = [planter_type] ()
                            '[soilmodule] Water' type = [planter_type]
                        endif


                     else
                        !not this opportunity
                     endif
                  endif
               endif
            endif
         endif
         ! apply topdress fertiliser
         if ([fert_amount_TopDress] > 0.0) then
            if ([crop].DaysAfterSowing = [fert_days_TopDress]) then
               fertiliser apply amount = [fert_amount_TopDress] (kg/ha), depth = 50 (mm), type = [fert_type_TopDress] ()
            else
            endif
         else
         endif
         ]]></text>
            <event>process</event>
          </script>
          <ui>
            <category name="Crop properties" />
            <crop description="Name of this crop" type="crop">maize</crop>
            <cultivar1 type="cultivars" croppropertyname="crop" description="Enter cultivar : ">katumani</cultivar1>
            <cropmethod description="Method of cropping" type="list" listvalues="sole,intercrop">sole</cropmethod>
            <rotation_exclude description="Exclude from rotation sequence" type="yesno">no</rotation_exclude>
            <category name="Sowing criteria" />
            <date1 description="Enter sowing window START date (dd-mmm)" type="ddmmmdate">1-nov</date1>
            <date2 description="Enter sowing window END date (dd-mmm)" type="ddmmmdate">30-dec</date2>
            <must_sow description="Must Sow" type="yesno">no</must_sow>
            <rain_amount description="Enter amount of cumulative rainfall (mm)">20</rain_amount>
            <rain_days description="Enter number of days to accumulate rainfall (days)">5</rain_days>
            <esw_amount description="Enter amount of soil water (mm)">30</esw_amount>
            <sow_opp description="Enter sowing opportunity number to sow on (1..n)">1</sow_opp>
            <surface_up description="Enter upper limit of sw in top layer (0-2) (mm esw/mm soil)">2</surface_up>
            <surface_low description="Enter lower limit of sw in top layer (0-1) (mm esw/mm soil)">0</surface_low>
            <category name="Sowing specs" />
            <density description="Enter sowing density  (plants/m2)">5</density>
            <depth description="Enter sowing depth  (mm)">100</depth>
            <row_spacing description="Enter row spacing  (mm) (m for maize and sorghum)" type="text">0.9</row_spacing>
            <category name="Sorghum specs" />
            <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
            <category name="Starter fertiliser application" />
            <fert_amount_sow description="Amount of starter fertiliser at sowing (kg/ha)" type="text">0</fert_amount_sow>
            <fert_type_sow description="Type" type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea">urea_N</fert_type_sow>
            <category name="TopDress fertiliser application" />
            <fert_days_TopDress description="Enter number of days after sowing to apply top-dress fertiliser (days)" type="text">60</fert_days_TopDress>
            <fert_amount_TopDress description="Amount of TopDress fertiliser (kg/ha)" type="text">0</fert_amount_TopDress>
            <fert_type_TopDress description="Type" type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p">urea_N</fert_type_TopDress>
            <category name="Pre-sowing manure application" />
            <surfaceommodule_pre_sow type="modulename" description="Module used to apply the manure : ">surface organic matter</surfaceommodule_pre_sow>
            <manure_days_pre_sow description="Enter number of days before window to apply pre-crop manure (days)" type="text">30</manure_days_pre_sow>
            <manure_amount_pre_sow type="text" description="Amount of manure to apply (kg/ha) : ">4000</manure_amount_pre_sow>
            <manure_type_pre_sow type="list" listvalues="manure,fym,heap_uncov,heap_cov,pit,communal" description="manure type : ">manure</manure_type_pre_sow>
            <manure_cnr_pre_sow type="text" description="manure CNR : ">25</manure_cnr_pre_sow>
            <manure_cpr_pre_sow type="text" description="manure CPR : ">50</manure_cpr_pre_sow>
            <category name="Pre-sowing fertiliser application" />
            <fert_days_pre_sow description="Enter number of days before window to apply pre-crop fertiliser (days)" type="text">30</fert_days_pre_sow>
            <fert_amount_pre_sow description="Amount of pre-crop fertiliser (kg/ha)" type="text">0</fert_amount_pre_sow>
            <fert_criteria_pre_sow description="Don't add fertiliser if pre-crop N in top 2 layers exceeds (kg/ha)" type="text">1000</fert_criteria_pre_sow>
            <totn_pre_sow description=" OR  Amount of pre-crop N required in top 3 layers (kg/ha)" type="text">0</totn_pre_sow>
            <fert_type_pre_sow description="Type (NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p)" type="text">urea_N</fert_type_pre_sow>
            <category name="Tillage components" />
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <soilmodule type="modulename" description="Name of your soil module : " />
            <category name="Planter Tillage" />
            <planter_type description="Planter type" type="list" listvalues="user_defined, planter">planter</planter_type>
            <planter_depth description="User_defined depth of seedbed preparation (mm)" type="text">0</planter_depth>
            <thin_fraction description="Enter fraction of weed population killed (0-1)" type="text">1.0</thin_fraction>
            <planter_f_incorp description="User_defined fraction of surface residues to incorporate (0-1)" type="text">0</planter_f_incorp>
            <planter_cn_red description="cn reduction after tillage () : ">0</planter_cn_red>
            <planter_cn_rain description="amount of cummulative rain to dissipate tillage effects on cn () : ">0</planter_cn_rain>
            <category name="Seed-bed Tillage Preparation" />
            <till_days_pre_sow description="Enter number of days before window to prepare seed-bed (days)" type="text">0</till_days_pre_sow>
            <must_till description="Must Till (yes/no)" type="yesno">no</must_till>
            <tillage_type description="Tillage type (user_defined, chisel, disc, planter)" type="list" listvalues="user_defined,chisel,disc,planter,burn,burn_90,graze,scarifier,rip,blade,tine">disc</tillage_type>
            <tillage_depth description="User_defined depth of seedbed preparation (mm)" type="text">100</tillage_depth>
            <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1)" type="text">1</tillage_f_incorp>
            <fraction description="Enter biomass removal fraction of growing weeds from field (0-1)" type="text">0.0</fraction>
            <tillage_cn_red description="cn reduction after tillage () : ">0</tillage_cn_red>
            <tillage_cn_rain description="amount of cummulative rain to dissipate tillage effects on cn () : ">0</tillage_cn_rain>
          </ui>
        </manager>
        <manager name="Sow WEEDS using a variable rule with intercropping">
          <script>
            <text>
         next = 1
         crop_in = 0
         blank = 'fallow'
         next_crop = blank
         crop_current = blank
         crop_current1 = blank
         crop_current2 = blank
         crop_sow = blank
         ready_for_next = 1
         ready_to_fert_pre_sow = 0
         days_last_year = 365
         fert_day_pre_sow = 0
         ready_to_till_pre_sow = 0
         till_day_pre_sow = 0
         days_after_weed_kill = 0

      </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
               if (next_crop = '[crop]' OR next_crop = blank OR '[rotation_exclude]' = 'yes') then


                  if (today = date('[date2]')) then
                     if ('[rotation_exclude]' = 'no') then
                        ready_for_next = 1
                     endif
                  endif

                  if (wd_sow_opp_num > 0) then
                     wd_sow_opp_days = wd_sow_opp_days + 1
                  else
                  endif

                  if (crop_in = 0 OR ('[cropmethod]' = 'intercrop'
                      AND weed.plant_status = 'out')
                      AND days_after_weed_kill > 0) then
                        if (date_within('[date1], [date2]') = 1) then
                           crop_sow = 'waiting'
                           surface_moist = (sw(1) - ll15(1)) / (dul(1)- ll15(1))
                           if ((rain[[rain_days]] >= [rain_amount]  AND  esw >= [esw_amount] AND
                                 (surface_moist <= [surface_up] and surface_moist >= [surface_low])) OR
                               ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN


                              if (wd_sow_opp_days >= [rain_days] OR wd_sow_opp_num = 0) then
                                 wd_sow_opp_num = wd_sow_opp_num + 1
                                 wd_sow_opp_days = 0
                              endif

                              if ((wd_sow_opp_num >= [sow_opp]) OR ('[must_sow]' = 'yes' AND today = date('[date2]')) then
                                 if (date_within('[date1], [date_ch1]') = 1) then
                                    weed sow crop_class = [cla], plants = [density] (plants/m2), sowing_depth = [depth], cultivar = [cultivar1], row_spacing = [row_spacing]
                                 else
                                    weed sow crop_class = [cla], plants = [density] (plants/m2), sowing_depth = [depth], cultivar = [cultivar2], row_spacing = [row_spacing]
                                 endif
                                 crop_in = crop_in + 1
                                 if ('[rotation_exclude]' = 'no') then
                                    ready_for_next = 1
                                 endif
                                 crop_current2 = crop_current1
                                 crop_current1 = crop_current
                                 crop_current = '[crop]'
                                 crop_sow = '[crop]'
                              else
                                 !not this opportunity
                              endif
                        endif
                     endif
                  endif
               endif
                           ]]></text>
            <event>process</event>
          </script>
          <script>
            <text><![CDATA[

              days_this_year = 364 + (date('1-mar') - date('28-feb'))
              days_after_weed_kill = days_after_weed_kill + 1

               if (next_crop = '[crop]' OR next_crop = blank OR '[rotation_exclude]' = 'yes') then
                  !   Tillage - presowing seedbed preparation
                  if ( [till_days_pre_sow] > 0) then
                     ! calculate presowing tillage date
                     till_day_pre_sow = date('[date1]') - [till_days_pre_sow]
                     ! Need to correct for possible year boundary condition
                     if (till_day_pre_sow < today) then
                        till_day_pre_sow = days_this_year + till_day_pre_sow
                     endif
                     if (today = till_day_pre_sow) then
                        ready_to_till_pre_sow = 1
                     endif
                     if ((crop_in = 0 OR '[must_till]' = 'yes') AND (ready_to_till_pre_sow = 1)) then
                        ! tillage
                        if (weed.plant_status <> 'out') then
                           weed harvest, remove=[fraction]
                           weed kill_crop
                           weed end_crop
                           crop_in = crop_in - 1
                          if (crop_current = 'weed') then
                              crop_current = crop_current1
                              crop_current1 = crop_current2
                              crop_current2 = blank
                           elseif (crop_current1 = 'weed') then
                              crop_current1 = crop_current2
                              crop_current2 = blank
                           elseif (crop_current2 = 'weed') then
                              crop_current2 = blank
                           endif
                        endif
                     endif
                  endif
               endif


               if (date_within('[date1], [date2]') = 1) THEN
               else
                  wd_sow_opp_num = 0
                  wd_sow_opp_days = 0
               endif

            ]]></text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Crop properties" />
            <crop type="crop" description="Name of this crop">weed</crop>
            <cultivar1 type="list" listvalues="late, early" description="Enter first type"> early</cultivar1>
            <cla type="list" listvalues="winter_grass, winter_dicot, summer_grass, perennial_legume" description="Enter class type "> summer_grass</cla>
            <date_ch1 type="ddmmmdate" description="Enter type change date (dd-mmm)">1-jul</date_ch1>
            <cultivar2 type="list" listvalues="late, early" description="Enter second type">late</cultivar2>
            <cropmethod type="list" listvalues="sole, intercrop" description="Method of cropping">intercrop</cropmethod>
            <rotation_exclude type="yesno" description="Exclude from rotation sequence">yes</rotation_exclude>
            <category name="Sowing criteria" />
            <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm)">01-oct</date1>
            <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm)">30-apr</date2>
            <must_sow type="yesno" description="Must Sow">no</must_sow>
            <rain_amount type="text" description="Enter amount of rainfall (mm)">10</rain_amount>
            <rain_days type="text" description="Enter number of days of rainfall (days)">5</rain_days>
            <esw_amount type="text" description="Enter amount of soil water (mm)">5</esw_amount>
            <sow_opp type="text" description="Enter sowing opportunity number to sow on (1..n)">1</sow_opp>
            <surface_up type="text" description="Enter upper limit of sw in top layer (0-2) (mm esw/mm soil)">2</surface_up>
            <surface_low type="text" description="Enter lower limit of sw in top layer (0-1) (mm esw/mm soil)">0</surface_low>
            <category name="Sowing specs" />
            <density type="text" description="Enter sowing density  (plants/m2)">5</density>
            <depth type="text" description="Enter sowing depth  (mm)">15</depth>
            <row_spacing type="text" description="Enter row spacing  (mm)">350</row_spacing>
            <category name="Seed-bed Tillage Preparation" />
            <till_days_pre_sow type="text" description="Enter number of days before window to prepare seed-bed (days)">0</till_days_pre_sow>
            <must_till type="yesno" description="Must Till">no</must_till>
            <tillage_type type="list" listvalues="user_defined, chisel, disc, planter,burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type">disc</tillage_type>
            <tillage_depth type="text" description="User_defined depth of seedbed preparation (mm)">100</tillage_depth>
            <tillage_f_incorp type="text" description="User_defined fraction of surface residues to incorporate (0-1)">1</tillage_f_incorp>
            <fraction type="text" description="Enter biomass removal fraction of growing weeds from field (0-1)">0.0</fraction>
          </ui>
        </manager>
        <manager name="Rotations with Intercrop">
          <script>
            <text>
         next = 1
         crop_in = 0
         blank = 'fallow'
         next_crop = blank
         crop_current = blank
         crop_current1 = blank
         crop_current2 = blank
         crop_sow = blank
         ready_for_next = 1
         ready_to_fert_pre_sow = 0
         days_last_year = 365
         fert_day_pre_sow = 0
         ready_to_till_pre_sow = 0
         till_day_pre_sow = 0
         days_after_weed_kill = 0

      </text>
            <event>init</event>
          </script>
          <script>
            <text>
         if (ready_for_next = 1) then
            if      (next = 1) THEN
               next_crop = '[crop01]'
               next = 2
            elseif      (next = 2) THEN
               next_crop = '[crop02]'
               next = 3
            elseif (next = 3) THEN
               next_crop = '[crop03]'
               next = 4
            elseif (next = 4) THEN
               next_crop = '[crop04]'
               next = 5
            elseif (next = 5) THEN
               next_crop = '[crop05]'
               next = 6
            elseif (next = 6) THEN
               next_crop = '[crop06]'
               next = 7
            elseif (next = 7) THEN
               next_crop = '[crop07]'
               next = 8
            elseif (next = 8) THEN
               next_crop = '[crop08]'
               next = 9
            elseif (next = 9) THEN
                  next_crop = '[crop09]'
                  next = 10
            elseif (next = 10) THEN
                  next_crop = '[crop10]'
                  next = 11
            elseif (next = 11) THEN
                  next_crop = '[crop11]'
                  next = 12
            elseif (next = 12) THEN
                  next_crop = '[crop12]'
                  next = 13
            elseif (next = 13) THEN
                  next_crop = '[crop13]'
                  next = 14
            elseif (next = 14) THEN
                  next_crop = '[crop14]'
                  next = 15
            elseif (next = 15) THEN
                  next_crop = '[crop15]'
                  next = 16
            elseif (next = 16) THEN
                  next_crop = '[crop16]'
                  next = 17
            elseif (next = 17) THEN
                  next_crop = '[crop17]'
                  next = 18
            elseif (next = 18) THEN
                  next_crop = '[crop18]'
                  next = 19
            elseif (next = 19) THEN
                  next_crop = '[crop19]'
                  next = 20
            elseif (next = 20) THEN
                  next_crop = '[crop20]'
                  next = 1
            endif
            if (next_crop = 'nil' OR next_crop = blank) THEN
               next_crop = '[crop01]'
               next = 2
            endif
            ready_for_next = 0
         endif

            ! treat fallow as a crop - its window starts when the other fallow finishes
            ! assume initiation (sowing) of fallow takes place when previous fallow finishes
            ! or when previous crop is harvested, whichever is the latest.
            ! Assume fallow finishes (harvested) at end of fallow date.

         if (next_crop = '[winterf_name]') then
               ! initiate (sow)
            if ((crop_in = 0)
              OR (crop_in = 1 AND (crop_current = 'weed' OR crop_current1 = 'weed' OR crop_current2 = 'weed'))) then
               if (date_within('[summerf_d2], [winterf_d2]') then
                  crop_in = crop_in + 1
                  ready_for_next = 1
                  crop_current2 = crop_current1
                  crop_current1 = crop_current
                  crop_current = '[winterf_name]'
                  crop_sow = '[winterf_name]'
                  ready_to_fert_pre_sow = 0
               endif
            endif

         elseif (next_crop = '[summerf_name]') then
              ! initiate (sow)
            if ((crop_in = 0)
              OR (crop_in = 1 AND (crop_current = 'weed' OR crop_current1 = 'weed' OR crop_current2 = 'weed'))) then
               if (date_within('[winterf_d2], [summerf_d2]') then
                  crop_in = crop_in + 1
                  ready_for_next = 1
                  crop_current2 = crop_current1
                  crop_current1 = crop_current
                  crop_current = '[summerf_name]'
                  crop_sow = '[summerf_name]'
                  ready_to_fert_pre_sow = 0
               endif
            endif
         endif

         if (crop_current = '[winterf_name]'
          OR crop_current1 = '[winterf_name]'
          OR crop_current2 = '[winterf_name]') then
               ! terminate (harvest)
            if (today = date('[winterf_d2]')+1) then
               crop_in = crop_in - 1
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            endif
         elseif (crop_current = '[summerf_name]'
              OR crop_current1 = '[summerf_name]'
              OR crop_current2 = '[summerf_name]') then
               ! terminate (harvest)
            if (today = date('[summerf_d2]')+1) then
               crop_in = crop_in - 1
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            endif
         endif

      </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Fallow properties" />
            <summerf_name description="summer fallow name : " type="text">sf</summerf_name>
            <summerf_d2 description="summer fallow END   (dd-mmm) : " type="ddmmmdate">15-mar</summerf_d2>
            <winterf_name description="winter fallow name : " type="text">wf</winterf_name>
            <winterf_d2 description="winter fallow END   (dd-mmm) : " type="ddmmmdate">23-aug</winterf_d2>
            <category name="Crop and fallow rotation sequence - finish with nil" />
            <crop01 description="1 : " type="crop">sf  </crop01>
            <crop02 description="2 : " type="crop">wf </crop02>
            <crop03 description="3 : " type="crop">sf </crop03>
            <crop04 description="4 : " type="crop">wf </crop04>
            <crop05 description="5 : " type="crop">sf </crop05>
            <crop06 description="6 : " type="crop">wf </crop06>
            <crop07 description="7 : " type="crop">sf </crop07>
            <crop08 description="8 : " type="crop">wf </crop08>
            <crop09 description="9 : " type="crop">sf </crop09>
            <crop10 description="10 : " type="crop">wf  </crop10>
            <crop11 description="11 : " type="crop">sf  </crop11>
            <crop12 description="12 : " type="crop">wf  </crop12>
            <crop13 description="13 : " type="crop">sf  </crop13>
            <crop14 description="14 : " type="crop">wf  </crop14>
            <crop15 description="15 : " type="crop">sf  </crop15>
            <crop16 description="16 : " type="crop">wf  </crop16>
            <crop17 description="17 : " type="crop">sf  </crop17>
            <crop18 description="18 : " type="crop">wf  </crop18>
            <crop19 description="19 : " type="crop">sf  </crop19>
            <crop20 description="20 : " type="crop">wf  </crop20>
          </ui>
        </manager>
        <manager name="Weeding at threshold weed biomass or maximum days">
          <script>
            <text>
          daemerge = 0
      </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
         if ((crop_in >= 1)
            AND (weed.plant_status <> 'out')) then
            if (weed.stage >= 3.0) then
               daemerge = daemerge + 1
            endif

            if (weed.biomass > [weed_biomass] OR daemerge >= [weed_interval]) then
               if ((crop_in > 1 AND [weed_maxno_in] > weed_count_in) OR (crop_in = 1 AND [weed_maxno_out] > weed_count_out)) then
                  if (crop_in > 1) then
                     weed_count_in = weed_count_in + 1
                  elseif (crop_in = 1) then
                     weed_count_out = weed_count_out + 1
                  endif
                  weed harvest, remove = [fraction]
                  weed kill_crop plants_kill_fraction = [thin_fraction]
                  if ([thin_fraction] = 1.0) then
                     weed end_crop
                     days_after_weed_kill = 0
                 else
                  endif
                  '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [f_incorp], tillage_depth = [tillage_depth]
                  if ([thin_fraction] = 1.0) then
                    crop_in = crop_in - 1
                    if (crop_current = 'weed') then
                        crop_current = crop_current1
                        crop_current1 = crop_current2
                        crop_current2 = blank
                     elseif (crop_current1 = 'weed') then
                        crop_current1 = crop_current2
                        crop_current2 = blank
                     elseif (crop_current2 = 'weed') then
                        crop_current2 = blank
                     endif
                     daemerge = 0
                  else
                  endif
               else
               endif
            else
            endif
         else
            daemerge = 0
         endif

         if (((crop_in = 1)
            AND (weed.plant_status <> 'out'))
            OR (crop_in = 0)) then
            weed_count_in = 0
         else
            weed_count_out = 0
         endif
      ]]></text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Weeding properties" />
            <weed_interval description="Maximum days after emergence to weed (days) : " type="text">30</weed_interval>
            <weed_biomass description="Weeding biomass threshold to weed (kg/ha) : " type="text">100</weed_biomass>
            <weed_maxno_in description="Maximum number of in-crop weedings (1..n) : " type="text">2</weed_maxno_in>
            <weed_maxno_out description="Maximum number of fallow weedings (1..n) : " type="text">0</weed_maxno_out>
            <thin_fraction description="Enter fraction of weed population weeded (0-1) : " type="text">1.0</thin_fraction>
            <fraction description="Enter biomass removal fraction from field (0-1) : " type="text">0.0</fraction>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <tillage_type description="Enter name of tillage type : " type="text">user_defined</tillage_type>
            <f_incorp description="Enter fraction of surface residues incorporated into soil (0-1) : " type="text">0.1</f_incorp>
            <tillage_depth description="Enter depth of incorporation of surface residues (mm) : " type="text">25</tillage_depth>
          </ui>
        </manager>
        <manager name="Remove all residues on a fixed date">
          <script>
            <text>
         if today = date('[date]') then
            '[surfaceommodule]' tillage type = user_defined, f_incorp = 1.0 (), tillage_depth = 0.0 ()
         endif
            </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Removal criteria" />
            <date description="Date to remove residues (dd-mmm) :" type="ddmmmdate">1-may</date>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
          </ui>
        </manager>
        <manager name="Remove residues at harvest">
          <script>
            <text>
               last_stage_name = 'none'
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
         if [crop].StageName <> last_stage_name  then
            if ([crop].StageName = 'out') then
               '[surfaceommodule]' tillage type = user_defined, f_incorp = [fraction] (), tillage_depth = 0.0 ()
            endif
         endif
         last_stage_name = [crop].StageName
            ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Removal criteria" />
            <crop description="Name of crop harvest to trigger residue removal" type="crop">weed</crop>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <fraction description="Enter biomass removal fraction from field (0-1) : " type="text">0.0</fraction>
          </ui>
        </manager>
      </folder>
    </folder>
  <folder name="Ausfarm Pasture Management">
    <manager name="Area">
      <ui>
        <area type="text" description="Area of paddock (ha) :">100</area>
      </ui>
      <script name="Init">
        <text>area = [area]</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Sow">
      <ui>
        <category description="Sowing criteria" />
        <date type="text" description="Enter sowing date (dd-mmm):">15-May</date>
        <category description="Sowing details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <rate type="text" description="Enter sowing rate (kg/ha):">100</rate>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' sowpasture rate = [rate]
    endif
   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Cut">
      <ui>
        <category description="When should a cut be done?" />
        <date type="ddmmmdate" description="Enter date of cut (dd-mmm) : ">1-jan</date>
        <category description="Cut details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <height type="text" description="Enter height of cut (mm):">80</height>
        <gathered type="text" description="Proportion of cut forage gathered in (remainder becomes litter):">0.5</gathered>
        <dmdloss type="text" description="Loss of DMD during cutting, drying and storage:">0.1</dmdloss>
        <dmdcontent type="text" description="Dry matter content when stored (kg/kg):">0.9</dmdcontent>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
         standing_DM = avail_dm
         '[pasturemodel]' cutpasture cut_height = [height], gathered = [gathered], dmd_loss = [dmdloss], dm_content = [dmdcontent]
         resid_DM = avail_dm
         removed_DM = standing_DM - resid_DM
   endif



   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="CutOnDMThreshold">
      <ui>
        <category description="When should a cut be done?" />
        <availdmthreshold type="text" description="Enter DM threshold after which a cut should be performed (kg/ha):">1500</availdmthreshold>
        <category description="Cut details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <height type="text" description="Enter height of cut (mm):">80</height>
        <gathered type="text" description="Proportion of cut forage gathered in (remainder becomes litter):">0.5</gathered>
        <dmdloss type="text" description="Loss of DMD during cutting, drying and storage:">0.1</dmdloss>
        <dmdcontent type="text" description="Dry matter content when stored (kg/kg):">0.9</dmdcontent>
      </ui>
      <script name="start_of_day">
        <text><![CDATA[if ([pasturemodel]Model.avail_dm > [availdmthreshold]) then
         standing_DM = [pasturemodel]Model.avail_dm
         '[pasturemodel]' cutpasture cut_height = [height], gathered = [gathered], dmd_loss = [dmdloss], dm_content = [dmdcontent]
         resid_DM = [pasturemodel]Model.avail_dm
         removed_DM = standing_DM - resid_DM
   endif



   ]]></text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Kill">
      <ui>
        <category description="Kill criteria" />
        <date type="text" description="Enter kill date (dd-mmm):">11-May</date>
        <category description="Kill details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <propn_herbage type="text" description="Proportion of herbage to be killed:">0.5</propn_herbage>
        <propn_seed type="text" description="Proportion of seed to be killed:">0.5</propn_seed>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' killpasture propn_herbage = [propn_herbage],  propn_seed = [propn_seed]
    endif


   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Burn">
      <ui>
        <category description="Burn criteria" />
        <date type="text" description="Enter burn date (dd-mmm):">10-May</date>
        <category description="Burn details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <kill_plants type="text" description="Proportion of herbage killed by the fire:">0.5</kill_plants>
        <kill_seed type="text" description="Proportion of seeds killed by the fire:">0.5</kill_seed>
        <propn_unburnt type="text" description="Proportion of herbage (green and dead) that remains after the fire has passed:">0.2</propn_unburnt>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' burnpasture kill_plants = [kill_plants], kill_seed = [kill_seed], propn_unburnt = [propn_unburnt]
    endif
   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Cultivate">
      <ui>
        <category description="Cultivate criteria" />
        <date type="text" description="Enter cultivation date (dd-mmm):">13-May</date>
        <category description="Cultivation details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <depth type="text" description="Depth of cultivation (mm):">100</depth>
        <propn_incorp type="text" description="Proportion of surface herbage incorporated into the soil:" />
        <propn_mixed type="text" description="Proportion of soil in each soil layer that is mixed across the cultivation depth:">0.3</propn_mixed>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' cultivatepasture depth = [depth], propn_incorp = [propn_incorp], propn_mixed = [propn_mixed]
    endif
   </text>
        <event>start_of_day</event>
      </script>
    </manager>
  </folder>
    <folder name="Ausfarm Stock Management">
      <folder name="Cattle">
        <manager name="Buy cattle on a fixed date">
          <script>
            <text>
               cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
        if (today = date('[buy_date]') then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           cattle_presence = 'on'
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <buy_date type="text" description="Date (dd-mmm) : ">1-jan</buy_date>
            <buy_number type="text" description="Number of stock : ">5</buy_number>
            <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
          </ui>
        </manager>
        <manager name="Buy cattle on a fixed days after sowing">
          <script>
            <text>
               cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
        if (DaysAfterSowing = [buy_das]) then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           cattle_presence = 'on'
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <buy_das type="text" description="Days after sowing : ">30</buy_das>
            <buy_number type="text" description="Number of stock : ">5</buy_number>
            <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
          </ui>
        </manager>
        <manager name="Move cattle on a fixed date">
          <script>
            <text>
               cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
         if (today = date('[move_date]') then
               stockage = [sellpaddock].[sellstockmodule].age_all/30.4375
               stockwt = [sellpaddock].[sellstockmodule].weight_all
               stocknumber = [sellpaddock].[sellstockmodule].number_all
               [sellpaddock].[sellstockmodule]scienceconverter sellstock number = stocknumber (-)
               [buypaddock].[buystockmodule]scienceconverter buystock number = stocknumber (-), genotype = '[genotype]', sex = [sex], age = stockage (months), weight = stockwt (kg)
        endif
        </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Move properties" />
            <sellpaddock type="modulename" description="Name of sell paddock : ">Paddock</sellpaddock>
            <sellstockmodule type="modulename" description="Name of stock module in sell paddock : ">stock</sellstockmodule>
            <buypaddock type="modulename" description="Name of buy paddock : ">Paddock</buypaddock>
            <buystockmodule type="modulename" description="Name of stock module in buy paddock: ">stock</buystockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <move_date type="text" description="Date (dd-mmm) : ">1-jan</move_date>
          </ui>
        </manager>
        <manager name="Move cattle on a minimum weight gain OR at flowering">
          <script>
            <text>
               [sellpaddock]_cattle_presence = 'off'
               [buypaddock]_cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ([sellpaddock].[sellstockmodule].number_all > 0) then
               [sellpaddock]_cattle_presence = 'on'
            endif
          if (([sellpaddock].[sellstockmodule].wt_change_all <= [minimum_wt_change] OR [buypaddock].[herbage_module].StageName = 'flowering') AND [sellpaddock]_cattle_presence = 'on') then
               stockage = [sellpaddock].[sellstockmodule].age_all/30.4375
               stockwt = [sellpaddock].[sellstockmodule].weight_all
               stocknumber = [sellpaddock].[sellstockmodule].number_all
               [sellpaddock].[sellstockmodule]scienceconverter sellstock number = stocknumber (-)
               [buypaddock].[buystockmodule]scienceconverter buystock number = stocknumber (-), genotype = '[genotype]', sex = [sex], age = stockage (months), weight = stockwt (kg)
               [sellpaddock]_cattle_presence = 'off'
               [buypaddock]_cattle_presence = 'on'
          endif
          ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Move properties" />
            <sellpaddock type="modulename" description="Name of sell paddock : ">Paddock</sellpaddock>
            <sellstockmodule type="modulename" description="Name of stock module in sell paddock : ">stock</sellstockmodule>
            <buypaddock type="modulename" description="Name of buy paddock : ">Paddock</buypaddock>
            <buystockmodule type="modulename" description="Name of stock module in buy paddock: ">stock</buystockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <minimum_wt_change type="text" description="Minimum weight gain (kg/day) : ">0</minimum_wt_change>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
          </ui>
        </manager>
        <manager name="Buy cattle on feed-on-offer">
          <script>
            <text>
               cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ([stockmodule].number_all > 0) then
               cattle_presence = 'on'
            endif
        if ([herbage_module].biomass >= [buy_feed_on_offer] AND cattle_presence = 'off') then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           cattle_presence = 'on'
        endif
               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <buy_feed_on_offer type="text" description="Feed on offer (kg/ha) : ">1500.0</buy_feed_on_offer>
            <buy_number type="text" description="Number of stock : ">5</buy_number>
            <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
          </ui>
        </manager>
        <manager name="Buy cattle on feed-on-offer test">
          <script>
            <text>
               [paddockname]_cattle_presence = 'off'
               buy_count = 0
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ('[paddockname]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if ([herbage_module].StageName = 'out') then
                 buy_count = 0
              endif
              if ([herbage_module].biomass >= [buy_feed_on_offer] AND cattle_presence = 'off' AND buy_count = 0) then
                 [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
                 cattle_presence = 'on'
                 buy_count = buy_count + 1
              endif
           else
               if ([paddockname].[stockmodule].number_all > 0) then
                  [paddockname]_cattle_presence = 'on'
               endif
              if ([paddockname].[herbage_module].StageName = 'out') then
                 buy_count = 0
              endif
              if ([paddockname].[herbage_module].biomass >= [buy_feed_on_offer] AND cattle_presence = 'off' AND buy_count = 0) then
                 [paddockname].[stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
                 [paddockname]_cattle_presence = 'on'
                 buy_count = buy_count + 1
              endif
           endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <paddockname type="modulename" description="Name of paddock (nil if none) : ">nil</paddockname>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <buy_feed_on_offer type="text" description="Feed on offer (kg/ha) : ">1500.0</buy_feed_on_offer>
            <buy_number type="text" description="Number of stock : ">5</buy_number>
            <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
          </ui>
        </manager>
        <manager name="Sell cattle on a fixed date">
          <script>
            <text>
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if (today = date('[sell_date]') AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
              endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_date type="text" description="Date (dd-mmm) : ">1-jan</sell_date>
            <sell_number type="text" description="Number of stock : ">5</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle on weight test">
          <script>
            <text><![CDATA[
           if ('[sellpaddock]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
             if ((stock.weight >= [sell_on_weight]) AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
             endif
           else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
             if ([sellpaddock].[stockmodule].weight_all >= [sell_on_weight]) AND cattle_presence = 'on') then
                 [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 [sellpaddock]_cattle_presence = 'off'
              endif
           endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_on_weight type="text" description="LiveWeight for sale : ">350.0</sell_on_weight>
            <sell_number type="text" description="Number of stock : ">100</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle on weight loss">
          <script>
            <text>
            numdaysweightloss = 0
        </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if ('[sellpaddock]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if ([stockmodule].wt_change_all < 0.0) then
                 numdaysweightloss = numdaysweightloss + 1
              endif
              if ((numdaysweightloss >= [sell_on_days_weight_loss]) AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
                 maxstockwt = -1
              endif
            else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
               if ([sellpaddock]_cattle_presence = 'on') then
                  if ([sellpaddock].[stockmodule].wt_change_all < 0.0) then
                     numdaysweightloss = numdaysweightloss + 1
                  else
                     numdaysweightloss = 0
                  endif
               endif
               if ((numdaysweightloss >= [sell_on_days_weight_loss]) AND [sellpaddock]_cattle_presence = 'on') then
                  [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                  [sellpaddock]_cattle_presence = 'off'
               endif
            endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_on_days_weight_loss type="text" description="Number of days of weight loss : ">2.0</sell_on_days_weight_loss>
            <sell_number type="text" description="Number of stock : ">100</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle below minimum declining weight change">
          <script>
            <text>
            numdaysweightchange = 0
            wt_change_yesterday = 0
        </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if ('[sellpaddock]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if (cattle_presence = 'on') then
                 if ([stockmodule].wt_change_all < [sell_min_weight_change] AND [stockmodule].wt_change_all < wt_change_yesterday)then
                    numdaysweightchange = numdaysweightchange + 1
                 else
                    numdaysweightchange = 0
                 endif
              endif
              if ((numdaysweightchange >= [sell_on_days_weight_change] OR ([stockmodule].intake_all < 0.001)) AND cattle_presence = 'on') then
                 [stockmodule].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
                 maxstockwt = -1
              endif
              wt_change_yesterday = wt_change_all
            else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
               if ([sellpaddock]_cattle_presence = 'on') then
                  if ([sellpaddock].[stockmodule].wt_change_all < [sell_min_weight_change] AND [sellpaddock].[stockmodule].wt_change_all < wt_change_yesterday) then
                     numdaysweightchange = numdaysweightchange + 1
                  else
                     numdaysweightchange = 0
                  endif
               endif
               if ((numdaysweightchange >= [sell_on_days_weight_change] OR ([sellpaddock].[stockmodule].intake_all < 0.001)) AND [sellpaddock]_cattle_presence = 'on') then
                  [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                  [sellpaddock]_cattle_presence = 'off'
               endif
               wt_change_yesterday = [sellpaddock].[stockmodule].wt_change_all
            endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_min_weight_change type="text" description="Minimum Weight change : ">0.2</sell_min_weight_change>
            <sell_on_days_weight_change type="text" description="Number of days below weight change : ">2.0</sell_on_days_weight_change>
            <sell_number type="text" description="Number of stock : ">100</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle on minimum condition score change">
          <script>
            <text>
            numdays_cond_score_diminishing = 0
            cond_score_yesterday = 0
        </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if ('[sellpaddock]' = 'nil') then
               if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
               endif
              if (cattle_presence = 'on') then
                 cond_score_change = [stockmodule].cond_score - cond_score_yesterday
                 if (cond_score_change < [sell_min_cond_score_change])then
                    numdays_cond_score_diminishing = numdays_cond_score_diminishing + 1
                 else
                    numdays_cond_score_diminishing = 0
                 endif
              endif
              if ((numdays_cond_score_diminishing >= [sell_on_days_cond_score_change] OR ([stockmodule].intake_all < 0.001)) AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
                 maxstockwt = -1
              endif
              cond_score_change_yesterday = cond_score_change
              cond_score_yesterday = cond_score
            else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
               if ([sellpaddock]_cattle_presence = 'on') then
                  cond_score_change = [sellpaddock].[stockmodule].cond_score - cond_score_yesterday
                  if (cond_score_change < [sell_min_cond_score_change]) then
                     numdays_cond_score_diminishing = numdays_cond_score_diminishing + 1
                  else
                     numdays_cond_score_diminishing = 0
                  endif
               endif
               if ((numdays_cond_score_diminishing >= [sell_on_days_cond_score_change] OR ([sellpaddock].[stockmodule].intake_all < 0.001)) AND [sellpaddock]_cattle_presence = 'on') then
                  [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                  [sellpaddock]_cattle_presence = 'off'
               endif
               cond_score_yesterday = [sellpaddock].[stockmodule].cond_score
            endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_min_cond_score_change type="text" description="Minimum condition score change : ">-0.001</sell_min_cond_score_change>
            <sell_on_days_cond_score_change type="text" description="Number of days below cond score change : ">2.0</sell_on_days_cond_score_change>
            <sell_number type="text" description="Number of stock : ">100</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle on weight">
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               cattle_presence = 'on'
            endif
        if (([stockmodule].weight >= [sell_on_weight_gain] OR [stockmodule].weight <= [sell_on_weight_loss]) AND cattle_presence = 'on') then
           [stockmodule]scienceconverter sellstock number = [sell_number] (-)
           cattle_presence = 'off'
        endif
               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_on_weight_gain type="text" description="Weight (gaining) : ">350.0</sell_on_weight_gain>
            <sell_on_weight_loss type="text" description="Weight (losing) : ">0.0</sell_on_weight_loss>
            <sell_number type="text" description="Number of stock : ">5</sell_number>
          </ui>
        </manager>
      </folder>
      <folder name="Sheep">
        <manager name="Buy sheep on a fixed date">
          <script>
            <text>
               sheep_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
        if (today = date('[buy_date]') then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           sheep_presence = 'on'
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="black face x white face,birder keucester, border leicester x merino,columbia,corriedale,delaine-merino,dorset x merino,dorset,finnsheep,hampshire,large merino,medium merino,small merino,polwarth,polypay,romney,ryeland,southdown,suffolk,targhee,texel,US corriedale,US romney,US southdown,US suffolk" description="Select Genotype : ">suffolk</genotype>
            <buy_date type="text" description="Date (dd-mmm) : ">1-jan</buy_date>
            <buy_number type="text" description="Number of stock : ">50</buy_number>
            <sex type="list" listvalues="ewe,wether,ram,crypto" description="Select sex : ">wether</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">45</buy_weight>
          </ui>
        </manager>
        <manager name="Buy sheep on feed-on-offer">
          <script>
            <text>
               sheep_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
           if ([herbage_module].biomass >= [buy_feed_on_offer] AND sheep_presence = 'off') then
              [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
              sheep_presence = 'on'
            endif
               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="black face x white face,birder keucester, border leicester x merino,columbia,corriedale,delaine-merino,dorset x merino,dorset,finnsheep,hampshire,large merino,medium merino,small merino,polwarth,polypay,romney,ryeland,southdown,suffolk,targhee,texel,US corriedale,US romney,US southdown,US suffolk" description="Select Genotype : ">suffolk</genotype>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <buy_feed_on_offer type="text" description="Feed on offer (kg/ha) : ">1500.0</buy_feed_on_offer>
            <buy_number type="text" description="Number of stock : ">50</buy_number>
            <sex type="list" listvalues="ewe,wether,ram,crypto" description="Select sex : ">wether</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">45</buy_weight>
          </ui>
        </manager>
        <manager name="Buy variable sheep on green feed-on-offer">
          <script>
            <text>
              sheep_presence = 'off'
              grazing_no = 0
              grazing_days = 0
              gpsm2kgpha = 10.0
              stem_discount = 0.17
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
            if sheep_presence = 'on' then
               grazing_days = grazing_days + 1
            else
               grazing_days = 0
            endif
            feed_on_offer = ([herbage_module].LeafGreenWt + ([herbage_module].StemGreenWt * stem_discount)) * gpsm2kgpha
            if ((([herbage_module].Stage >= 5) or (feed_on_offer  > [buy_green_leaf_on_offer])) and (sheep_presence = 'off')) then
                leaf = [herbage_module].LeafGreenWt) + [herbage_module].dlt_dm_green_leaf*[est_grazing_days]
                stem = [herbage_module].StemGreenWt) + [herbage_module].dlt_dm_green_stem*[est_grazing_days]
                stock_in = ((leaf + stem * stem_discount) * gpsm2kgpha / ([est_grazing_days] * [est_intake_day]) + 0.5)

                if (stock_in >= [min_buy_number]) then
                   grazing_days = 0
                   [stockmodule]scienceconverter buystock number = stock_in (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
                   sheep_presence = 'on'
                else
                   sheep_presence = 'off'
                endif
            endif
                              ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="black face x white face,border leicester,border leicester x merino,columbia,corriedale,delaine-merino,dorset x merino,dorset,finnsheep,hampshire,large merino,medium merino,small merino,polwarth,polypay,romney,ryeland,southdown,suffolk,targhee,texel,US corriedale,US romney,US southdown,US suffolk" description="Select Genotype : ">suffolk</genotype>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <buy_green_leaf_on_offer type="text" description="Green feed-on-offer (kg/ha) : ">100.0</buy_green_leaf_on_offer>
            <est_grazing_days type="text" description="Estimated grazing period (days) : ">10</est_grazing_days>
            <est_intake_day type="text" description="Estimated feed intake (kg/head/day) : ">1.2</est_intake_day>
            <min_buy_number type="text" description="Threshold buy number below which no stock are bought : ">30</min_buy_number>
            <sex type="list" listvalues="ewe,wether,ram,crypto" description="Select sex : ">wether</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">45</buy_weight>
          </ui>
        </manager>
        <manager name="Sell sheep on a fixed date">
          <script>
            <text>
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
        if (today = date('[sell_date]') AND sheep_presence = 'on') then
           [stockmodule]scienceconverter sellstock number = [sell_number] (-)
           sheep_presence = 'off'
        endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_date type="text" description="Date (dd-mmm) : ">1-jan</sell_date>
            <sell_number type="text" description="Number of stock : ">50</sell_number>
          </ui>
        </manager>
        <manager name="Sell sheep on weight">
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
        if (([stockmodule].weight >= [sell_on_weight_gain] OR [stockmodule].weight <= [sell_on_weight_loss]) AND sheep_presence = 'on') then
           [stockmodule]scienceconverter sellstock number = [sell_number] (-)
           sheep_presence = 'off'
        endif
               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_on_weight_gain type="text" description="Weight (gaining) : ">60.0</sell_on_weight_gain>
            <sell_on_weight_loss type="text" description="Weight (losing) : ">0.0</sell_on_weight_loss>
            <sell_number type="text" description="Number of stock : ">50</sell_number>
          </ui>
        </manager>
        <manager name="Sell sheep on green feed-on-offer">
          <script>
            <text>
              gpsm2kgpha = 10.0
              stem_discount = 0.17
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
           feed_on_offer = ([herbage_module].LeafGreenWt + ([herbage_module].StemGreenWt * stem_discount)) * gpsm2kgpha
            if (feed_on_offer < [sell_on_green_leaf] and sheep_presence = 'on') then
                stock_sell = [stockmodule].number_all
                [stockmodule]scienceconverter sellstock number = stock_sell
                sheep_presence = 'off'
            endif
                              ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <sell_on_green_leaf type="text" description="Green feed-on-offer (kg/ha) : ">50.0</sell_on_green_leaf>
          </ui>
        </manager>
      </folder>
      <folder name="Supplement">
        <manager name="Buy supplement on a fixed date">
          <script>
            <text>
        if (today = date('[buy_date]') then
           [supplementmodule]scienceconverter buysupplement supplement = [buy_name] (-), amount = [buy_amount] (kg)
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <buy_date type="text" description="Date (dd-mmm) : ">1-jan</buy_date>
            <buy_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</buy_name>
            <buy_amount type="text" description="Fresh weight of supplement to purchase (kg) : ">1000</buy_amount>
          </ui>
        </manager>
        <manager name="Mix supplement on a fixed date">
          <script>
            <text>
        if (today = date('[mix_date]') then
           [supplementmodule]scienceconverter mixsupplement src_store = [src_store_name] (-), amount = [mix_amount] (kg), dest_store = [dest_store_name] (-)
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Mix properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <mix_date type="text" description="Date (dd-mmm) : ">1-jan</mix_date>
            <src_store_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the source supplement store. : ">wheat</src_store_name>
            <dest_store_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the destination store. : ">wheat</dest_store_name>
            <mix_amount type="text" description="Fresh weight of supplement to transfer. (kg) : ">1000</mix_amount>
          </ui>
        </manager>
        <manager name="Feed supplement in a fixed date window">
          <script>
            <text>
        if (date_within('[feed_start_date], [feed_end_date]') = 1) then
           [supplementmodule]scienceconverter feedsupplement supplement = [feed_name] (-), amount = [feed_amount] (kg)
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <feed_start_date type="text" description="Date (dd-mmm) : ">1-jan</feed_start_date>
            <feed_end_date type="text" description="Date (dd-mmm) : ">1-jan</feed_end_date>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
            <feed_amount type="text" description="Fresh weight of supplement to purchase (kg) : ">1000</feed_amount>
          </ui>
        </manager>
        <manager name="Feed supplement on animal condition">
          <script>
            <text>
         FALSE = 0
         TRUE = 1
         feeding = FALSE
         feed_rate = 0.0     ! Rate of feeding in kg FW/day
         feed_rate_factor = 0.2
         est_lag_days = 10.0 / feed_rate_factor
         initial_feed_rate = 0.0

            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            dlt_cond_score = cond_score_all - yest_cond_score_all
            yest_cond_score_all = cond_score_all
            if (feeding = TRUE AND cond_score_all = 0.0) then
               feeding = FALSE
            endif

            if ((feeding = FALSE) AND (cond_score_all < [crit_cs]) AND (dlt_cond_score < 0.0)) then
               feeding = TRUE
               feed_rate = initial_feed_rate
            else
               ! leave feeding as is
            endif

            if (feeding = TRUE) then
               feed_rate = feed_rate - feed_rate_factor * (cond_score_all + dlt_cond_score*est_lag_days - [crit_cs])
               if (feed_rate > [max_feed_rate]) then
                  feed_rate = [max_feed_rate]
               elseif (feed_rate < 0.0) then
                  feed_rate = 0.0
               endif
               if (feed_rate > 0) then
                   feed_amount = feed_rate * number_all
                   [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
               else
                  feed_rate = 0.0
               endif
            else
               feed_rate = 0.0
            endif

               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <crit_cs type="text" description="Critical condition score. 1.0 is sensible for dry stock : ">1.0</crit_cs>
            <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
          </ui>
        </manager>
        <manager name="Feed supplement on animal condition loss">
          <script>
            <text>
         FALSE = 0
         TRUE = 1
         feeding = FALSE
         feed_rate = 0.0     ! Rate of feeding in kg FW/day
         crit_cs = 0.0
         feed_rate_factor = 0.2
         est_lag_days = 10.0 / feed_rate_factor
         initial_feed_rate = 0.0
         yest_cond_score_all = 0.0
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
         dlt_cond_score = cond_score_all - yest_cond_score_all
         yest_cond_score_all = cond_score_all
            if (feeding = TRUE AND cond_score_all = 0.0) then
               crit_cs = 0.0
               feeding = FALSE
            endif

            if (dlt_cond_score[[days]] < [crit_condition_change] AND crit_cs <= 0.0) then
               crit_cs = cond_score_all
            endif
            if ((feeding = FALSE) AND (cond_score_all < crit_cs)) then
               feeding = TRUE
               feed_rate = initial_feed_rate
            else
               ! leave feeding as is
            endif

            if (feeding = TRUE) then
               feed_rate = feed_rate - feed_rate_factor * (cond_score_all + dlt_cond_score*est_lag_days - crit_cs)
               if (feed_rate > [max_feed_rate]) then
                  feed_rate = [max_feed_rate]
               elseif (feed_rate < 0.0) then
                  feed_rate = 0.0
               endif
               if (feed_rate > 0) then
                   feed_amount = feed_rate * number_all
                   [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
               else
                  feed_rate = 0.0
               endif
            else
               feed_rate = 0.0
            endif

               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <days type="text" description="Number of days to sum condition change : ">5</days>
            <crit_condition_change type="text" description="Critical condition change needed to start feeding (kg/head) : ">0.0</crit_condition_change>
            <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
          </ui>
        </manager>
        <manager name="Feed supplement on animal weight loss">
          <script>
            <text>
         FALSE = 0
         TRUE = 1
         feeding = FALSE
         feed_rate = 0.0     ! Rate of feeding in kg FW/day
         crit_wt = 0.0
         feed_rate_factor = 0.5
         est_lag_days = 10.0 / feed_rate_factor
         initial_feed_rate = 0.1
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if (feeding = TRUE AND cond_score_all = 0.0) then
               crit_wt = 0.0
               feeding = FALSE
            endif

            if (wt_change_all[[days]] < [crit_wt_change] AND crit_wt <= 0.0) then
               crit_wt = weight_all
            endif
            if ((feeding = FALSE) AND (weight_all < crit_wt)) then
               feeding = TRUE
               feed_rate = initial_feed_rate
            else
               ! leave feeding as is
            endif

            if (feeding = TRUE) then
               feed_rate = feed_rate - feed_rate_factor * (weight_all + wt_change_all*est_lag_days - crit_wt)
               if (feed_rate > [max_feed_rate]) then
                  feed_rate = [max_feed_rate]
               elseif (feed_rate < 0.0) then
                  feed_rate = 0.0
               endif
               if (feed_rate > 0) then
                   feed_amount = feed_rate * number_all
                   [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
               else
                  feed_rate = 0.0
               endif
            else
               feed_rate = 0.0
            endif

               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <days type="text" description="Number of days to sum weight change : ">5</days>
            <crit_weight_change type="text" description="Critical weight change needed to start feeding (kg/head) : ">0.0</crit_weight_change>
            <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
          </ui>
        </manager>
        <manager name="Feed supplement to reach a target weight">
          <script>
            <text>
         feed_rate = 0.0     ! Rate of feeding in kg FW/day

            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if (date_within('[date_start_feed], [date_end_feed]') = 1) then
               days_left = date('[date_end_feed]') - date('[date_start_feed]')
               if (days_left < 0.0) then
                  days_left = days_left + 365.0
               endif
               if (days_left > 0) then
                  dwt_reqd = ([target_wt] - stock.weight_all) / days_left

                  feed_rate = feed_rate + (2.0 * (dwt_reqd - wt_change_all))
                  if (feed_rate > [max_feed_rate]) then
                     feed_rate = [max_feed_rate]
                  elseif (feed_rate < 0.0) then
                     feed_rate = 0.0
                  endif

                  if (feed_rate > 0) then
                     if (today = date('[date_start_feed]') then
                        feed_rate = feed_rate * 0.5
                     endif
                      feed_amount = feed_rate * number_all
                      [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
                  else
                     feed_rate = 0.0
                  endif
               endif
            endif

               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <date_start_feed type="text" description="date to begin feeding (dd-mmm) : ">1-jan</date_start_feed>
            <date_end_feed type="text" description="date to end feeding (dd-mmm) : ">1-jan</date_end_feed>
            <target_wt type="text" description="Target weight per head to finish (kg) : ">1.0</target_wt>
            <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
          </ui>
        </manager>
      </folder>
    </folder>
    <folder name="TCL Manager">
      <tclmanager name="Empty Manager">
        <rule name="Logic">
          <script name="init">
            <text>
            </text>
            <event>init</event>
          </script>
          <script name="prepare">
            <text>
            </text>
            <event>prepare</event>
          </script>
          <script name="end_simulation">
            <text>
            </text>
            <event>end_simulation</event>
          </script>
        </rule>
      </tclmanager>
      <tclmanager name="Common tasks">
        <rule name="Sow using esw and rainfall">
          <ui>
            <category type="category" description="Sowing criteria" />
            <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
            <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
            <must_sow type="yesno" description="Must sow? : ">no</must_sow>
            <raincrit type="text" description="Amount of rainfall : ">25</raincrit>
            <rainnumdays type="text" description="Number of days of rainfall : ">7</rainnumdays>
            <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">100</esw_amount>
            <category type="category" description="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
          </ui>
          <script name="init">
            <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {crop_class  [class]}
}

# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
            <event>init</event>
          </script>
          <script name="start_simulation">
            <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}</text>
            <event>start_simulation</event>
          </script>
          <script name="prepare">
            <text><![CDATA[
if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      if {( [apsimGet rain\[[rainnumdays]\]] >= [raincrit] && [apsimGet esw] >= [esw_amount] ) ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}

]]></text>
            <event>prepare</event>
          </script>
        </rule>
        <rule name="Sow using fasw in top layer">
          <ui>
            <category type="category" description="Sowing criteria" />
            <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
            <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
            <must_sow type="yesno" description="Must sow? : ">no</must_sow>
            <fasw_amount type="text" description="sw above ll15 in top layer (mm): ">20</fasw_amount>
            <category type="category" description="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
          </ui>
          <script name="init">
            <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {crop_class  [class]}
}

# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
            <event>init</event>
          </script>
          <script name="start_simulation">
            <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}
set sw1f_[crop] [expr [fasw_amount] / [lindex [apsimGet dlayer] 0] + [lindex [apsimGet ll15] 0]] 
</text>
            <event>start_simulation</event>
          </script>
          <script name="prepare">
            <text><![CDATA[


if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      set sw1 [lindex [apsimGet sw] 0]
      if {$sw1 >= $sw1f_[crop] ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}

]]></text>
            <event>prepare</event>
          </script>
        </rule>
        <rule name="Sow on a fixed date">
          <ui>
            <category type="category" description="Sowing criteria" />
            <date1 type="ddmmmdate" description="Enter sowing date (dd-mmm) : ">15-may</date1>
            <category type="category" description="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
          </ui>
          <script name="init">
            <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {crop_class  [class]}
}


##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
            <event>init</event>
          </script>
          <script name="start_simulation">
            <text>
            </text>
            <event>start_simulation</event>
          </script>
          <script name="prepare">
            <text>


if {[dateIs [date1]] } {
    sow_[crop]
}


</text>
            <event>prepare</event>
          </script>
        </rule>
        <rule name="Harvesting rule">
          <ui>
            <category type="category" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">cotton</crop>
          </ui>
          <script name="post">
            <text><![CDATA[
  if {[apsimGet [crop].ozcot_status] > 0} {
    apsimSendMessage [crop]  harvest
    apsimSendMessage [crop]  end_crop
  }

      ]]></text>
            <event>post</event>
          </script>
        </rule>
        <rule name="Cotton sowing rule">
          <ui>
            <category type="category" description="Sowing criteria" />
            <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
            <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
            <must_sow type="yesno" description="Must sow? : ">no</must_sow>
            <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
            <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
            <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">100</esw_amount>
            <category type="category" description="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">cotton</crop>
            <density type="text" description="Enter sowing density  (plants/m2 in row) : ">10</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">siok</cultivar>
            <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
            <skiprow type="list" listvalues="0, 1, 2" description="Skip row : ">0</skiprow>
          </ui>
          <script name="init">
            <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants_pm [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]}
}

# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
            <event>init</event>
          </script>
          <script name="start_simulation">
            <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}</text>
            <event>start_simulation</event>
          </script>
          <script name="prepare">
            <text><![CDATA[
if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      if {( [apsimGet rain\[[rainnumdays]\]] >= [raincrit] && [apsimGet esw] >= [esw_amount] ) ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}

]]></text>
            <event>prepare</event>
          </script>
        </rule>
        <rule name="Cotton harvesting rule">
          <ui>
            <category type="category" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">cotton</crop>
          </ui>
          <script name="post">
            <text><![CDATA[
  if {[apsimGet [crop].ozcot_status] > 0} {
    apsimSendMessage [crop]  harvest
    apsimSendMessage [crop]  end_crop
  }

      ]]></text>
            <event>post</event>
          </script>
        </rule>
        <rule name="Sorghum sowing rule">
          <ui>
            <category name="Sowing criteria" />
            <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
            <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
            <must_sow type="yesno" description="Must sow? : ">no</must_sow>
            <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
            <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
            <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
            <category name="Sowing parameters" />
            <crop type="crop" description="Enter name of crop to sow : ">sorghum</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">7</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
            <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : ">early</cultivar>
            <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
            <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
          </ui>
          <script name="init">
            <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing], crop_class=[class]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]} {skiprow  [skiprow]}
}

# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

]]></text>
            <event>init</event>
          </script>
          <script name="start_simulation">
            <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}</text>
            <event>start_simulation</event>
          </script>
          <script name="prepare">
            <text><![CDATA[
if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      if {( [apsimGet rain\[[rainnumdays]\]] >= [raincrit] && [apsimGet esw] >= [esw_amount] ) ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}

]]></text>
            <event>prepare</event>
          </script>
        </rule>
        <rule name="Lucerne Ley fixed sow harvest at flowering">
          <ui>
            <category type="category" />
            <date type="text" description="Enter sowing date (dd-mmm-yyyy) : ">1-jan</date>
            <category type="category" />
            <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">trifecta</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
            <category type="category" />
            <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
            <category type="category" />
            <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
            <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
            <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
          </ui>
          <script name="init">
            <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]}
}


# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

set [crop]LeyYears [leyyears]
]]></text>
            <event>init</event>
          </script>
          <script name="prepare">
            <text><![CDATA[
if {[paddockIsFallow] && [dateIs [date]] && 
    $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]") } {
    sow_[crop]
    set [crop]LeyYears [leyyears]
    set ChooseNextCrop "yes"
}
]]></text>
            <event>prepare</event>
          </script>
          <script name="post">
            <text><![CDATA[
if {[apsimGet [crop].stagename] == "flowering" } {
   apsimSendMessage [crop]  harvest {height [harvest_ht]}
}

if {[dateIs [killdate]] && [apsimGet [crop].plant_status] != "out"} {
  if {$[crop]LeyYears > 0} {
    set [crop]LeyYears [expr $[crop]LeyYears - 1]
  } else {
    apsimSendMessage [crop] end_crop
  }
}  
  ]]></text>
            <event>post</event>
          </script>
          <script name="start_simulation">
            <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}
</text>
            <event>start_simulation</event>
          </script>
        </rule>
        <rule name="Lucerne Ley variable sowing harvest at flowering">
          <ui>
            <category type="category" />
            <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
            <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
            <must_sow type="yesno" description="Must sow? : ">no</must_sow>
            <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
            <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
            <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
            <category type="category" />
            <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
            <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
            <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
            <cultivar type="cultivars" description="Enter cultivar : ">trifecta</cultivar>
            <class type="classes" description="Enter crop growth class : ">plant</class>
            <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
            <category type="category" />
            <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
            <category type="category" />
            <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
            <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
            <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
          </ui>
          <script name="init">
            <text><![CDATA[
# Sow this crop
proc sow_[crop] {} {
  #global myName
  #puts "[apsimGet dd/mm/yyyy]: $myName\n Manager sending message:\n[crop] sow plants=[density], sowing_depth=[depth], cultivar=[cultivar], row_spacing=[row_spacing]"
  apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} {cultivar  [cultivar]} {row_spacing [row_spacing]}
}


# Return whether any crop in our paddock is not "out"
proc paddockIsFallow {} {
   global myCrops
   foreach crop $myCrops {
      set status [apsimGet $crop.plant_status]
      if {$status != "out"} {
         return 0
      }
   }
   return 1
}

##########Date functions (general)
proc dateWithin {t0 t1} {
   set year [apsimGet year]
   set d0 [date2day $t0 $year]
   set d1 [date2day $t1 $year]
   return [dayWithin $d0 $d1]
}

proc dateIs {t} {
   set d [date2day $t [apsimGet year]]
   return [dayIs $d]
}

proc dayWithin {t0 t1} {
   set t [apsimGet day]
   if {$t0 > $t1} {
      return [expr $t >= $t0 || $t <= $t1]
   } else {
      return [expr $t >= $t0 && $t <= $t1]
   }
   # notreached
}

proc dayIs {t} {
   return [expr $t == [apsimGet day]]
}

proc leapyr {y} {
   return [expr ($y%4 == 0) && ($y%100 != 0) || ($y%400 == 0)]
}

proc date2day {date year} {
   foreach {mday month} [split $date "-"] {break}
   if {[leapyr $year]} {
      array set daysin {jan 0  feb 31 mar 58 apr 89 may 119 jun 150 jul 180 aug 211 sep 242 oct 272 nov 303 dec 333}
   } else {
      array set daysin {jan 0  feb 31 mar 59 apr 90 may 120 jun 151 jul 181 aug 212 sep 243 oct 273 nov 304 dec 334}
   }   
   return [expr $mday + $daysin($month)]
}

# Dummy values in case rotations aren't plugged in
set NextCrop        ""
set FallowIn        no

set [crop]LeyYears 0
]]></text>
            <event>init</event>
          </script>
          <script name="prepare">
            <text><![CDATA[
if {[paddockIsFallow] && $FallowIn != "yes" && ($NextCrop == "" || $NextCrop == "[crop]")} {
   if {[dateWithin [date1] [date2]] } {
      if {( [apsimGet rain\[[rainnumdays]\]] >= [raincrit] && [apsimGet esw] >= [esw_amount] ) ||
          ( "[must_sow]" == "yes" && [dateIs '[date2]'] ) } {
          set [crop]LeyYears [leyyears]
          set ChooseNextCrop "yes"
          sow_[crop]
      }
      if {[dateIs [date2]]} {
          set ChooseNextCrop "yes"
      }
   }
}
]]></text>
            <event>prepare</event>
          </script>
          <script name="post">
            <text><![CDATA[
if {[apsimGet [crop].stagename] == "flowering" } {
   apsimSendMessage [crop]  harvest {height [harvest_ht]}
}

if {[dateIs [killdate]] && [apsimGet [crop].plant_status] != "out"} {
  if {$[crop]LeyYears > 0} {
    set [crop]LeyYears [expr $[crop]LeyYears - 1]
  } else {
    apsimSendMessage [crop] end_crop
  }
}  
  ]]></text>
            <event>post</event>
          </script>
          <script name="start_simulation">
            <text>
# Do some auto-discovery for later on
if {![info exists myPaddockName]} {
  set myPaddockName [join [lrange [split [apsimGetFQName] "."] 0 end-1] "."]

  set myCrops {}
  foreach component [apsimGetChildren $myPaddockName] {
    set status [apsimGetOptional $component.plant_status]
    if {$status != ""} {
      lappend myCrops $component
    }
  }
}
</text>
            <event>start_simulation</event>
          </script>
        </rule>
      <rule name="Fertilise in a zadok stage window">
        <script name="init">
          <text>
            set fert_applied_[crop]_[zadok_fert_stage_begin]_[zadok_fert_stage_end] 0
        </text>
          <event>init</event>
        </script>
        <script name="sowing">
          <text>
            set fert_applied_[crop]_[zadok_fert_stage_begin]_[zadok_fert_stage_end] 0
        </text>
          <event>sowing</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
         set z [apsimGet [crop].zadok_stage]
         if { $z >= [zadok_fert_stage_begin] &&
              $z <= [zadok_fert_stage_end] &&
              fert_applied_[crop]_[zadok_fert_stage_begin]_[zadok_fert_stage_end] == 0} {
            if {[apsimGet esw] >= [esw_amount]} {
               set N_topsoil [expr [lrange [apsimGet no3] 0 1] + [lrange [apsimGet nh4] 0 1]]
               if {$N_topsoil < [fert_criteria]} {
                  a[simSendMessage [fertmodule] apply {amount [fert_amount]} {depth 50} {type [fert_type]}
                  set fert_applied_[crop]_[zadok_fert_stage_begin]_[zadok_fert_stage_end] 1
               }
            }
         }
         ]]></text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <zadok_fert_stage_begin type="text" description="Enter start of zadok window (10-71):   ">30</zadok_fert_stage_begin>
          <zadok_fert_stage_end type="text" description="Enter end of zadok window (10-71):   ">32</zadok_fert_stage_end>
          <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
          <esw_amount type="text" description="Enter amount of soil water (mm)">30</esw_amount>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">25</fert_amount>
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </rule>
            <rule name="Fertilise on fixed date - top up">
        <script name="prepare">
          <text><![CDATA[
if { [dateIs [fert_date]] } {
   set N_deficit [expr [fert_criteria] - [expr [lrange [apsimGet no3] 0 2] + [lrange [apsimGet nh4] 0 2]]
   apsimSendMessage [fertmodule] apply {amount $N_deficit} {depth 50} {type [fert_type]}
}
          ]]></text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
          <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </rule>
      <rule name="Fertilise on days after sowing - top up">
        <script name="prepare">
          <text><![CDATA[
if {[apsimGet [modulename].daysaftersowing] == [fert_das]} {
   N_deficit = [fert_criteria] - [expr [fert_criteria] - [expr [lrange [apsimGet no3] 0 2] + [lrange [apsimGet nh4] 0 2]]
   if {$N_deficit > 0} {
      apsimSendMessage [fertmodule] apply {amount $N_deficit} {depth 50} {type [fert_type]}
   }
}
     ]]></text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <modulename type="modulename" description="On which crop is fertiliser being applied : ">wheat</modulename>
          <fert_das type="text" description="Enter fertiliser days after sowing  : ">dd-mmm</fert_das>
          <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </rule>
      <rule name="Irrigate at sowing">
        <script name="[modulename].[eventname]">
          <text><![CDATA[
if {[irrig_amount_evt] > 0} {
   apsimSendMessage [irrigatemodule] apply {amount [irrig_amount_evt]}
}
   ]]></text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should irrigation be applied" />
          <modulename type="modulename" description="The module the event come from : " />
          <eventname type="text" description="Which event should irrigation be applied : ">sowing</eventname>
          <category name="Irrigation application details" />
          <irrigatemodule type="modulename" description="Module used to apply the irrigation : " />
          <irrig_amount_evt type="text" description="Amount of irrigation to apply (mm) : ">50</irrig_amount_evt>
        </ui>
      </rule>
      <rule name="Irrigate on fixed date">
        <script name="prepare">
          <text>
if {[dateIs [irrigate_date]]} {
   apsimSet [irrigate_module].irrigation_efficiency [irrigate_efficiency]
   apsimSendMessage  [irrigate_module] apply {amount [irrigate_amount]}
}
</text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should irrigation be applied" />
          <irrigate_date type="ddmmmdate" description="Enter irrigation date (dd-mmm) : ">dd-mmm</irrigate_date>
          <category name="Irrigation application details" />
          <irrigate_module type="modulename" description="Module used to apply the irrigation : ">ClockAllYears</irrigate_module>
          <irrigate_amount type="text" description="Amount of irrigation to apply (mm) : ">50</irrigate_amount>
          <irrigate_efficiency type="text" description="Irrigation efficiency (0-1) : ">1.0</irrigate_efficiency>
        </ui>
      </rule>
      <rule name="Tillage on fixed date">
        <script name="prepare">
          <text>
if {[dateIs [tillage_date]]} {
   if {"[tillage_type]" == "user_defined"} {
       apsimSendMessage [surfaceommodule] tillage {type [tillage_type]} {f_incorp [tillage_f_incorp]} {tillage_depth [tillage_depth]}
   } else {
       apsimSendMessage [surfaceommodule] tillage {type [tillage_type]}
   }
   set ready_to_till_pre_sow 0
   set till_day_pre_sow 0
endif
      </text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should tillage be done" />
          <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) : ">dd-mmm</tillage_date>
          <category name="Tillage application details" />
          <surfaceommodule type="modulename" description="Module used to apply the tillage : " />
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
        </ui>
      </rule>
      <rule name="Tillage on an event">
        <script name="[modulename].[eventname]">
          <text>
if {"[tillage_type]" == "user_defined"} {
   apsimSendMessage [surfaceommodule] tillage {type [tillage_type]} {f_incorp [tillage_f_incorp]} {tillage_depth [tillage_depth]}
} else {
   apsimSendMessage [surfaceommodule] tillage {type [tillage_type]}
}
      </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should tillage be performed" />
          <modulename type="modulename" description="The module the event come from : ">ClockAllYears</modulename>
          <eventname type="text" description="On which event should tillage be done : ">sowing</eventname>
          <category name="Tillage details" />
          <surfaceommodule type="modulename" description="Module used to apply the tillage : ">ClockAllYears</surfaceommodule>
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
        </ui>
      </rule>
      <rule name="Reset water, nitrogen and surfaceOM on fixed date">
        <script name="prepare">
          <text>
if {[dateIs [reset_date]]} {
   if {"[resetWater]" == "yes"} {
       apsimSendMessage "[soilmodule] Water" reset
   }
   if {"[resetNitrogen]" == "yes"} {
       apsimSendMessage "[soilmodule] Nitrogen" reset
   }
   if {"[resetSurfaceOM]" == "yes"} {
       apsimSendMessage "[surfaceommodule] Water" reset
   }
   apsimSendMessage * reseting
}
      </text>
          <event>prepare</event>
        </script>
        <ui>
          <category name="When should a reset be done" />
          <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">dd-mmm</reset_date>
          <category name="Reset details" />
          <soilmodule type="modulename" description="Name of your soil module : " />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
          <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
          <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
          <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        </ui>
      </rule>
      <rule name="Reset water, nitrogen and surfaceOM on sowing">
        <script name="[modulename].[eventname]">
          <text>
if {[dateIs [reset_date]]} {
   if {"[resetWater]" == "yes"} {
       apsimSendMessage "[soilmodule] Water" reset
   }
   if {"[resetNitrogen]" == "yes"} {
       apsimSendMessage "[soilmodule] Nitrogen" reset
   }
   if {"[resetSurfaceOM]" == "yes"} {
       apsimSendMessage "[surfaceommodule] Water" reset
   }
   apsimSendMessage * reseting
endif
      </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should a reset be done" />
          <modulename type="modulename" description="The module the event is to come from : ">wheat</modulename>
          <eventname type="text" description="On which event should a reset be done : ">sowing</eventname>
          <category name="Reset details" />
          <soilmodule type="modulename" description="Name of your soil module : " />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
          <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
          <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
          <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        </ui>
      </rule>
      <rule name="Establish Bambatsi pasture">
        <ui>
          <category description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">1-sep</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">31-dec</date2>
          <raincrit type="text" description="Amount of rainfall : ">15</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <category description="Sowing parameters" />
          <crop type="crop" description="Enter name of module to sow : ">bambatsi</crop>
          <density type="text" description="Enter sowing density  (plants/ha) : ">100</density>
        </ui>
        <script name="init">
          <text>
set [crop]_in 0
           </text>
          <event>init</event>
        </script>
        <script name="prepare">
          <text><![CDATA[
if {[dateWithin [date1] [date2]] && [crop]_in == 0} {
   if ([apsimGet rain\[[rainnumdays]\]] >= [raincrit]} {
      apsimSendMessage [crop]  establish plants = [density], init_section = seedling
      [crop]_in = 1
   }
}
            ]]></text>
          <event>prepare</event>
        </script>
      </rule>
      <rule name="Manage Bambatsi">
        <ui>
          <category description="Cutting criteria" />
          <hmass type="text" description="Enter critical biomass for harvest (kg/ha) : ">2000</hmass>
          <category description="Cutting parameters" />
          <crop type="crop" description="Enter name of module to cut : ">bambatsi</crop>
          <ffraction type="text" description="Enter fraction of foliage removed  (0-1) : ">0.9</ffraction>
          <sfraction type="text" description="Enter fraction of stem removed  (0-1) : ">0.9</sfraction>
        </ui>
        <script name="prepare">
          <text><![CDATA[
if {[apsimGet [crop].biomass] > [hmass] && [crop]_in != 0} {
   [crop] cut {foliage_remove_fr  [ffraction]} {adm_remove_fr [sfraction]}
}
            ]]></text>
          <event>prepare</event>
        </script>
      </rule>

        <rule name="Rotations - Sequential">
          <ui>
            <category type="category" />
            <SummerFallowName type="text" description="Enter summer fallow name : ">sf</SummerFallowName>
            <SummerFallowEndDate type="text" description="Enter summer fallow END date (dd-mmm) : ">15-mar</SummerFallowEndDate>
            <WinterFallowName type="text" description="Enter winter fallow name : ">wf</WinterFallowName>
            <WinterFallowEndDate type="text" description="Enter winter fallow END date (dd-mmm) : ">23-aug</WinterFallowEndDate>
            <category type="category" />
            <crop1 type="crop" description="Enter 1st crop : ">wheat</crop1>
            <crop2 type="crop" description="Enter 2nd crop : ">sf</crop2>
            <crop3 type="crop" description="Enter 3rd crop : ">nil</crop3>
            <crop4 type="crop" description="Enter 4th crop : ">nil</crop4>
            <crop5 type="crop" description="Enter 5th crop : ">nil</crop5>
            <crop6 type="crop" description="Enter 6th crop : ">nil</crop6>
            <crop7 type="crop" description="Enter 7th crop : ">nil</crop7>
            <crop8 type="crop" description="Enter 8th crop : ">nil</crop8>
            <crop9 type="crop" description="Enter 9th crop : ">nil</crop9>
            <crop10 type="crop" description="Enter 10th crop : ">nil</crop10>
            <crop11 type="crop" description="Enter 11th crop : ">nil</crop11>
            <crop12 type="crop" description="Enter 12th crop : ">nil</crop12>
            <crop13 type="crop" description="Enter 13th crop : ">nil</crop13>
            <crop14 type="crop" description="Enter 14th crop : ">nil</crop14>
            <crop15 type="crop" description="Enter 15th crop : ">nil</crop15>
            <crop16 type="crop" description="Enter 16th crop : ">nil</crop16>
            <crop17 type="crop" description="Enter 17th crop : ">nil</crop17>
            <crop18 type="crop" description="Enter 18th crop : ">nil</crop18>
            <crop19 type="crop" description="Enter 19th crop : ">nil</crop19>
            <crop20 type="crop" description="Enter 20th crop : ">nil</crop20>
          </ui>
          <script name="init">
            <text>
set NextCropIndex   1
set NextCrop        ""
set ChooseNextCrop  yes
set SummerFallowIn  no
set WinterFallowIn  no
set FallowIn        no
      </text>
            <event>init</event>
          </script>
          <script name="prepare">
            <text><![CDATA[
if {$ChooseNextCrop == "yes"} {
   if {$NextCropIndex == "1"} {
      set NextCrop "[crop1]"
   } elseif {$NextCropIndex == "2"} {
      set NextCrop "[crop2]"
   } elseif {$NextCropIndex == "3"} {
      set NextCrop "[crop3]"
   } elseif {$NextCropIndex == "4"} {
      set NextCrop "[crop4]"
   } elseif {$NextCropIndex == "5"} {
      set NextCrop "[crop5]"
   } elseif {$NextCropIndex == "6"} {
      set NextCrop "[crop6]"
   } elseif {$NextCropIndex == "7"} {
      set NextCrop "[crop7]"
   } elseif {$NextCropIndex == "8"} {
      set NextCrop "[crop8]"
   } elseif {$NextCropIndex == "9"} {
      set NextCrop "[crop9]"
   } elseif {$NextCropIndex == "10"} {
      set NextCrop "[crop10]"
   } elseif {$NextCropIndex == "11"} {
      set NextCrop "[crop11]"
   } elseif {$NextCropIndex == "12"} {
      set NextCrop "[crop12]"
   } elseif {$NextCropIndex == "13"} {
      set NextCrop "[crop13]"
   } elseif {$NextCropIndex == "14"} {
      set NextCrop "[crop14]"
   } elseif {$NextCropIndex == "14"} {
      set NextCrop "[crop14]"
   } elseif {$NextCropIndex == "15"} {
      set NextCrop "[crop15]"
   } elseif {$NextCropIndex == "16"} {
      set NextCrop "[crop16]"
   } elseif {$NextCropIndex == "17"} {
      set NextCrop "[crop17]"
   } elseif {$NextCropIndex == "18"} {
      set NextCrop "[crop18]"
   } elseif {$NextCropIndex == "19"} {
      set NextCrop "[crop19]"
   } elseif {$NextCropIndex == "20"} {
      set NextCrop "[crop20]"
   }
   
   if {$NextCrop == "nil" || $NextCrop == ""} {
      set NextCrop "[crop1]"
      set NextCropIndex 1
   }
   set NextCropIndex [expr $NextCropIndex + 1]
   set ChooseNextCrop "no"
}

# if the next crop is due to be a fallow and we're within the
# correct date range then put a fallow in.
if {$NextCrop == "[WinterFallowName]"} {
   if {[paddockIsFallow] && $FallowIn == "no"} {
      if {[dateWithin [SummerFallowEndDate] [WinterFallowEndDate]] } {
         set WinterFallowIn "yes"
         set FallowIn "yes"
         set ChooseNextCrop "yes"
      }
   }
} elseif {$NextCrop == "[SummerFallowName]"} {
   if {[paddockIsFallow] && $FallowIn == "no"} {
      if {[dateWithin [WinterFallowEndDate] [SummerFallowEndDate]] } {
         set SummerFallowIn "yes"
         set FallowIn "yes"
         set ChooseNextCrop "yes"
      }
   }
}

# if we currently have a fallow in and we're at the end of the fallow window
# then remove the fallow.
if {$WinterFallowIn == "yes" && [dateIs 1+[WinterFallowEndDate]]} {
   set WinterFallowIn "no"
   set FallowIn "no"
}
if {$SummerFallowIn == "yes" && [dateIs 1+[SummerFallowEndDate]]} {
   set SummerFallowIn "no"
   set FallowIn "no"
}
      ]]></text>
            <event>prepare</event>
          </script>
        </rule>
        <rule name="Sowing fertiliser">
          <ui>
            <category type="category" description="When should fertiliser be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">lucerne</modulename>
            <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
            <category type="category" description="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">150</fert_amount_sow>
            <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">urea_N</fert_type_sow>
          </ui>
          <script name="[modulename].[eventname]">
            <text>

  apsimSendMessage [fertmodule] apply {amount [fert_amount_sow]} {depth 50} {type [fert_type_sow]}

            </text>
            <event>[modulename].[eventname]</event>
          </script>
        </rule>
      </tclmanager>
      <cropui name="Crop UI">
         <ui>
           <state>Wheat</state>
           <crop>wheat</crop>
           <date1>15-may</date1>
           <date2>10-jul</date2>
           <raincrit>25</raincrit>
           <rainnumdays>3</rainnumdays>
           <esw_amount>50</esw_amount>
           <must_sow>no</must_sow>
           <wait_machinery>no</wait_machinery>
           <cultivar>hartog</cultivar>
           <plants>100</plants>
           <sowing_depth>30</sowing_depth>
           <row_spacing>250</row_spacing>
           <sowing_costs>
           </sowing_costs>
           <sow_tractor>Machinery - 200kwFWA</sow_tractor>
           <sow_implement>Machinery - Precision Planter</sow_implement>
           <fert_type>urea_N</fert_type>
           <fert_cost>???</fert_cost>
           <target_n>
           </target_n>
           <harvest_costs>100</harvest_costs>
           <price>200</price>
           <moisture>12</moisture>
           <harv_tractor>Machinery - 200kwFWA</harv_tractor>
           <harv_implement>Machinery - Plough</harv_implement>
           <criteria type="text" description="criteria">variable</criteria>
           <skipplant type="text" description="skipplant">0</skipplant>
           <skiprow type="text" description="skiprow">0</skiprow>
           <class type="text" description="class">plant</class>
           <module type="text" description="module">plant</module>
         </ui>
         <CustomUI>
           <criteria type="text" description="criteria">variable</criteria>
         </CustomUI>
         <script name="Init">
           <text><![CDATA[
     # Support procedures test
     # Can we plant a crop today?
     proc canPlant_[crop] {} {
     if {"[criteria]" == "variable"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "[date1]-$year"] -format %j]
     set d2 [clock format [clock scan "[date2]-$year"] -format %j]
     
     if {"[must_sow]" == "yes" && $day == $d2} {return 1}
     
     if {$d1 > $d2} {
     set dateOK [expr $day >= $d1 || $day <= $d2]
     } else {
     set dateOK [expr $day >= $d1 && $day <= $d2]
     }
     set rainOK [expr [apsimGet rain\[[rainnumdays]\]] >= [raincrit]]
     set eswOK [expr [apsimGet esw] >= [esw_amount]]
     return [expr $dateOK && $rainOK && $eswOK]
     } elseif {"[criteria]" == "fixed"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "[date1]-$year"] -format %j]
     return [expr $day == $d1]
     } else {
     error "Unknown sowing criteria \"[criteria]\"."
     }
     return "notreached"
     }
     
     # Plant a crop now
     proc sow_[crop] {} {
     if {"[module]" == "plant"} {
     apsimSendMessage [crop] sow {plants [plants]} {sowing_depth [sowing_depth]} \
     {cultivar [cultivar]} {row_spacing [row_spacing]} \
     {skipplant [skipplant]} {skiprow [skiprow]} {crop_class [class]}
     } elseif {"[module]" == "cropmod"} {
     apsimSendMessage [crop] sow {plants [density]} {sowing_depth [depth]} \
     {cultivar [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]}
     } elseif {"[module]" == "growth"} {
     apsimSendMessage [crop] ???
     } elseif {"[module]" == "ozcot"} {
     apsimSendMessage [crop] sow {plants_pm [plants_pm]} {sowing_depth [sowing_depth]} \
     {row_spacing [row_spacing]} {skiprow [skiprow]} {cultivar [cultivar]}
     } elseif {"[module]" == "oryza"} {
     apsimSendMessage [crop] sow {cultivar [cultivar]}
     } elseif {"[module]" == "sorghum"} {
     apsimSendMessage [crop] sow {plants [plants]} {sowing_depth [sowing_depth]} \
     {cultivar [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]} \
     {tiller_no_fertile [tiller_no_fertile]}
     } elseif {"[module]" == "sugar"} {
     apsimSendMessage [crop] sow {plants [plants]} {cultivar [cultivar]} {sowing_depth [sowing_depth]}
     } else {
     error "Unknown crop module \"[module]\"."
     }
     }
             ]]></text>
           <event>init</event>
         </script>
       </cropui>      
      <RotPlot name="Rotation Management">
        <rotnode name="Rotations">
          <rule name="Init rule" invisible="yes" condition="init"><![CDATA[package require struct
    ::struct::graph stateGraph
    ]]></rule>
        </rotnode>
      </RotPlot>
      <RugPlotUI name="Rug Plot Graph" />
    </folder>
     <folder name="AgPasture management">
       <manager name="Regular cut and remove (no return)">
         <ui>
           <category description="Regular harvest or grazing" />
           <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter pasture type">agpasture</AgPasture>
           <date1 type="date" description="Enter the first harvest or grazing date">1/7/1995</date1>
           <amount_type type="list" listvalues="residue,removal" description="Select the amount type">residue</amount_type>
           <amount type="text" description="Enter herbage amount (kg/ha)">1250</amount>
           <interval type="text" description="Enter the intervals between harvest or grazing (days)">14</interval>
         </ui>
         <script name="end_of_day">
           <text><![CDATA[account = account + 1
   if ( (today = date('[date1]')) or 
         (today >date('[date1]') and account = [interval] ) ) then
                 account = 0
                '[AgPasture]'  graze type = '[amount_type]', amount = [amount] (kg/ha)             
    endif
           

                  

   ]]></text>
           <event>end_of_day</event>
         </script>
         <script name="init">
           <text>account = 0
   somMass = 0
   somN = 0
   urineN =0</text>
           <event>init</event>
         </script>
       </manager>
       <manager name="Cut and remove on fixed dates (no return)">
         <ui>
           <category description="Harvest" />
           <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter crop name">agpasture</AgPasture>
           <amount type="text" description="Enter harvest amount (kg/ha):">1000</amount>
           <type type="list" listvalues="residue,removal" description="Enter harvest amount  type">residue</type>
           <date1 type="date" description="Enter harvest date 1">14/10/1966</date1>
           <date2 type="date" description="Enter harvest date 2:">28/10/1966</date2>
         </ui>
         <script name="end_of_day">
           <text>
           if (today = date('[date1]') ) then
                '[AgPasture]' graze type = '[type]', amount = [amount]
            endif
           
           if (today = date('[date2]') ) then
               '[AgPasture]' graze type ='[type]', amount =[amount]			
           endif
                  

   </text>
           <event>end_of_day</event>
         </script>
       </manager>
       <manager name="Regular harvest or grazing (with return)">
         <ui>
           <category description="Regular harvest or grazing" />
           <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter pasture type">agpasture</AgPasture>
           <date1 type="date" description="Enter the first harvest or grazing date">1/7/1900</date1>
           <amount_type type="list" listvalues="residue,removal" description="Select the amount type">residue</amount_type>
           <amount type="text" description="Enter herbage amount (kg/ha)">1000</amount>
           <interval type="text" description="Enter the intervals between harvest or grazing (days)">21</interval>
           <category description="Material returns" />
           <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
           <urine_n_frac type="text" description="Fraction of returned nitrogen in urine">0.6</urine_n_frac>
           <urine_depth type="text" description="Urine deposit depth (mm)">150</urine_depth>
         </ui>
         <script name="end_of_day">
           <text><![CDATA[account = account + 1
   dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0
   if ( (today = date('[date1]')) or
        (today >date('[date1]') and account = [interval] )) then
                 account = 0
                 '[AgPasture]' graze type = '[amount_type]', amount = [amount] (kg/ha)
                 digest = DefoliatedDigestibility                 
                 dm_som = HarvestWt * (1-digest)
                           
                 n_removed  = HarvestN *(1.0-[dm_frac])
                 n_returned = HarvestN * [dm_frac]
                 n_som      = n_returned * ( 1.0 - [urine_n_frac] )
                 n_urine    = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                  'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
    endif
    
           

                  

   ]]></text>
           <event>end_of_day</event>
         </script>
         <script name="init">
           <text>account = 0
   </text>
           <event>init</event>
         </script>
       </manager>
       <manager name="Harvest or grazing on fixed dates (with return)">
         <ui>
           <category description="Harvest or grazeing" />
           <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Select pasture name">agpasture</AgPasture>
           <amount type="text" description="Enter harvest amount (kg/ha):">1000</amount>
           <amount_type type="list" listvalues="residue,removal" description="Enter harvest amount  type">residue</amount_type>
           <category description="Material returns" />
           <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
           <urine_n_frac type="text" description="Fraction of returned nitrogen in urine">0.6</urine_n_frac>
           <urine_depth type="text" description="Depth of returned nitrogen in soil profile (mm)">300</urine_depth>
           <category description="Enter dates: (d/mm/yyyy)" />
           <date1 type="date" description="Date 1">1/10/1990</date1>
           <date2 type="date" description="Date 2">1/11/1990</date2>
           <date3 type="date" description="Date 3">1/12/1990</date3>
         </ui>
         <script name="end_of_day">
           <text>dm_som = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0
   if (today = date('[date1]')) or
      (today = date('[date2]')) or
      (today = date('[date3]'))then
                 '[AgPasture]' graze type = '[amount_type]', amount = [amount] (kg/ha)
                 digest = DefoliatedDigestibility                 
                 dm_som = HarvestWt * (1-digest)
                           
                 n_removed  = HarvestN *(1.0-[dm_frac])
                 n_returned = HarvestN * [dm_frac]
                 n_som      = n_returned * ( 1.0 - [urine_n_frac] )
                 n_urine    = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                  'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
   endif
   </text>
           <event>end_of_day</event>
         </script>
       </manager>
       <manager name="Rotational grazing with herbage mass between two limits">
         <ui>
           <category description="Regular harvest or grazing" />
           <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum, ryegrass,clover" description="Enter pasture type">agpasture</AgPasture>
           <date1 type="date" description="Enter the first harvest or grazing date">1/7/1900</date1>
           <upper_amount type="text" description="Enter herbage anmount to start grazing (harvest)  (kg/ha)">1800</upper_amount>
           <amount type="text" description="Enter daily amount (kg/ha) or -1 for remove once to residee below">400</amount>
           <lower_amount type="text" description="Enter herbage amount to stop grazing (residue, kg/ha)">1000</lower_amount>
           <category description="Material returns" />
           <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
           <urine_n_frac type="text" description="Fraction of returned nitrogen in urine">0.6</urine_n_frac>
           <urine_depth type="text" description="Urine deposit depth (mm)">300</urine_depth>
         </ui>
         <script name="end_of_day">
           <text><![CDATA[dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0

   if ( today >= date('[date1]') )  then
          if ( ( [AgPasture].AboveGroundWt  > '[upper_amount]' )  or  (  ( [AgPasture].AboveGroundWt > '[lower_amount]') and (continuegrazing = 1) ) ) then
                 removable_amt  =  [AgPasture].AboveGroundWt - [lower_amount]               
                 if ([amount] = -1 )  or ('[amount]' > removable_amt ) then
                        daily_amt =  removable_amt 
                        continuegrazing = 0
                 else
                        daily_amt = [amount]
                        continuegrazing= 1
                 endif      
                 
                 '[AgPasture]' graze type = 'removal', amount = daily_amt (kg/ha)                
                 digest = DefoliatedDigestibility                 
                 dm_som = HarvestWt * (1-digest)                        
                 n_removed  = HarvestN *(1.0-[dm_frac])
                 n_returned = HarvestN * [dm_frac]
                 n_som      = n_returned * ( 1.0 - [urine_n_frac] )
                 n_urine    = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                  'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
         endif
    endif
           

                  

   ]]></text>
           <event>end_of_day</event>
         </script>
         <script name="init">
           <text>account = 0
   dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   continuegrazing = 1
   daily_amt = 0</text>
           <event>init</event>
         </script>
       </manager>
       <manager name="Rotation grazing with herbage mass between two limits-clover">
         <ui>
           <category description="Regular harvest or grazing" />
           <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass,clover" description="Enter pasture type">clover</AgPasture>
           <date1 type="date" description="Enter the first harvest or grazing date">1/7/1900</date1>
           <upper_amount type="text" description="Enter herbage anmount to start grazing (harvest)  (kg/ha)">600</upper_amount>
           <amount type="text" description="Enter daily amount (kg/ha) or -1 for remove once to residee below">100</amount>
           <lower_amount type="text" description="Enter herbage amount to stop grazing (residue, kg/ha)">300</lower_amount>
           <category description="Material returns" />
           <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
           <urine_n_frac type="text" description="Fraction of returned nitrogen in urine">0.6</urine_n_frac>
           <urine_depth type="text" description="Urine deposit depth (mm)">300</urine_depth>
         </ui>
         <script name="end_of_day">
           <text><![CDATA[dm_som = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0

   if ( today >= date('[date1]') )  then
          if ( ( [AgPasture].AboveGroundWt  > '[upper_amount]' )  or  (  ( [AgPasture].AboveGroundWt > '[lower_amount]') and (continuegrazing = 1) ) ) then
                 removable_amt  =  [AgPasture].AboveGroundWt - [lower_amount]               
                 if ([amount] = -1 )  or ('[amount]' > removable_amt ) then
                        daily_amt =  removable_amt 
                        continuegrazing = 0
                 else
                        daily_amt = [amount]
                        continuegrazing= 1
                 endif      
                 
                '[AgPasture]' graze type = 'removal', amount = daily_amt (kg/ha)  
                 
                 digest = DefoliatedDigestibility
                 dm_som = HarvestWt * ([1-digest)
                                    
                 n_removed   = [AgPasture].HarvestN *(1-[dm_frac])
                 n_returned  = [AgPasture].HarvestN * [dm_frac]
                 n_som       = n_returned* ( 1 - [urine_n_frac] )
                 n_urine     = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                 'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
         endif
    endif
           

                  

   ]]></text>
           <event>end_of_day</event>
         </script>
         <script name="init">
           <text>account = 0
   dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   continuegrazing = 1
   daily_amt = 0</text>
           <event>init</event>
         </script>
       </manager>
       <manager name="Rotation grazing with herbage mass between two limits-ryegrass">
         <ui>
           <category description="Regular harvest or grazing" />
           <AgPasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass,clover" description="Enter pasture type">ryegrass</AgPasture>
           <date1 type="date" description="Enter the first harvest or grazing date">1/7/1900</date1>
           <upper_amount type="text" description="Enter herbage anmount to start grazing (harvest)  (kg/ha)">750</upper_amount>
           <amount type="text" description="Enter daily amount (kg/ha) or -1 for remove once to residee below">100</amount>
           <lower_amount type="text" description="Enter herbage amount to stop grazing (residue, kg/ha)">300</lower_amount>
           <category description="Material returns" />
           <dm_frac type="text" description="Fraction of nitrogen returned as excreta">0.85</dm_frac>
           <urine_n_frac type="text" description="Fraction of returned nitrogen returned in urine">0.6</urine_n_frac>
           <urine_depth type="text" description="Urine deposit depth (mm)">300</urine_depth>
         </ui>
         <script name="end_of_day">
           <text><![CDATA[dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 = 0
   n_urine2 = 0

   if ( today >= date('[date1]') )  then
          if ( ( [AgPasture].AboveGroundWt  > '[upper_amount]' )  or  (  ( [AgPasture].AboveGroundWt > '[lower_amount]') and (continuegrazing = 1) ) ) then
                 removable_amt  =  [AgPasture].AboveGroundWt - [lower_amount]               
                 if ([amount] = -1 )  or ('[amount]' > removable_amt ) then
                        daily_amt =  removable_amt 
                        continuegrazing = 0
                 else
                        daily_amt = [amount]
                        continuegrazing= 1
                 endif      
                 
                '[AgPasture]'  graze type = 'removal', amount = daily_amt (kg/ha)                                   
                 dm_som = HarvestWt * ([1-digest)             
                 
                 n_removed   = [AgPasture].HarvestN *(1-[dm_frac])
                 n_returned  = [AgPasture].HarvestN * [dm_frac]
                 n_som       = n_returned* ( 1 - [urine_n_frac] )
                 n_urine     = n_returned *  [urine_n_frac]  
                 n_urine1 = 0.6 * n_urine
                 n_urine2 = 0.4 * n_urine
                 'Surface Organic Matter' add_surfaceom name = '[AgPasture]' , type =  grass, mass = dm_som (kg/ha), n = n_som (kg/ha)
                 'fertiliser' apply amount =  n_urine1  (kg/ha), depth = 50  (mm), type = urea_n ()
                 'fertiliser' apply amount =  n_urine2  (kg/ha), depth = 150 (mm), type = urea_n ()
         endif
    endif
           

                  

   ]]></text>
           <event>end_of_day</event>
         </script>
         <script name="init">
           <text>account = 0
   dm_som = 0
   dm_removed = 0
   n_returned =0
   n_removed =0
   n_som = 0
   n_urine = 0
   n_urine1 =0
   n_urine2 = 0
   continuegrazing = 1
   daily_amt = 0</text>
           <event>init</event>
         </script>
       </manager>
       <manager name="Sow pasture on a fixed date">
         <ui>
           <category description="Sowing criteria" />
           <date type="text" description="Enter sowing date (d/mmm/yyyy) : ">1/07/1990</date>
           <category description="Sowing parameters" />
           <pasture type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter name of pasture to sow : ">agpasture</pasture>
         </ui>
         <script name="start_of_day">
           <text>
           if (today = date('[date]') then
                 [pasture] sow 
            endif
                  </text>
           <event>start_of_day</event>
         </script>
       </manager>
       <manager name="End pasture on a fixed date">
         <ui>
           <category description="Harvesting criteria" />
           <crop type="list" listvalues="agpasture,ryegrass_clover,ryegrass_clover_paspalum,ryegrass,clover" description="Enter name of pasture to end:">agpasture</crop>
           <date type="date" description="Enter ending date :">10/12/1990</date>
         </ui>
         <script name="end_of_day">
           <text>
           if (today = date('[date]') then
                 [crop]  KillCrop KillFracion = 0
           endif

               </text>
           <event>end_of_day</event>
         </script>
       </manager>
     </folder>
    
    <operations name="Operations Schedule"/>
    <accum>
      <variable name="variable">variable</variable>
    </accum>
    <tracker />
    <YPCalc name= "YP Calculator"/>
  <venlink>
    <model_filename type="filename" description="Name of VENSIM model filename" />
    <variable type="multiedit" description="Name of VENSIM variable(s) that are gettable/settable by APSIM" />
    <ini name="Constants">
      <filename>%apsim%\Examples\Advanced\VenLink\Vensim.ini</filename>
    </ini>
  </venlink>
    <log name="Diagnostic log file"/>
    <sysbal name="System balance checker"/>
      <tclmanager name="Debugger">
        <rule name="Debugger">
          <ui/>
          <script name="init">
            <event>init</event>
            <text><![CDATA[package require Tk
wm withdraw .

package require tkcon
tkcon show
tkcon title "Apsim Debugging Console"
puts "Commands:"
puts " 'c'       - Continue"
puts " 's <n>'   - Step n days (default 1)"
puts " 'p <what>'- Print apsim variable"
puts " 'b <cond>'- Set break condition"
set steps 1
update

# A 4 command debugger:
proc c {}      {uplevel #0 set steps -1}  ;# Continue
proc s {{n 1}} {uplevel #0 set steps $n}  ;# Step n days
proc p {var}   {apsimGet $var}            ;# print apsim variable
proc b {cond}  {global Conds; lappend Conds $cond} ;# set break condition
set Conds {}

# Link an apsim variable
proc link {apsimName tclName} {
   global $tclName; set $tclName {}
   trace variable $tclName r "getLinked $apsimName"
   trace variable $tclName w "setLinked $apsimName"
}
proc getLinked {a n1 n2 op} {uplevel #0 set $n1 [apsimGet $a]}
proc setLinked {a n1 n2 op} {apsimSet $a $n1}

]]></text>
          </script>
\          <script name="process"><event>process</event><text>update
foreach cond $Conds {
  if {[expr $cond]} {
    set steps 1
  }
}

incr steps -1
if {$steps == 0} {tkwait variable steps}
        </text></script></rule>
      </tclmanager>
  </folder>
  <folder name="Water Components">
    <irrigation name="Irrigation">
      <automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">on</automatic_irrigation>
      <asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
      <crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.5</crit_fr_asw>
      <irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
      <irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
      <allocation type="text" description="Allocation in mm">0</allocation>
      <default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
      <default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
      <default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
    </irrigation>
    <irrigation name="Irrigation ML allocation">
      <automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">on</automatic_irrigation>
      <asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
      <crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.5</crit_fr_asw>
      <irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
      <irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
      <allocation_ML type="text" description="Allocation in ML">0</allocation_ML>
      <application_area type="text" description="Irrigated area (ha)">1</application_area>
      <default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
      <default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
      <default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
    </irrigation>
    <bore>
      <max_available_water description="Capacity (ML)">100</max_available_water>
      <init_available_water description="Supply volume available at start of simulation (ML)">50</init_available_water>
      <max_pump description="Maximum pump delivery volume per day (ML/day)">10</max_pump>
      <min_volume description="Minimum volume in storage below which pump cannot access">2</min_volume>
      <annual_allocation description="Annual Allocation in ML">100</annual_allocation>
      <allocation_renewal_day description="Day of year on which allocation is granted">180</allocation_renewal_day>
      <init_salt_conc description="Initial chloride concentration (ppm)">704.0</init_salt_conc>
    </bore>
    <channel>
      <max_available_water description="Capacity (ML)">100</max_available_water>
      <init_available_water description="Supply volume available at start of simulation (ML)">50</init_available_water>
      <max_pump description="Maximum pump delivery volume per day (ML/day)">10</max_pump>
      <min_volume description="Minimum volume in storage that the pump cannot access">2</min_volume>
      <annual_allocation description="Annual Allocation in ML">100</annual_allocation>
      <allocation_renewal_day description="Day of year on which allocation is granted">180</allocation_renewal_day>
      <init_salt_conc description="Initial chloride concentration (ppm)">704.0</init_salt_conc>
    </channel>
    <dam>
      <source_type type="list" listvalues="dam_gully,dam_ring,dam_exc,sump" description="Source Type">dam_gully</source_type>
      <max_available_water description="Capacity (ML)">100</max_available_water>
      <max_area description="Storage water surface area at capacity (ha)">5</max_area>
      <init_available_water description="Initial supply volume available(ML)">50</init_available_water>
      <max_pump description="Maximum pump delivery volume per day (ML/day)">10</max_pump>
      <min_volume description="Minimum volume in storage that the pump cannot access">2</min_volume>
      <permeability description="Permeability of sealing layer (m/day)">0.00007</permeability>
      <seal_thickness description="Thickness of low permeability seal (m)">0.5</seal_thickness>
      <receive_catchment_runoff type="list" listvalues="no,yes" description="Dam collects runoff from larger catchment area">no</receive_catchment_runoff>
      <receive_crop_runoff type="list" listvalues="no,yes" description="Dam collects runoff from simulated crop area">no</receive_crop_runoff>
      <init_salt_conc description="Initial chloride concentration (ppm)">704.0</init_salt_conc>
      <receive_catchment_runoff type="list" listvalues="no,yes" description="Dam collects runoff from larger catchment area">no</receive_catchment_runoff>
      <catchment_area description="Catchment area (ha)">50.0</catchment_area>
      <catchment_runoff_factor description="soilwat2.runoff multiplier">0.5</catchment_runoff_factor>
      <receive_crop_runoff type="list" listvalues="yes,no" description="Dam collects runoff from simulated crop area">yes</receive_crop_runoff>
      <runoff_salt_conc description="Runoff chloride concentration (ppm)">700.0</runoff_salt_conc>
      <rainfall_salt_conc description="Rainfall chloride concentration (ppm)">20.0</rainfall_salt_conc>
    </dam>
    <pond>
      <algae_present description="is there algae present in this pond (0 or 1)">0</algae_present>
      <CEC description="surface soil cation exchange capacity">30.0</CEC>
    </pond>
  </folder>
  <clock name="Clock">
    <start_date name="start_date" description="Select the start date of the simulation" type="date">1/01/1988</start_date>
    <end_date name="end_date" description="Select the end date of the simulation" type="date">31/12/1988</end_date>
  </clock>
  <clock name="Clock - all years in metfile" />
  <outputfile name="Outputfile">
    <variables name="Variables">
      <variable name="dd/mm/yyyy as Date" description="Date (dd/mm/yyyy)" array="?" />
    </variables>
    <events name="Reporting Frequency">
      <event name="Daily" description="End of daily simulation time step" />
    </events>
  </outputfile>
  <ReportNetCDF>
    <variables name="Variables">
      <variable name="dd/mm/yyyy as Date" description="Date (dd/mm/yyyy)" array="?" />
    </variables>
    <events name="Reporting Frequency">
      <event name="Daily" description="End of daily simulation time step" />
    </events>
  </ReportNetCDF>  
  <summaryfile name="Summaryfile">
    <filename name="filename">sample.sum</filename>
  </summaryfile>
</folder>