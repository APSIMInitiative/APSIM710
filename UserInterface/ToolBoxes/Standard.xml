<folder version="17" name="Standard Toolbox" image="%apsim%\UserInterface\Images\Package24.png">
  <soilwatkludge name="soilwatkludge">
    <mwcon>1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0</mwcon>
    <max_pond>100</max_pond>
  </soilwatkludge>
  <folder name="Structural">
    <memo />
    <folder />
    <area name="paddock">
      <registrations name="global" />
    </area>
  </folder>
  <folder name="Crops">
    <barley />
    <bambatsi />
    <butterflypea />
    <canola />
    <centro />
    <chickpea />
    <cotton />
    <cowpea />
    <egrandis />
    <fababean />
    <fieldpea />
    <frenchbean />
    <grasp name="Grasp">
      <category name="Initial values at establishment" />
      <root_depth_init description="Initial depth of roots (mm)">750</root_depth_init>
      <dm_dead_leaf_init description="Initial Dead Leaf weight (kg/ha)">0</dm_dead_leaf_init>
      <dm_dead_stem_init description="Initial Dead Stem weight (kg/ha)">0</dm_dead_stem_init>
      <dm_dead_root_init description="Initial Dead Root weight (kg/ha)">0</dm_dead_root_init>
      <dm_green_leaf_init description="Initial Green Leaf weight (p135, kg/ha)">0</dm_green_leaf_init>
      <dm_green_stem_init description="Initial Green Stem weight (p136, kg/ha)">0</dm_green_stem_init>
      <dm_green_root_init description="Initial Green Root weight (kg/ha)">0</dm_green_root_init>
      <basal_area_init description="Initial Basal area of tussocks (p005, %)">0.5</basal_area_init>
      <acc_trans_for_n_init description="Initial accumulated transpiration, used for N uptake (mm)">0</acc_trans_for_n_init>
      <acc_growth_for_n_init description="Initial accumulated growth, used for N uptake (kg/ha)">0</acc_growth_for_n_init>
      <category name="Soil Properties" />
      <max_n_avail description="Limit to total N (p099, kg/year)">15</max_n_avail>
      <max_n_avail_dist description="Distribution of N in profile">0.8 0.1 0.05  0.05  0.0 0.0  0.0</max_n_avail_dist>
      <ll description="Lower limit (ll) of water extraction (mm/mm)">.230     .240    .240    .250 .260 .270 .280</ll>
      <kl description="Rate of water extraction (kl)">0.5      0.5      0.5    0.5  0.0  0.0  0.0</kl>
      <kl2rlv>1.0</kl2rlv>
      <category name="Parameter values" />
      <crop_type>grass</crop_type>
      <uptake_source>calc</uptake_source>
      <height_max description="Maximum canopy height (mm)">1200</height_max>
      <hgt_vpd_screen description="Height at which surface effects on vpd are 0 (p095*10, mm)">200</hgt_vpd_screen>
      <height_1000kg description="Sward Height per tonne (p096*10, mm)">100</height_1000kg>
      <et_use_efficiency description="Evapotranspiration use efficiency used in BA calc (p288, kg/ha/mm) (p288)">0</et_use_efficiency>
      <frac_leaf2total description="Fraction of total dm produced that goes into leaf pool (p123,0-1)">0.5</frac_leaf2total>
      <yld_cover_slope description="Shape of exponential curve relating yield and cover">0.693147</yld_cover_slope>
      <yld_fpc50 description="yld_fpc50 (p046)">1000</yld_fpc50>
      <yld_cov50 description="Yield transpiring at 50% of pan evap (p045)">1000</yld_cov50>
      <yld_tcov50 description="Tsdm yield at which cover for runoff is 50% (p271)">1000</yld_tcov50>
      <swi_fullgreen description="Min soil water for 100% green (p009)">0.1</swi_fullgreen>
      <swi_nogrow description="SWI when growth stops (swi_nogrow)">0.4</swi_nogrow>
      <pot_regrow description="Max rate regrowth from tussocks (p006, kg/ha/unit grass ba)">3.0</pot_regrow>
      <te_std description="Transpiration efficiency at vpd=20mb (p007)">10.0</te_std>
      <rad_factor>8.97</rad_factor>
      <residual_plant_N description="Always this much n in plant (p097, kg/ha)">5</residual_plant_N>
      <litter_n description="N conc of detached stems and roots ((p110-p111)/2)">0.3</litter_n>
      <n_uptk_per100 description="Nitrogen uptake per 100mm water (p098, kg/ha)">5</n_uptk_per100>
      <frost_start description="Minimum screen temp at which green cover=100% (p125, oC)">2</frost_start>
      <frost_kill description="Minimum screen temp at which frost kills all green (p011, oC)">0</frost_kill>
      <death_slope description="Rate of green death per soil water (p051)">0.013</death_slope>
      <death_intercept description="Background death rate (p010)">0.002</death_intercept>
      <leaf_death_ratio description="Proportion of leaf death to total death (p133)">1</leaf_death_ratio>
      <stem_death_ratio description="Proportion of stem death to total death (p134)">1</stem_death_ratio>
      <n_conc_dm_crit description="Level of plant N at which no N stress occurs (p102)">2.5</n_conc_dm_crit>
      <n_conc_dm_min description="Level of soil N at which no N stress occurs (p101)">0.4</n_conc_dm_min>
      <n_conc_dm_max description="Level of soil N at which soil N to high for growth (p100)">0.5</n_conc_dm_max>
      <stem_thresh description="stem_thresh (p124)">0</stem_thresh>
      <detach_dryseason description="detach_dryseason: root, leaf, stem">0.0   0.002     0.002</detach_dryseason>
      <detach_wetseason description="detach_wetseason: root, leaf, stem">0.0   0.002     0.002</detach_wetseason>
      <category name="Date resets" />
      <day_start_summer>335</day_start_summer>
      <day_end_summer>59</day_end_summer>
      <acc_et_reset>273</acc_et_reset>
      <acc_growth_reset>273</acc_growth_reset>
      <trans_for_n_reset>273</trans_for_n_reset>
      <growth_for_n_reset>273</growth_for_n_reset>
      <day_start_wet>274</day_start_wet>
      <day_start_dry>91</day_start_dry>
      <enr_a_coeff>7.4</enr_a_coeff>
      <enr_b_coeff>0.2</enr_b_coeff>
    </grasp>
    <horsegram />
    <lablab />
    <lucerne />
    <lupin />
    <maize />
    <millet />
    <mucuna />
    <mungbean />
    <navybean />
    <oats />
    <peanut />
    <pigeonpea />
    <rice />
    <root />
    <seedling />
    <slurp />
    <sorghum />
    <soybean />
    <stylo />
    <sugar />
    <sunflower />
    <SweetCorn />
    <SweetSorghum />
    <weed />
    <wheat />
  </folder>
  <folder name="Soil related">
    <InitWater>
      <percentmethod>
        <percent>1</percent>
        <distributed>filled from top</distributed>
      </percentmethod>
    </InitWater>
    <InitNitrogen>
      <profile>
        <layer>
          <no3>6.503</no3>
          <nh4>0.599</nh4>
          <thickness>150</thickness>
        </layer>
        <layer>
          <no3>2.101</no3>
          <nh4>0.100</nh4>
          <thickness>150</thickness>
        </layer>
        <layer>
          <no3>2.101</no3>
          <nh4>0.100</nh4>
          <thickness>300</thickness>
        </layer>
        <layer>
          <no3>1.701</no3>
          <nh4>0.100</nh4>
          <thickness>300</thickness>
        </layer>
        <layer>
          <no3>1.701</no3>
          <nh4>0.100</nh4>
          <thickness>300</thickness>
        </layer>
        <layer>
          <no3>1.701</no3>
          <nh4>0.100</nh4>
          <thickness>300</thickness>
        </layer>
        <layer>
          <no3>1.701</no3>
          <nh4>0.100</nh4>
          <thickness>300</thickness>
        </layer>
        <layer>
          <no3>1.701</no3>
          <nh4>0.100</nh4>
          <thickness>300</thickness>
        </layer>
        <layer>
          <no3>1.701</no3>
          <nh4>0.100</nh4>
          <thickness>300</thickness>
        </layer>
        <layer>
          <no3>1.701</no3>
          <nh4>0.100</nh4>
          <thickness>300</thickness>
        </layer>
        <layer>
          <no3>1.701</no3>
          <nh4>0.100</nh4>
          <thickness>300</thickness>
        </layer>
      </profile>
    </InitNitrogen>
    <surfaceom name="Surface Organic Matter">
      <PoolName description="Organic Matter pool name">wheat_stubble</PoolName>
      <type type="list" description="Organic Matter type" listvalues="bambatsi,barley,base_type,broccoli,camaldulensis,canola,centro,chickpea,chikenmanure_base,cm,cmA,cmB,constants,cotton,cowpea,danthonia,fababean,fieldpea,fym,gbean,globulus,goatmanure,grandis,grass,horsegram,inert,lablab,lentil,lucerne,lupin,maize,manB,manure,medic,millet,mucuna,nativepasture,navybean,oats,orobanche,peanut,pigeonpea,potato,rice,sorghum,soybean,stylo,sugar,sunflower,sweetcorn,sweetsorghum,tillage,tithonia,vetch,weed,wheat">wheat</type>
      <mass description="Initial surface residue (kg/ha)">1000.</mass>
      <cnr description="C:N ratio of initial residue">80.0</cnr>
      <cpr description="C:P ratio of initial residue (optional)">
      </cpr>
      <standing_fraction description="Fraction of residue standing">0.0</standing_fraction>
    </surfaceom>
    <fertiliser name="Fertiliser" />
    <phos name="Phosphorus" />
    <soiltemp name="Soil Temperature">
      <bound_layer_cond description="boundary layer conductance">20.0</bound_layer_cond>
      <clay description="proportion of clay">0.1  0.1  0.1  0.1  0.1  0.2  0.3</clay>
      <soil_temp description="Initial soil temperature">15 15 15 15 15 15 15</soil_temp>
    </soiltemp>
    <cl name="Cl">
      <d0 description="Cl diffusivity in water (mm2/d)">108</d0>
      <layers description="Cl in each layer (kg/ha)">491 62 1490 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000</layers>
    </cl>
    <erosion name="Erosion">
      <model description="Model Name">freebairn</model>
      <slope description="Slope of plot in percent (%)">6.5</slope>
      <slope_length description="Length of plot (m)">60.0</slope_length>
      <k_factor description="Soil erodibility factor (t/ha/EI 30 )">0.4</k_factor>
      <p_factor description="Supporting practise factor (unitless)">1.0</p_factor>
      <bed_depth description="Depth to bedrock (mm)">1900</bed_depth>
      <profile_reduction type="list" listvalues="off,on" description="Profile Reduction">off</profile_reduction>
      <profile_layer_merge description="Fraction of original size in which the lowest layer is merged into the layer above (0-1)">0.05</profile_layer_merge>
      <minimum_depth description="If the profile erodes to this depth, the simulation is stopped (mm)">100.0</minimum_depth>
    </erosion>
  </folder>
  <clock name="Clock">
    <start_date name="start_date" description="Select the start date of the simulation" type="date">1/01/1988</start_date>
    <end_date name="end_date" description="Select the end date of the simulation" type="date">31/12/1988</end_date>
  </clock>
  <clock name="ClockAllYears" />
  <outputfile name="Outputfile">
    <variables name="Variables">
      <variable name="dd/mm/yyyy as Date" description="Date (dd/mm/yyyy)" array="?" />
    </variables>
    <events name="Reporting Frequency">
      <event name="Daily" description="End of daily simulation time step" />
    </events>
  </outputfile>
  <summaryfile name="Summaryfile">
    <filename name="filename">sample.sum</filename>
  </summaryfile>
  <folder name="Meteorological">
    <metfile name="met">
      <filename name="filename">%apsuite\apsim\met\sample\dalby.met</filename>
    </metfile>
    <manager name="ClimateControl">
      <ui>
        <category description="Climate Control Window" />
        <date1 type="ddmmmdate" description="Enter window START date (dd-mmm) : ">1-jan</date1>
        <date2 type="ddmmmdate" description="Enter window END date (dd-mmm) : ">31-dec</date2>
        <category description="Climate Change Parameters" />
        <MaxtChange type="text" description="Change in maximum temperature (oC):">1</MaxtChange>
        <MintChange type="text" description="Change in minimum temperature (oC):">1</MintChange>
        <RainChange type="text" description="Relative change in daily rainfall (%):">-10</RainChange>
        <RadnChange type="text" description="Relative change in daily radiation (%):">0</RadnChange>
        <CO2 type="text" description="Atmospheric CO2 Concentration (ppm)">350</CO2>
      </ui>
      <script name="prenewmet">
        <text>
!  Adjust daily temperatures, rainfall and radiation up or down according to user-defined amounts
! To apply different levels of climate control to different times of year add multiple copies of this logic into your simulation and change the window.

if (date_within('[date1], [date2]') = 1) then
   maxt = maxt + [MaxtChange]
   mint = mint + [MintChange]
   rain = rain + rain * [RainChange] / 100
   radn = radn + radn * [RadnChange] / 100
   co2 = [CO2]
 endif
</text>
        <event>prenewmet</event>
      </script>
      <script name="Init">
        <text>co2 = [CO2]</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Climate Change Yearly Increase">
      <ui>
        <category description="Climate Control Year" />
        <startyear type="text" description="Enter year to start climate change from : ">1990</startyear>
        <category description="Yearly Increase in Climate Change Parameters" />
        <MaxtChange type="text" description="Change in maximum temperature (oC):">0.01</MaxtChange>
        <MintChange type="text" description="Change in minimum temperature (oC):">0.01</MintChange>
        <RainChange type="text" description="Relative change in daily rainfall (%):">0</RainChange>
        <RadnChange type="text" description="Relative change in daily radiation (%):">0</RadnChange>
        <CO2 type="text" description="Atmospheric CO2 Concentration (ppm)">1</CO2>
      </ui>
      <script name="prenewmet">
      <text><![CDATA[
!  Yearly increase the daily temperatures, rainfall and radiation up or down according to user-defined amounts

if (year > [startyear]) then

  changemultiplier = year - startyear
   maxt = maxt + ([MaxtChange] * changemultiplier)
   mint = mint + ([MintChange]  * changemultiplier)
   rain = rain + rain * (([RainChange] / 100)  * changemultiplier)
   radn = radn + radn * (([RadnChange] / 100)  * changemultiplier)
   co2 = ([CO2]  * changemultiplier)
 endif
]]></text>
        <event>prenewmet</event>
      </script>
    </manager>
    <patchinput>
      <filename name="filename">
      </filename>
    </patchinput>
    <input />
    <siloinput>
      <station_number>
      </station_number>
    </siloinput>
    <micromet name="Micromet">
      <soilalbedo name="soilalbedo">0.23</soilalbedo>
      <a_interception name="a_interception">0.0</a_interception>
      <b_interception name="b_interception">0.0</b_interception>
      <c_interception name="c_interception">0.0</c_interception>
      <d_interception name="d_interception">0.0</d_interception>
    </micromet>
    <eo>
      <vpd_fac description="Tanner Sinclair VPD factor for net positive radiation">0.75</vpd_fac>
      <albedo description="Soil albedo (0-1). Used for net radiation">0.13</albedo>
      <max_albedo description="Albedo at 100% green crop cover (0-1). Used for net radiation">0.23</max_albedo>
      <z0soil description="Soil z0 (used when lai=0) (mm). This is the minimum that z0 may be">3</z0soil>
      <default_wind description="default wind speed (km/day) if not found in system (eg met or manager)">60.0</default_wind>
      <default_pa description="Default atmospheric pressure (hPa) if not found in met or manager">1000</default_pa>
      <default_instrum_height description="Default instrument height (mm) if not found in system">2000</default_instrum_height>
      <disp_instrum description="Zero plane displacement at instrument site (mm)">37.0</disp_instrum>
      <z0_instrum description="Roughness length at instrument site (mm)">4.0</z0_instrum>
      <extinct_coef description="Extinction coefficient for adjustment of Eo_pm to obtain">0.8</extinct_coef>
      <eo_plant_method type="list" listvalues="eo_transpiration,eo_pm,eo_penman,eo_penman_x_cover,eo_penman_d_x_cover,eo_pm_x_cover,eo_pm_x_kfunction,eo_radn_x_kfunction,eo_priestly_taylor,eo_ritchie" description="Method used to calculate plant transpiration (eo_plant)">eo_penman_d_x_cover</eo_plant_method>
      <wind_day_fraction description="Optional fraction of wind in daylight hours (day:night is 2:1)">0.66</wind_day_fraction>
      <adjustment_factor description="Calibration or crop factor">1.0</adjustment_factor>
      <wind_multiplier description="Multiplier for wind to alter wind run for shelter effects (-)">1.0</wind_multiplier>
    </eo>
    <soi>
      <filename>%apsuite\soi\phases.soi</filename>
    </soi>
    <ocean_data name="Ocean data">
      <filename name="filename">%apsuite\soi\ocean_data.dat</filename>
    </ocean_data>
    <gcm_data name="GCM data">
      <filename name="filename">%apsuite\soi\gcm_data.dat</filename>
    </gcm_data>
  </folder>
  <folder name="Management">
    <YPCalc />
    <RotPlot name="Rotation Management">
      <rotnode name="Rotations">
        <uiscript>
          <![CDATA[
  package req struct
  package req tdom
  trace remove variable XMLDoc read setXML

  # Get the value of one of our parameters
  proc getValue {id thing} {
     foreach node [$id childNodes] {
        if {[string equal -nocase [$node nodeName] $thing]} {
           return [$node text]
        }
     }
     return ""
  }

  # Get the values of one of our parameters
  proc getValues {id thing} {
     set result {}
     foreach node [$id childNodes] {
        if {[string equal -nocase [$node nodeName] $thing]} {
           lappend result [$node text]
        }
     }
     return $result
  }


  # return the tag of an item near (x,y)
  proc getTag {c x y} {
     set tag [lindex [$c find overlapping [expr $x-5] [expr $y-5] [expr $x+5] [expr $y+5]] end]
     if {[llength $tag] > 0} {
        foreach tag [$c gettags $tag] {
           if {$tag != "current"} {
               return $tag
           }
        }
     }
     return {}
  }

  # Select an object near (x,y)
  proc select {w x y} {
     upvar #0 $w cfg
     if {$cfg(selected) != {}} {
        foreach {type name} [split $cfg(selected) :] {break}
        if {$type == "node"} {
            catch {$cfg(c) itemconf $cfg(selected) -outline black -width 1}
        } elseif {$type == "arc"} {
            catch {$cfg(c) itemconf $cfg(selected) -fill black -width 1}
        }
     }
     ## set x [$cfg(c) canvasx $x]; set y [$cfg(c) canvasy $y]
     set tag [getTag $cfg(c) $x $y]
     if {$tag != {}} {
        set cfg(selected) $tag
        set cfg(selectedX) $x
        set cfg(selectedY) $y
        foreach {type name} [split $tag :] {break}
        if {$type == "node"} {
          catch {$cfg(c) itemconf $tag -outline blue -width 3}
        } elseif {$type == "arc"} {
          catch {$cfg(c) itemconf $tag -fill blue -width 3}
        }
        showSelection $w $type $name
     } else {
        set cfg(selected) {}
        set cfg(selectedX) {}
        set cfg(selectedY) {}
        set cfg(message) "No items selected."
        showSelection $w help dummy
     }
  }

  # Move an already selected object
  proc move {w x y} {
     upvar #0 $w cfg
     if {$cfg(selected) != {}} {
        set dx [expr {$x - $cfg(selectedX)}]
        set dy [expr {$y - $cfg(selectedY)}]
        set cfg(selectedX) $x
        set cfg(selectedY) $y
        foreach {type name} [split $cfg(selected) :] {break}
        if {$type == "node"} {
           $cfg(c) move $cfg(selected) $dx $dy
           foreach {x1 y1 x2 y2} [$cfg(c) coords $cfg(selected)] {}
           foreach what {x1 y1 x2 y2} {$cfg(g) node set $name $what [set $what]}
           foreach arc [$cfg(g) arcs -adj $name] {
               fixupArrow $w arc:$arc "node:[$cfg(g) arc source $arc]" "node:[$cfg(g) arc target $arc]"
           }
        } elseif {$type == "arc"} {
           set coords [$cfg(c) coords $cfg(selected)]
           set newx [expr $dx + [lindex $coords 2]]
           set newy [expr $dy + [lindex $coords 3]]
           $cfg(g) arc set $name x $newx
           $cfg(g) arc set $name y $newy
           fixupArrow $w $cfg(selected) "node:[$cfg(g) arc source $name]" "node:[$cfg(g) arc target $name]"
        }
     }
  }


  #Return a point on the edge of the node on a line to (x,y)
  # NB. canvas origin at upper left corner
  # Used to find arrow positions between nodes
  proc findEdge {w x y node} {
     upvar #0 $w cfg
     set maxy [$w cget -height]

     # center of node
     set nc [$cfg(c) coords $node]
     set xn [expr ([lindex $nc 2] + [lindex $nc 0])/2.0]
     set yn [expr $maxy - ([lindex $nc 3] + [lindex $nc 1])/2.0]

     # angle of midline
     set a 0.0
     catch {set a [expr atan((($maxy-$y)-$yn)/($x-$xn))]}

     # Cheat - assume its always a circle and just take mid point of box
     set r [expr abs(([lindex $nc 2] - [lindex $nc 0])/2.0)]
     set dx [expr $x-$xn]
     set dy [expr ($maxy-$y)-$yn]
     if {$dx < 0} {
       set xe [expr $xn - $r * cos($a)]
       set ye [expr $yn - $r * sin($a)]
     } else {
       set xe [expr $xn + $r * cos($a)]
       set ye [expr $yn + $r * sin($a)]
     }
     return [list $xe [expr $maxy - $ye]]
  }

  # Set the arc coordinates between 2 nodes.
  proc fixupArrow {w arc srcNode destNode} {
     upvar #0 $w cfg
     set arc [lindex [split $arc ":"] 1]
     set xm [$cfg(g) arc get $arc x]
     set ym [$cfg(g) arc get $arc y]

     set p0 [findEdge $w $xm $ym $srcNode]
     set p1 [findEdge $w $xm $ym $destNode]

     $cfg(c) coords arc:$arc [concat $p0 $xm $ym $p1]
     #set cfg(message) "$arc = '[$cfg(c) coords arc:$arc]'"
     #set cfg(message) "$arc = [concat $p0 $xm $ym $p1]"
  }

  # Right button click - post a context sensitive menu
  proc action {w x y} {
     upvar #0 $w cfg
     set tag [getTag $cfg(c) $x $y]
     if {$cfg(selected) == {}} {
        postNewNodeMenu $w $x $y
     } elseif {$cfg(selected) != {} && "$tag" == $cfg(selected)} {
        postChangeMenu $w $tag $x $y
     } elseif {$cfg(selected) != {} && "$tag" != {} && "$tag" != $cfg(selected)} {
        postAddArcMenu $w $cfg(selected) $tag $x $y
     }
  }

  proc postNewNodeMenu {w x y} {
     upvar #0 $w cfg
     if {[winfo exists $cfg(c).newNodeMenu]} {destroy $cfg(c).newNodeMenu}
     menu $cfg(c).newNodeMenu -tearoff 0
     $cfg(c).newNodeMenu add command -label "Add New State" -command "addNewNode $w $x $y"
     tk_popup $cfg(c).newNodeMenu [expr [winfo rootx $cfg(c)]+$x] [expr [winfo rooty $cfg(c)]+$y]
  }

  proc addNewNode {w x y} {
     upvar #0 $w cfg
     set n 0; while {[$cfg(g) node exists n$n]} {incr n}; set n "n$n"
     $cfg(g) node insert $n
     $cfg(g) node set $n x1 [set x1 [expr $x-50]]
     $cfg(g) node set $n y1 [set y1 [expr $y-50]]
     $cfg(g) node set $n x2 [set x2 [expr $x+50]]
     $cfg(g) node set $n y2 [set y2 [expr $y+50]]
     $cfg(g) node set $n fill brown
     $cfg(g) node set $n name $n
     $cfg(g) node set $n desc  "New state"
     $cfg(g) node set $n alias "newnode"

     $cfg(c) create oval $x1 $y1 $x2 $y2 -fill brown -tags node:$n
     set mx($n) [expr ($x1 + $x2) / 2.0]; set my($n) [expr ($y1 + $y2) / 2.0]
     $cfg(c) create text $mx($n) $my($n) -text "$n" -anchor center -tags node:$n

     select $w $x $y
  }

  proc deleteNode {w tag} {
     upvar #0 $w cfg
     set node [lindex [split $tag :] 1]
     foreach arcTag [$cfg(g) arcs -adj $node] {
        $cfg(c) delete arc:$arcTag
     }
     $cfg(c) delete $tag
     $cfg(g) node delete $node
     set cfg(selected) {}
     select $w 0 0
  }

  proc postAddArcMenu {w srcTag destTag x y} {
     upvar #0 $w cfg
     catch {destroy $cfg(c).addArcMenu}
     menu $cfg(c).addArcMenu -tearoff 0
     set srcName [lindex [split $srcTag :] 1]; set destName [lindex [split $destTag :] 1]

     if {![catch {set src [$cfg(g) node get $srcName name]; set dest [$cfg(g) node get $destName name]}]} {
        $cfg(c).addArcMenu add command \
            -label "Add arc from $src to $dest" \
            -command "addNewArc $w $srcTag $destTag"
        tk_popup $cfg(c).addArcMenu [expr [winfo rootx $cfg(c)]+$x] [expr [winfo rooty $cfg(c)]+$y]
     }
  }

  proc addNewArc {w srcTag destTag} {
     upvar #0 $w cfg
     set n 0; while {[$cfg(g) arc exists arc$n]} {incr n}
     set arc "arc$n"
     set c1 [$cfg(c) coords $srcTag]
     set x1 [expr ([lindex $c1 0] + [lindex $c1 2])/2]
     set y1 [expr ([lindex $c1 1] + [lindex $c1 3])/2]
     set c2 [$cfg(c) coords $destTag]
     set x2 [expr ([lindex $c2 0] + [lindex $c2 2])/2]
     set y2 [expr ([lindex $c2 1] + [lindex $c2 3])/2]
     set mx [expr ($x1 + $x2) / 2.0]; set my [expr ($y1 + $y2) / 2.0]
     $cfg(c) create line $x1 $y1 $mx $my $x2 $y2 -smooth bezier -tags arc:$arc -arrow last -arrowshape {15 25 10}

     $cfg(g) arc insert [lindex [split $srcTag :] 1] [lindex [split $destTag :] 1] $arc
     $cfg(g) arc lappend $arc rules   {}
     $cfg(g) arc lappend $arc actions {}
     $cfg(g) arc set $arc x $mx
     $cfg(g) arc set $arc y $my
  }

  proc deleteArc {w tag} {
     upvar #0 $w cfg
     $cfg(c) delete $tag
     $cfg(g) arc delete [lindex [split $tag :] 1]
  }

  proc postChangeMenu {w tag x y} {
     upvar #0 $w cfg
     set isNode [string match "node*" $tag]
     catch {destroy $cfg(c).postChangeMenu}
     menu $cfg(c).postChangeMenu -tearoff 0
     if {$isNode} {
        $cfg(c).postChangeMenu add command -label "Delete" -command "deleteNode $w $tag"
     } else {
        $cfg(c).postChangeMenu add command -label "Delete" -command "deleteArc $w $tag"
     }
     tk_popup $cfg(c).postChangeMenu  [expr [winfo rootx $cfg(c)]+$x] [expr [winfo rooty $cfg(c)]+$y]
  }

  # Create the UI for the current object and fill it out
  proc showSelection {w type name} {
     upvar #0 $w cfg
     if {"$cfg(s)" != "$w.$type"} { setup_$type $w $name}
     show_$type $w
  }

  proc setup_help {w junk} {
     upvar #0 $w cfg
     catch {destroy $cfg(s)}
     set f [set cfg(s) [text $w.help -width 70 -height 10]]
     $f insert end {<left-click>: select a node or arc.
  <right-click>:  shows a context-sensitive  menu.

  Once a node/arc is selected, it can be dragged to a new position.

  Nodes are created by right-clicking on a blank area.

  Arcs are created by firstly selecting a source node, then right-
  clicking over a target node.
  }
     grid $f -row 3 -column 1 -sticky ew
  }
  proc show_help {w} {}

  # UI for node editing
  proc setup_node {w name} {
     upvar #0 $w cfg
     catch {destroy $cfg(s)}
     set f [set cfg(s) [frame $w.node]]
     label $f.l1 -text "Name"
     entry $f.e1 -textvariable $w\(name\) -width 12 -validate key -vcmd {string is wordchar %P}
     label $f.l2 -text "Alias"
     entry $f.e2 -textvariable $w\(alias\) -width 12 -validate key -vcmd {string is wordchar %P}
     label $f.l3 -text "Description"
     entry $f.e3 -textvariable $w\(desc\) -width 40
     label $f.l4 -text "Colour"
     entry $f.e4 -textvariable $w\(fill\) -width 12

     frame $f.b
     button $f.b.apply -text Apply -command "set_node $w" -state disabled
     button $f.b.revert -text Revert -command "show_node $w" -state disabled
     set cfg(buttons) [list $f.b.apply $f.b.revert]
     foreach e [list $f.e1 $f.e2 $f.e3 $f.e4] {
        bind $e  <Any-KeyRelease> "+armButtons $w"
        bind $e  <Key-Return> "+set_node $w"
     }

     grid $f.l1 -row 1 -column 1 -sticky w
     grid $f.e1 -row 1 -column 2 -sticky w
     grid $f.l2 -row 2 -column 1 -sticky w
     grid $f.e2 -row 2 -column 2 -sticky w
     grid $f.l3 -row 3 -column 1 -sticky w
     grid $f.e3 -row 3 -column 2 -sticky ew
     grid $f.l4 -row 4 -column 1 -sticky w
     grid $f.e4 -row 4 -column 2 -sticky w
     grid $f.b.apply -row 1 -column 1 -sticky w -padx 20
     grid $f.b.revert -row 1 -column 2 -sticky w -padx 20
     grid $f.b -row 5 -column 1 -sticky ew
     grid $f -row 3 -column 1 -sticky ew
  }

  proc show_node {w} {
     upvar #0 $w cfg
     set node [lindex [split $cfg(selected) :] 1]
     set cfg(name) [$cfg(g) node get $node name]
     set cfg(alias) [$cfg(g) node get $node alias]
     set cfg(desc) [$cfg(g) node get $node desc]
     set cfg(fill) [$cfg(g) node get $node fill]

     set cfg(message) "State $cfg(name)"
     disarmButtons $w
  }

  proc set_node {w} {
     upvar #0 $w cfg
     set node [lindex [split $cfg(selected) :] 1]

     # Make the node name unique: append a "_1", "_2" etc.. if needed.
     set candidate $cfg(name); set found 1
     while {$found} {
        set found 0
        foreach otherNode [$cfg(g) nodes] {
           if {"$node" != "$otherNode" &&
               [string equal [$cfg(g) node get $otherNode name] $candidate]} {
              set found 1
           }
        }
        if {$found} {
           set num [lindex [split $candidate "_"] end]
           if {! [string is integer -strict $num]} {
             set candidate "${candidate}_1"
           } else {
             set root [join [lrange [split $candidate "_"] 0 end-1] "_"]
             set candidate "${root}_[expr 1+$num]"
           }
        }
     }

     $cfg(g) node set $node name [set cfg(name) $candidate]
     $cfg(g) node set $node alias $cfg(alias)
     $cfg(g) node set $node desc $cfg(desc)
     $cfg(g) node set $node fill $cfg(fill)
     foreach id [$cfg(c) find withtag node:$node] {
       if {[$cfg(c) type $id] == "text"}  {$cfg(c) itemconf $id -text $cfg(name)}
       if {[$cfg(c) type $id] == "oval"}  {$cfg(c) itemconf $id -fill $cfg(fill)}
     }
     disarmButtons $w
  }

  proc setup_arc {w name} {
     upvar #0 $w cfg
     catch {destroy $cfg(s)}
     set f [set cfg(s) [frame $w.arc]]
     label $f.l1 -text "Rules"
     set cfg(rulesW) [text $f.rules -height 4 -wrap none  -yscrollcommand "$f.rsbar set"]
     scrollbar $f.rsbar -orient vertical -command "$f.rules yview"
     label $f.l2 -text "Actions"
     set cfg(actionsW) [text $f.actions -height 3 -wrap none  -yscrollcommand "$f.asbar set"]
     scrollbar $f.asbar -orient vertical -command "$f.actions yview"

     frame $f.b
     button $f.b.apply -text Apply -command "set_arc $w" -state disabled
     button $f.b.revert -text Revert -command "show_arc $w" -state disabled
     set cfg(buttons) [list $f.b.apply $f.b.revert]

     foreach t [list $cfg(actionsW) $cfg(rulesW)] {
        bind $t  <Any-KeyRelease>  "+armButtons $w "
     }
     grid $f.l1 -row 1 -column 1 -sticky w
     grid $f.rules -row 2 -column 1 -sticky ew
     grid $f.rsbar -row 2 -column 2 -sticky w
     grid $f.l2 -row 3 -column 1 -sticky w
     grid $f.actions -row 4 -column 1 -sticky ew
     grid $f.asbar -row 3 -column 2 -sticky w -rowspan 2
     grid $f.b.apply -row 1 -column 1 -sticky w -padx 20
     grid $f.b.revert -row 1 -column 2 -sticky w -padx 20
     grid $f.b -row 5 -column 1 -sticky ew

     grid $f -row 3 -column 1 -sticky ew
  }
  proc show_arc {w} {
     upvar #0 $w cfg
     set arc [lindex [split $cfg(selected) :] 1]

     $cfg(rulesW) delete 0.0 end
     foreach rule [$cfg(g) arc get $arc rules] {
        $cfg(rulesW) insert end "$rule\n"
     }
     $cfg(actionsW) delete 0.0 end
     foreach action [$cfg(g) arc get $arc actions] {
        $cfg(actionsW) insert end "$action\n"
     }
     set src [$cfg(g) node get [$cfg(g) arc source $arc] name]
     set dest [$cfg(g) node get [$cfg(g) arc target $arc] name]
     set cfg(message) "Transition from $src to $dest"
     disarmButtons $w
  }

  proc set_arc {w} {
     upvar #0 $w cfg
     set arc [lindex [split $cfg(selected) :] 1]

     $cfg(g) arc set $arc rules {}
     foreach rule [split [$cfg(rulesW) get 0.0 end] "\n"] {
        if {$rule != {}} {$cfg(g) arc lappend $arc rules $rule}
     }
     $cfg(g) arc set $arc actions {}
     foreach action [split [$cfg(actionsW) get 0.0 end] "\n"] {
        $cfg(g) arc lappend $arc actions $action
     }
     disarmButtons $w
  }

  proc disarmButtons {w} {
     upvar #0 $w cfg
     foreach b $cfg(buttons) { $b config -state disabled }
  }
  proc armButtons {w} {
     upvar #0 $w cfg
     foreach b $cfg(buttons) { $b config -state active }
  }

  # Save the graph to an XML tree. Makes both our node/ arc  objects, and an invisible rule
  # for the manager.
  proc saveGraph {w} {
     upvar #0 $w cfg

     if {!$cfg(setupOk)} {error "Initialisation failed - Not saving"}

     set x "<tclui name=\"[$cfg(docroot) getAttribute name]\">\n"
     append x "<uiscript><!\[CDATA\[[getValue $cfg(docroot) uiscript]\]\]></uiscript>\n"
     set rule "<rule name=\"Init rule\" invisible=\"yes\" condition=\"init\">\n"
     append rule "<!\[CDATA\[package require struct\n"
     append rule "::struct::graph stateGraph\n"

     foreach node [$cfg(g) nodes] {
        append x "<node>\n"
        foreach key [$cfg(g) node keys $node] {
           set value [$cfg(g) node get $node $key]
           append x " <$key>$value</$key>\n"
        }
        append x "</node>\n"
        append rule "stateGraph node insert \"[$cfg(g) node get $node name]\"\n"
        append rule "set alias([$cfg(g) node get $node name]) \"[$cfg(g) node get $node alias]\"\n"
        append rule "set colour([$cfg(g) node get $node name]) \"[$cfg(g) node get $node fill]\"\n"
     }
     foreach arc [$cfg(g) arcs] {
        append x "<arc><name>$arc</name>\n"
        set sourceNodeName [$cfg(g) node get [$cfg(g) arc source $arc] name]
        append x " <source>$sourceNodeName</source>\n"
        set targetNodeName [$cfg(g) node get [$cfg(g) arc target $arc] name]
        append x " <target>$targetNodeName</target>\n"
        append rule "stateGraph arc insert \"$sourceNodeName\" \"$targetNodeName\" \"$arc\"\n"

        foreach {key value} [$cfg(g) arc getall $arc] {
           if {$key != "rules" && $key != "actions"} {
              append x " <$key>$value</$key>\n"
           } else {
              foreach thing [$cfg(g) arc get $arc $key] {
                 append rule "stateGraph arc lappend \"$arc\" $key \{$thing\}\n"
                 set thing [string map {\< "&lt;"  \> "&gt;"
                                        \& "&amp;" \" "&quot;"
                                        \[ "&#91;" \] "&#93;"} $thing]
                 append x " <$key>$thing</$key>\n"
              }
           }
        }
        append x "</arc>\n"
     }

     append x "$rule\]\]></rule>\n"
     append x "</tclui>\n"

     return $x
  }

  # Read the graph from an XML tree
  proc openGraph {w} {
     upvar #0 $w cfg
     catch {$cfg(g) destroy}
     catch {g destroy}

     set errorsFound 0

     global XMLDoc
     set cfg(doc) [dom parse $XMLDoc]
     set cfg(docroot) [$cfg(doc) documentElement]

     set cfg(g) [::struct::graph g]
     foreach node [$cfg(docroot) selectNodes //node] {
        $cfg(g) node insert [set nodeName [getValue $node name]]
        $cfg(g) node set $nodeName name $nodeName
        foreach {what default} {x1 100 x2 200 y1 100 y2 200 fill purple desc "No description" alias zzz} {
           if {[set value [getValue $node $what]] == ""} {
              $cfg(g) node set $nodeName $what $default
           } else {
              $cfg(g) node set $nodeName $what $value
           }
        }
     }

     foreach arc [$cfg(docroot) selectNodes //arc] {
        set arcName [getValue $arc name]
        set sourceNode [getValue $arc source]
        set targetNode [getValue $arc target]
        if {[$cfg(g) node exists $sourceNode] && [$cfg(g) node exists $targetNode]} {
           $cfg(g) arc insert $sourceNode $targetNode $arcName
           foreach {what default} {x 300 y 300} {
              if {[set value [getValue $arc $what]] == ""} {
                  $cfg(g) arc set $arcName $what $default
              } elseif {$what != "name"} {
                  $cfg(g) arc set $arcName $what $value
              }
           }
           foreach {what} {rules actions} {
              foreach value [getValues $arc $what] {
                 set value [string map {"&lt;"  \<  "&gt;" \>
                                        "&amp;" \&  "&quot;"  \"
                                        "&#91;" \[  "&#93;" \] } $value]

                 $cfg(g) arc lappend $arcName $what $value
              }
           }
        } else {
           tk_messageBox -title "Whoops!!" -message "source ($sourceNode) and/or target ($targetNode) is missing??" -type ok
           set errorsFound 1
        }
     }
     set cfg(setupOk) [expr ! $errorsFound]
  }

  # Create a graph on a canvas
  proc createGraph {w} {
     upvar #0 $w cfg
     foreach id [$cfg(c) find all] {$cfg(c) delete $id}
     foreach n [$cfg(g) nodes] {
        foreach what {x1 y1 x2 y2 name fill} {set $what [$cfg(g) node get $n $what]}
        $cfg(c) create oval $x1 $y1 $x2 $y2 -fill $fill -tags node:$n
        set mx($n) [expr ($x1 + $x2) / 2.0]; set my($n) [expr ($y1 + $y2) / 2.0]
        $cfg(c) create text $mx($n) $my($n) -text $name -anchor center -tags node:$n
     }

     foreach a [$cfg(g) arcs] {
        set n1 [$cfg(g) arc source $a]
        set n2 [$cfg(g) arc target $a]
        $cfg(c) create line 0 0 0 0 -smooth bezier -tags arc:$a -arrow last -arrowshape {15 25 10}
        fixupArrow $w arc:$a "node:$n1" "node:$n2"
     }

     bind $cfg(c) <Button-1>  "+select $w %x %y"
     bind $cfg(c) <B1-Motion> "+move $w %x %y"
     bind $cfg(c) <Button-3>  "+action $w %x %y"
     set cfg(selected) {}
     showSelection $w help dummy
  }

  ##############################
  catch {unset .w}
  catch {destroy .w}

  set .w(g) {}
  set .w(c) .w.c
  set .w(s) {}
  set .w(setupOk) 0

  if {[catch {openGraph .w}]} {tk_messageBox -title "openGraph" -message "$errorInfo" -type ok}

  frame .w
  canvas .w.c
  label .w.m -width 40 -textvariable .w(message) -anchor w

  if {[catch {createGraph .w}]} {tk_messageBox -title "createGraph" -message "$errorInfo" -type ok}

  grid forget .
  grid .w.c -row 1 -column 1 -sticky nsew
  grid .w.m -row 2 -column 1 -sticky ew
  grid .w -row 1 -column 1   -sticky nsew

  grid columnconf .w 1 -weight 1
  grid rowconf    .w 1 -weight 1
  grid columnconf . 1 -weight 1
  grid rowconf    . 1 -weight 1

  trace add variable XMLDoc read setXML
  proc setXML {name1 name2 op} {
     if {[catch {set newXML [saveGraph .w]}]} {
        global errorInfo
        tk_messageBox -title "Error - not saved" -message $errorInfo -type ok
     }  else {
        global XMLDoc
        set XMLDoc $newXML
     }
  }
  ]]>
        </uiscript>
        <rule name="Init rule" invisible="yes" condition="init">
          <![CDATA[package require struct
  ::struct::graph stateGraph
  ]]>
        </rule>
      </rotnode>
    </RotPlot>
      <manager name="Empty manager">
      <script name="init">
        <text>
        </text>
        <event>init</event>
      </script>
      <script name="start_of_day">
        <text>
        </text>
        <event>start_of_day</event>
      </script>
      <script name="end_of_day">
        <text>
        </text>
        <event>end_of_day</event>
      </script>
    </manager>
    <folder name="Manager with examples">
      <manager name="Sow using a fasw in top layer">
        <ui>
          <category description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <sw1mm type="text" description="sw above ll15 in top layer (mm)">20</sw1mm>
          <category description="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">hartog</cultivar>
          <class type="classes" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        </ui>
        <script name="start_of_day">
         <text><![CDATA[     sw1=[sw1mm]/dlayer(1)                                                !convert from mm to a volumetric sw

if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
    if (date_within('[date1], [date2]') = 1) then

    if (sw(1)>=(sw1 + ll15(1))  OR  ('[must_sow]' = 'yes' AND today = date('[date2]'))  then
       [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
       endif
    endif

     if today = date('[date2]') then
        ChooseNextCrop = 'yes'
    endif
endif
      ]]></text>
          <event>start_of_day</event>
        </script>
      </manager>
      <manager name="Sow on a fixed date">
        <script>
          <text>
        if (today = date('[date]') then
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
         endif
               </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date type="text" description="Enter sowing date (dd-mmm) : ">1-jan</date>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">10</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">50</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : " />
          <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">500</row_spacing>
        </ui>
      </manager>
      <manager name="Sow using a variable rule">
        <script>
          <text><![CDATA[
      if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">wheat</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">100</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : ">hartog</cultivar>
          <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
        </ui>
      </manager>
      <manager name="Cotton sowing rule">
        <script>
          <text><![CDATA[
      if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants_pm =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], skiprow = [skiprow]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">cotton</crop>
          <density type="text" description="Enter sowing density  (plants/m2 in row) : ">10</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : ">siok</cultivar>
          <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
          <skiprow type="list" listvalues="0, 1, 2" description="Skip row : ">0</skiprow>
        </ui>
      </manager>
      <manager name="Sorghum sowing rule">
        <script>
          <text><![CDATA[
      if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], skip = [skiprow]
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif
            ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">sorghum</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">7</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : ">early</cultivar>
          <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
          <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
        </ui>
      </manager>
      <manager name="Sorghum Sowing with Tillers">
        <ui>
          <category description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-oct</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jan</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category description="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">sorghum</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">7</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">30</depth>
          <cultivar type="cultivars" description="Enter cultivar : ">early</cultivar>
          <row_spacing type="text" description="Enter row spacing (mm) : ">1000</row_spacing>
          <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
          <ftn type="text" description="Enter Fertile Tiller Number :">3</ftn>
        </ui>
        <script name="start_of_day">
          <text><![CDATA[      if (paddock_is_fallow() = 0) then
            outputfile do_output
         endif

         if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
            if (date_within('[date1], [date2]') = 1) then
               if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                   ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
                  ChooseNextCrop = 'yes'   ! for rotations
                  [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], skip = [skiprow], tiller_no_fertile = [ftn]
               endif
               if today = date('[date2]') then
                  ChooseNextCrop = 'yes'
               endif
            endif
         endif
               ]]></text>
          <event>start_of_day</event>
        </script>
        <script name="init">
          <text>
               nextcrop = 0
               fallowin = 0
               </text>
          <event>init</event>
        </script>
      </manager>
      <manager name="SUGAR management">
        <script>
          <text><![CDATA[
            ! -----------------------------------------------------------------
            ! Book keeping to round days to integer values
            plantlen = nearest_int(plantlen)
            ratoonlen = nearest_int(ratoonlen)

            ! Initialise and set a time counter for entire run
            dah = 0

            if (sugar.crop_status = 'alive') then
               dah = 0

               ! Set harvest dates for each crop phase
               if (sugar.DaysAfterSowing = [plantlen] and ratoon_no = 0) or
                  (sugar.DaysAfterSowing = [ratoonlen] and ratoon_no > 0) then

                  sugar harvest

                  if (ratoon_no = [NoRatoons] + 1) then
                     ! plough the crop out
                     sugar kill_crop
                     sugar end_crop

                  else
                     ! Set stalk density
                     sugar.plants = [ratoon_stalks]
                  endif
               else
                  ! We have not reached the harvest date for this ratoon.
               endif

            elseif (sugar.crop_status = 'dead') then
               sugar harvest
               sugar end_crop

            elseif (sugar.crop_status = 'out') and (today = date('[planting_day]') then
               sugar sow plants = 10 (), cultivar = [variety], sowing_depth = [sowing_depth]
               sugar.plants = [plant_stalks]
               dah = 0

            else
               dah = dah + 1
            endif
               ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Sugar plant crop management parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">sugar</crop>
          <planting_day type="text" description="Enter planting date (dd-mmm) : ">1-jan</planting_day>
          <plantlen type="text" description="Duration of a plant crop (days) (30 days/month * 15 months) : ">450</plantlen>
          <plant_stalks type="text" description="Stalk density of plant crop (/m2) :">10</plant_stalks>
          <variety type="list" listvalues="q117,q96,q138,ts65-28,h73,q141,nco376,n12,n14,cp51,r570,m1356,m55560,q124" description="Planting variety :">q117</variety>
          <sowing_depth type="text" description="Planting depth mm) :">150</sowing_depth>
          <category name="Ratoon management parameters" />
          <NoRatoons type="text" description="Number of ratoons (max = 5): ">4</NoRatoons>
          <ratoonlen type="text" description="Duration of a ratoon crop (days) (30 days/month * 13 months) : ">390</ratoonlen>
          <ratoon_stalks type="text" description="Stalk density of ratoon crop (/m2) :">10</ratoon_stalks>
        </ui>
      </manager>
      <manager name="Lucerne Ley fixed sow harvest at flowering">
        <script>
          <text>
       if (today = date('[date]') then
              [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
              [crop]LeyYears = [leyyears]
       endif

</text>
          <event>start_of_day</event>
        </script>
        <script name="end_of_day">
          <text><![CDATA[
             if [crop].StageName = 'flowering'  then
                [crop]  harvest height = [harvest_ht]
              endif
              if today= date('[killdate]') and [crop].plant_status <>'out' then
                   if ( [crop]LeyYears > 0 ) then
                         [crop]LeyYears = [crop]LeyYears - 1
                   else
                              [crop] end_crop
                   endif
              endif
         ]]></text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date type="text" description="Enter sowing date (dd-mmm-yyyy) : ">1-jan-1985</date>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : " />
          <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
          <category name="Number of years" />
          <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
          <category name="Harvesting criteria" />
          <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
          <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
          <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
        </ui>
      </manager>
      <manager name="Lucerne Ley variable sow harvest at flowering">
        <script>
          <text><![CDATA[
       if (paddock_is_fallow() = 1 and FallowIn <> 'yes' and (NextCrop = 0 or NextCrop = '[crop]')) then
         if (date_within('[date1], [date2]') = 1) then
            if (rain[[rainnumdays]] >= [raincrit] AND esw >= [esw_amount]) OR
                ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN
               ChooseNextCrop = 'yes'   ! for rotations
               [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar], row_spacing = [row_spacing], crop_class = [class]
               [crop]LeyYears = [leyyears]! for the length of the lucerne ley
            endif
            if today = date('[date2]') then
               ChooseNextCrop = 'yes'
            endif
         endif
      endif

         ]]></text>
          <event>start_of_day</event>
        </script>
        <script>
          <text><![CDATA[
                if [crop].StageName = 'flowering'  then
             [crop]  harvest height = [harvest_ht]
        endif
        if today= date('[killdate]') and [crop].plant_status <>'out' then
             if ( [crop]LeyYears > 0 ) then
                   [crop]LeyYears = [crop]LeyYears - 1
             else
                        [crop] end_crop
             endif
        endif
         ]]></text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category name="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">15-may</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">10-jul</date2>
          <must_sow type="yesno" description="Must sow? : ">no</must_sow>
          <raincrit type="text" description="Amount of rainfall : ">30</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <esw_amount type="text" description="Enter minimum allowable available soil water (mm) : ">200</esw_amount>
          <category name="Sowing parameters" />
          <crop type="crop" description="Enter name of crop to sow : ">lucerne</crop>
          <density type="text" description="Enter sowing density  (plants/m2) : ">200</density>
          <depth type="text" description="Enter sowing depth  (mm) : ">20</depth>
          <cultivar type="cultivars" croppropertyname="crop" description="Enter cultivar : " />
          <class type="classes" croppropertyname="crop" description="Enter crop growth class : ">plant</class>
          <row_spacing type="text" description="Enter row spacing (mm) : ">250</row_spacing>
          <category name="Number of years" />
          <leyyears type="text" description="Enter numberofyeasr inley : ">3</leyyears>
          <category name="Harvesting criteria" />
          <harvest_ht type="text" description="Enter the height to harvest the crop : ">50</harvest_ht>
          <remove type="text" description="Fraction of maerial removed leaving the system (balance to residue): ">0.95</remove>
          <killdate type="text" description="date lucerne is to be removed : ">15-nov</killdate>
        </ui>
      </manager>
      <manager name="Harvesting rule">
        <script>
          <text><![CDATA[
           if ('[crop]' = 'cotton') then
              if ([crop].ozcot_status > 0) then
                  [crop] harvest
              endif
           elseif ([crop].StageName = 'harvest_ripe' or [crop].plant_status = 'dead') then
              [crop]  harvest
              [crop]  end_crop
           endif
]]></text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category name="Harvesting criteria" />
          <crop type="crop" description="Enter name of crop to harvest when ripe : ">wheat</crop>
        </ui>
      </manager>
      <manager name="End crop on a fixed date">
        <script>
          <text>

        if (today = date('[date]') then
              [crop]  end_crop
        endif

            </text>
          <event>end_of_day</event>
        </script>
        <ui>
          <category name="Harvesting criteria" />
          <crop type="crop" description="Enter name of crop to harvest when ripe : ">wheat</crop>
          <date type="text" description="Enter ending date (dd-mmm) : ">1-jan</date>
        </ui>
      </manager>
      <manager name="Fertilise at sowing">
        <script>
          <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = 50 (mm), type = [fert_type_sow]
            </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <modulename type="modulename" description="On which module should the event come from : ">wheat</modulename>
          <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
          <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">150</fert_amount_sow>
          <fert_type_sow type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">urea_N</fert_type_sow>
        </ui>
      </manager>
      <manager name="Fertilise on fixed date">
        <script>
          <text><![CDATA[
         if (today = date('[fert_date]') then
            N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
            if (N_topsoil < [fert_criteria]) then
               [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
            endif
         endif ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
          <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">150</fert_amount>
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </manager>
      <manager name="Fertilise in a zadok stage window">
        <script>
          <text>
            fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 0
        </text>
          <event>init</event>
        </script>
        <script>
          <text>
            fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 0
        </text>
          <event>sowing</event>
        </script>
        <script>
          <text><![CDATA[
         if (zadok_stage >= [zadok_fert_stage_begin]
            AND zadok_stage <= [zadok_fert_stage_end]
            AND fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 0) then
            if (esw >= [esw_amount]) then
               N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
               if (N_topsoil < [fert_criteria]) then
                  [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
               fert_applied[zadok_fert_stage_begin][zadok_fert_stage_end] = 1
               endif
            endif
         endif
         ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <zadok_fert_stage_begin type="text" description="Enter start of zadok window (10-71):   ">30</zadok_fert_stage_begin>
          <zadok_fert_stage_end type="text" description="Enter end of zadok window (10-71):   ">32</zadok_fert_stage_end>
          <fert_criteria type="text" description="Don't add fertiliser if N in top 2 layers exceeds (kg/ha) : ">1000</fert_criteria>
          <esw_amount type="text" description="Enter amount of soil water (mm)">30</esw_amount>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">25</fert_amount>
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </manager>
      <manager name="Fertilise on fixed date - top up">
        <script>
          <text>
         if (today = date('[fert_date]') then
            N_deficit = [fert_criteria] - (no3(1) + nh4(1) + no3(2) + nh4(2) + no3(3) + nh4(3))
            '[fertmodule]' apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type] ()
         endif </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
          <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </manager>
      <manager name="Fertilise on days after sowing - top up">
        <script>
          <text>
         if ([modulename].DaysAfterSowing = [fert_das]) then
            N_deficit = [fert_criteria] - (no3(1) + nh4(1) + no3(2) + nh4(2) + no3(3) + nh4(3))
            '[fertmodule]' apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type] ()
         endif </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <modulename type="modulename" description="On which crop is fertiliser being applied : ">wheat</modulename>
          <fert_das type="text" description="Enter fertiliser days after sowing  : ">dd-mmm</fert_das>
          <fert_criteria type="text" description="Amount of N required in top 3 layers (kg/ha) : ">1000</fert_criteria>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">urea_N</fert_type>
        </ui>
      </manager>
      <manager name="Fertilise incrop on critical NO3 level- top up">
        <script>
          <text><![CDATA[
         if ([modulename].plant_status = 'alive') then
            NO3_available = no3(1) + no3(2) + no3(3)
            if (NO3_available <= [fert_critical]) then
               N_deficit = [fert_criteria] - NO3_available
               '[fertmodule]' apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type] ()
            endif
         endif ]]></text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should fertiliser be applied" />
          <modulename type="modulename" description="In which crop is fertiliser being applied : ">wheat</modulename>
          <fert_criteria type="text" description="Maximum Amount of NO3 required in top 3 layers (kg/ha) : ">200</fert_criteria>
          <fert_critical type="text" description="Critical Amount of NO3 in top 3 layers (kg/ha) : ">100</fert_critical>
          <category name="Fertiliser application details" />
          <fertmodule type="modulename" description="Module used to apply the fertiliser : " />
          <fert_type type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p" description="Fertiliser type : ">NO3_N</fert_type>
        </ui>
      </manager>
      <manager name="Irrigate at sowing">
        <script>
          <text><![CDATA[
         if ([irrig_amount_evt] > 0) then
            '[irrigatemodule]' apply amount = [irrig_amount_evt] (mm)
         endif
   ]]></text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should irrigation be applied" />
          <modulename type="modulename" description="The module the event come from : " />
          <eventname type="text" description="Which event should irrigation be applied : ">sowing</eventname>
          <category name="Irrigation application details" />
          <irrigatemodule type="modulename" description="Module used to apply the irrigation : " />
          <irrig_amount_evt type="text" description="Amount of irrigation to apply (mm) : ">50</irrig_amount_evt>
        </ui>
      </manager>
      <manager name="Irrigate on fixed date">
        <script>
          <text>
            if (today = date('[irrigate_date]')) then
               '[irrigate_module]' set irrigation_efficiency = [irrigate_efficiency]
               '[irrigate_module]' apply amount = [irrigate_amount] (mm)
            endif </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should irrigation be applied" />
          <irrigate_date type="ddmmmdate" description="Enter irrigation date (dd-mmm) : ">dd-mmm</irrigate_date>
          <category name="Irrigation application details" />
          <irrigate_module type="modulename" description="Module used to apply the irrigation : ">ClockAllYears</irrigate_module>
          <irrigate_amount type="text" description="Amount of irrigation to apply (mm) : ">50</irrigate_amount>
          <irrigate_efficiency type="text" description="Irrigation efficiency (0-1) : ">1.0</irrigate_efficiency>
        </ui>
      </manager>
      <manager name="Tillage on fixed date">
        <script>
          <text>
         if (today = date('[tillage_date]') then
            if ('[tillage_type]' = 'user_defined') then
                '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
            else
                '[surfaceommodule]' tillage type = [tillage_type]
            endif
            ready_to_till_pre_sow = 0
            till_day_pre_sow = 0
         endif
      </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should tillage be done" />
          <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) : ">dd-mmm</tillage_date>
          <category name="Tillage application details" />
          <surfaceommodule type="modulename" description="Module used to apply the tillage : " />
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
        </ui>
      </manager>
      <manager name="Tillage on an event">
        <script>
          <text>
            '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
      </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should tillage be performed" />
          <modulename type="modulename" description="The module the event come from : ">ClockAllYears</modulename>
          <eventname type="text" description="On which event should tillage be done : ">sowing</eventname>
          <category name="Tillage details" />
          <surfaceommodule type="modulename" description="Module used to apply the tillage : ">ClockAllYears</surfaceommodule>
          <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
          <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
          <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
        </ui>
      </manager>
      <manager name="Reset water, nitrogen and surfaceOM on fixed date">
        <script>
          <text>
         if (today = date('[reset_date]')) then
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            act_mods reseting
         endif
      </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="When should a reset be done" />
          <reset_date type="ddmmmdate" description="Enter date of reset (dd-mmm) : ">dd-mmm</reset_date>
          <category name="Reset details" />
          <soilmodule type="modulename" description="Name of your soil module : " />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
          <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
          <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
          <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        </ui>
      </manager>
      <manager name="Reset water, nitrogen and surfaceOM on sowing">
        <script>
          <text>
            resetWater = '[resetWater]'
            resetNitrogen  = '[resetNitrogen]'
            resetSurfaceOM = '[resetSurfaceOM]'
            if (resetWater = 'yes') then
                '[soilmodule] Water' reset
            endif
            if (resetNitrogen = 'yes') then
                '[soilmodule] Nitrogen' reset
            endif
            if (resetSurfaceOM = 'yes') then
                '[surfaceommodule]' reset
            endif
            if (resetWater = 'yes' or resetNitrogen = 'yes' or resetSurfaceOM = 'yes') then
               act_mods reseting
            endif
      </text>
          <event>[modulename].[eventname]</event>
        </script>
        <ui>
          <category name="When should a reset be done" />
          <modulename type="modulename" description="The module the event is to come from : ">wheat</modulename>
          <eventname type="text" description="On which event should a reset be done : ">sowing</eventname>
          <category name="Reset details" />
          <soilmodule type="modulename" description="Name of your soil module : " />
          <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
          <resetWater type="yesno" description="Reset soil water?">yes</resetWater>
          <resetNitrogen type="yesno" description="Reset soil nitrogen?">yes</resetNitrogen>
          <resetSurfaceOM type="yesno" description="Reset surface organic matter?">yes</resetSurfaceOM>
        </ui>
      </manager>
      <manager name="Rotations">
        <script>
          <text>
         NextCropIndex = 1
         NextCrop = ' '
         ChooseNextCrop = 'yes'
         SummerFallowIn = 'no'
         WinterFallowIn = 'no'
         FallowIn = 'no'
      </text>
          <event>init</event>
        </script>
        <script>
          <text>
      if (ChooseNextCrop = 'yes') then
         if (NextCropIndex = 1) then
            NextCrop = '[crop1]'
         elseif (NextCropIndex = 2) then
            NextCrop = '[crop2]'
         elseif (NextCropIndex = 3) then
            NextCrop = '[crop3]'
         elseif (NextCropIndex = 4) then
            NextCrop = '[crop4]'
         elseif (NextCropIndex = 5) then
            NextCrop = '[crop5]'
         elseif (NextCropIndex = 6) then
            NextCrop = '[crop6]'
         elseif (NextCropIndex = 7) then
            NextCrop = '[crop7]'
         elseif (NextCropIndex = 8) then
            NextCrop = '[crop8]'
         elseif (NextCropIndex = 9) then
            NextCrop = '[crop9]'
         elseif (NextCropIndex = 10) then
            NextCrop = '[crop10]'
         elseif (NextCropIndex = 11) then
            NextCrop = '[crop11]'
         elseif (NextCropIndex = 12) then
            NextCrop = '[crop12]'
         elseif (NextCropIndex = 13) then
            NextCrop = '[crop13]'
         elseif (NextCropIndex = 14) then
            NextCrop = '[crop14]'
         elseif (NextCropIndex = 15) then
            NextCrop = '[crop15]'
         elseif (NextCropIndex = 16) then
            NextCrop = '[crop16]'
         elseif (NextCropIndex = 17) then
            NextCrop = '[crop17]'
         elseif (NextCropIndex = 18) then
            NextCrop = '[crop18]'
         elseif (NextCropIndex = 19) then
            NextCrop = '[crop19]'
         elseif (NextCropIndex = 20) then
            NextCrop = '[crop20]'
         endif
         if (NextCrop = 'nil' or NextCrop = ' ') then
            NextCrop = '[crop1]'
            NextCropIndex = 1
         endif
         NextCropIndex = NextCropIndex + 1
         ChooseNextCrop = 'no'
      endif
      ! if the next crop is due to be a fallow and we're within the
      ! correct date range then put a fallow in.
      if (NextCrop = '[WinterFallowName]') then
         if (paddock_is_fallow() = 1 and FallowIn = 'no') then
            if (date_within('[SummerFallowEndDate], [WinterFallowEndDate]') then
               WinterFallowIn = 'yes'
               FallowIn = 'yes'
               ChooseNextCrop = 'yes'
            endif
         endif
      elseif (NextCrop = '[SummerFallowName]') then
         if (paddock_is_fallow() = 1 and FallowIn = 'no') then
            if (date_within('[WinterFallowEndDate], [SummerFallowEndDate]') then
               SummerFallowIn = 'yes'
               FallowIn = 'yes'
               ChooseNextCrop = 'yes'
            endif
         endif
      endif

      ! if we currently have a fallow in and we're at the end of the fallow window
      ! then remove the fallow.
      if (WinterFallowIn = 'yes' and today = date('[WinterFallowEndDate]')+1) then
         WinterFallowIn = 'no'
         FallowIn = 'no'
      endif
      if (SummerFallowIn = 'yes' and today = date('[SummerFallowEndDate]')+1) then
         SummerFallowIn = 'no'
         FallowIn = 'no'
      endif
      </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Fallow options" />
          <SummerFallowName type="text" description="Enter summer fallow name : ">sf</SummerFallowName>
          <SummerFallowEndDate type="text" description="Enter summer fallow END date (dd-mmm) : ">15-mar</SummerFallowEndDate>
          <WinterFallowName type="text" description="Enter winter fallow name : ">wf</WinterFallowName>
          <WinterFallowEndDate type="text" description="Enter winter fallow END date (dd-mmm) : ">23-aug</WinterFallowEndDate>
          <category name="Crop rotation sequence" />
          <crop1 type="crop" description="Enter 1st crop : ">nil</crop1>
          <crop2 type="crop" description="Enter 2nd crop : ">nil</crop2>
          <crop3 type="crop" description="Enter 3rd crop : ">nil</crop3>
          <crop4 type="crop" description="Enter 4th crop : ">nil</crop4>
          <crop5 type="crop" description="Enter 5th crop : ">nil</crop5>
          <crop6 type="crop" description="Enter 6th crop : ">nil</crop6>
          <crop7 type="crop" description="Enter 7th crop : ">nil</crop7>
          <crop8 type="crop" description="Enter 8th crop : ">nil</crop8>
          <crop9 type="crop" description="Enter 9th crop : ">nil</crop9>
          <crop10 type="crop" description="Enter 10th crop : ">nil</crop10>
          <crop11 type="crop" description="Enter 11th crop : ">nil</crop11>
          <crop12 type="crop" description="Enter 12th crop : ">nil</crop12>
          <crop13 type="crop" description="Enter 13th crop : ">nil</crop13>
          <crop14 type="crop" description="Enter 14th crop : ">nil</crop14>
          <crop15 type="crop" description="Enter 15th crop : ">nil</crop15>
          <crop16 type="crop" description="Enter 16th crop : ">nil</crop16>
          <crop17 type="crop" description="Enter 17th crop : ">nil</crop17>
          <crop18 type="crop" description="Enter 18th crop : ">nil</crop18>
          <crop19 type="crop" description="Enter 19th crop : ">nil</crop19>
          <crop20 type="crop" description="Enter 20th crop : ">nil</crop20>
        </ui>
      </manager>
      <manager name="Summer and winter Cona/U">
        <script>
          <text>
             ! Modify evap for winter or summer
            if (date_within('[StartWinterDate], [EndWinterDate]') = 1) then
               '[SoilModule] water' set cona = [WinterCona]
               '[SoilModule] water' set u = [WinterU]
            else
               '[SoilModule] water' set cona = [SummerCona]
               '[SoilModule] water' set u = [SummerU]
            endif
          </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Properties" />
          <SoilModule type="modulename" description="Name of soil module : ">ClockAllYears</SoilModule>
          <StartWinterDate type="text" description="Date for start of winter (dd-mmm) : ">1-apr</StartWinterDate>
          <EndWinterDate type="text" description="Date for end of winter (dd-mmm) : ">30-sep</EndWinterDate>
          <SummerCona type="text" description="Summer Cona value : ">3.5</SummerCona>
          <SummerU type="text" description="Summer U value : ">4.0</SummerU>
          <WinterCona type="text" description="Winter Cona value : ">2.0</WinterCona>
          <WinterU type="text" description="Winter U value : ">2.0</WinterU>
        </ui>
      </manager>
      <manager name="Yield moisture correction">
        <script>
          <text>
          WetYield = yield / (1 - [MoistureContent]/100)
          </text>
          <event>start_of_day</event>
        </script>
        <ui>
          <category name="Properties" />
          <MoistureContent type="text" description="Moisture content of grain (%) : ">12</MoistureContent>
        </ui>
      </manager>
      <manager name="Simple gross margin (put before harvesting rule)">
        <script>
          <text><![CDATA[
           ! Reset the bank to zero the day after harvest.
           if (ResetBank = 1) then
              Bank = 0
              ResetBank = 0
           endif

           ! Subtract fertiliser cost from the bank
           if (fertiliser > 0)then
              Bank = Bank - ([NCost] * fertiliser + [NApplicationCost])
           endif

           ! Add harvest return to the bank
           if StageName = 'harvest_ripe' or plant_status = 'dead' then
              FullPrice = [Price] + (grain_protein - [MinimumProtein]) * 2 * [ProteinIncrement]
              Bank = Bank + FullPrice * (WetYield / 1000)
              ResetBank = 1
           endif
           ]]></text>
          <event>post</event>
        </script>
        <ui>
          <category name="Cost properties" />
          <NCost type="text" description="Cost of N fertiliser ($/ha) : ">1.2</NCost>
          <NApplicationCost type="text" description="Cost of N application ($/ha) : ">15</NApplicationCost>
          <category name="Price properties" />
          <Price type="text" description="Price ($/t) : ">140</Price>
          <MinimumProtein type="text" description="Minimum protein for classification ($/t) : ">10.5</MinimumProtein>
          <ProteinIncrement type="text" description="Protein increment payment ($/t) : ">2</ProteinIncrement>
        </ui>
      </manager>
      <manager name="Publish an event when an APSIM variable meets a 2 part condition">
        <script>
          <text><![CDATA[
          if ([VariableName1] = [VariableValue1] and
              [VariableName2] >= [LowerBound] and
              [VariableName2] <= [UpperBound]) then
             act_mods [EventName]
          endif]]></text>
          <event>post</event>
        </script>
        <ui>
          <category name="Condition1 properties" />
          <VariableName1 type="text" description="Name of 1st APSIM variable to check (e.g. stage_name) : ">stage_name</VariableName1>
          <VariableValue1 type="text" description="Value that 1st variable must have (e.g. flowering) : ">'flowering'</VariableValue1>
          <category name="Condition2 properties" />
          <VariableName2 type="text" description="Name of 2nd APSIM variable to bound check (e.g. maxt, mint, avtemp) : ">mint</VariableName2>
          <LowerBound type="text" description="Lower bound of variable : ">-100</LowerBound>
          <UpperBound type="text" description="Upper bound of variable : ">0</UpperBound>
          <category name="Event properties" />
          <EventName type="text" description="Name of event to publish when above 2 conditions are met : ">SevereFrostAtFlowering</EventName>
        </ui>
      </manager>
      <manager name="Create a yes/no variable when within x TT of start of a crop stage">
        <script>
          <text><![CDATA[
            if (StageName = '[StageName]') then
               TTFromStart[StageName] = TTFromStart[StageName] + TT
               [OutputVariableName] = 'yes'
               if (TTFromStart[StageName] > [TT]) then
                  [OutputVariableName] = 'no'
               endif
            else
               TTFromStart[StageName] = 0
               [OutputVariableName] = 'no'
            endif ]]></text>
          <event>post</event>
        </script>
        <ui>
          <category name="Properties" />
          <StageName type="text" description="Crop stage name (e.g. start_grain_fill) : ">start_grain_fill</StageName>
          <TT type="text" description="Thermal time threshold : ">150</TT>
          <category name="Output variable properties" />
          <OutputVariableName type="text" description="Name of output variable to hold yes/no flag : ">InHeatShockWindow</OutputVariableName>
        </ui>
      </manager>
      <manager name="Establish Bambatsi pasture">
        <ui>
          <category description="Sowing criteria" />
          <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm) : ">1-sep</date1>
          <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm) : ">31-dec</date2>
          <raincrit type="text" description="Amount of rainfall : ">15</raincrit>
          <rainnumdays type="text" description="Number of days of rainfall : ">3</rainnumdays>
          <category description="Sowing parameters" />
          <crop type="crop" description="Enter name of growth module to sow : ">bambatsi</crop>
          <density type="text" description="Enter sowing density  (plants/ha) : ">100</density>
        </ui>
        <script name="init">
          <text>
  bambatsi_in = 0
            </text>
          <event>init</event>
        </script>
        <script name="start_of_day">
          <text><![CDATA[
    if (date_within('[date1], [date2]') = 1) and bambatsi_in = 0 then
        if (rain[[rainnumdays]] >= [raincrit] then
               [crop]  establish plants =[density], init_section = seedling
        bambatsi_in = 1
        endif
   endif
            ]]></text>
          <event>start_of_day</event>
        </script>
      </manager>
      <manager name="Manage Bambatsi">
        <ui>
          <category description="Cutting criteria" />
          <hmass type="text" description="Enter critical biomass for harvest (kg/ha) : ">2000</hmass>
          <category description="Cutting parameters" />
          <crop type="crop" description="Enter name of growth module to cut : ">bambatsi</crop>
          <ffraction type="text" description="Enter fraction of foliage removed  (0-1) : ">0.9</ffraction>
          <sfraction type="text" description="Enter fraction of stem removed  (0-1) : ">0.9</sfraction>
        </ui>
        <script name="start_of_day">
          <text><![CDATA[
         if ([crop].biomass > [hmass] and bambatsi_in = 1 then
               [crop]  cut foliage_remove_fr = [ffraction], adm_remove_fr = [sfraction]
         endif
            ]]></text>
          <event>start_of_day</event>
        </script>
      </manager>
    </folder>
    <manager2 name="Script(VB)">
      <ui/>
      <text><![CDATA[Imports System
Imports ModelFramework

Public Class Script
   Inherits Instance

   <Input()> Private A as Double
   <Param()> Private B as Double
   <Output()><Units("oC")> Public C as Double

   <EventHandler()> Public Sub OnPost()

   End Sub
End Class
    ]]></text>
    </manager2>
    <manager2 name="Script(C#)">
      <ui/>
      <text><![CDATA[
using System;
using ModelFramework;

public class Script : Instance
   {
   [Input] private double A = 0;
   [Param] private double B = 0;
   [Output][Units("oC")] public double C = 0;

   [EventHandler] public void OnPost()
      {
      }
   }
    ]]></text>
    </manager2>
    <folder name="Africa-India">
      <folder name="Phosphorus and Manure">
        <manager name="Fertilise with Phosphorus at sowing">
          <script>
            <text>
        [fertmodule] apply amount = [fert_amount_sow] (kg/ha), depth = 50 (mm), type = [fert_type_sow]
            </text>
            <event>[modulename].[eventname]</event>
          </script>
          <ui>
            <category name="When should fertiliser be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">maize</modulename>
            <eventname type="text" description="On which event should fertiliser be applied : ">sowing</eventname>
            <category name="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_amount_sow type="text" description="Amount of starter fertiliser at sowing (kg/ha) : ">150</fert_amount_sow>
            <fert_type_sow type="list" listvalues="rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">broadcast_p</fert_type_sow>
          </ui>
        </manager>
        <manager name="Fertilise with Phosphorus on fixed date">
          <script>
            <text>
         if (today = date('[fert_date]') then
               [fertmodule] apply amount = [fert_amount] (kg/ha), depth = 50 (mm), type = [fert_type] ()
         endif </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="When should fertiliser be applied" />
            <fert_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</fert_date>
            <category name="Fertiliser application details" />
            <fertmodule type="modulename" description="Module used to apply the fertiliser : ">fertiliser</fertmodule>
            <fert_amount type="text" description="Amount of fertiliser to apply (kg/ha) : ">150</fert_amount>
            <fert_type type="list" listvalues="rock_p, banded_p, broadcast_p" description="Sowing fertiliser type : ">broadcast_p</fert_type>
          </ui>
        </manager>
        <manager name="Manure on fixed date">
          <script>
            <text>
         if (today = date('[manure_date]') then
               '[surfaceommodule]' add_surfaceom type=[manure_type], name=[manure_type], mass=[manure_amount], cnr=[manure_cnr], cpr=[manure_cpr]
         endif </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="When should fertiliser be applied" />
            <manure_date type="ddmmmdate" description="Enter fertiliser date (dd-mmm) : ">dd-mmm</manure_date>
            <category name="Manure application details" />
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <manure_amount type="text" description="Amount of manure to apply (kg/ha) : ">4</manure_amount>
            <manure_type type="list" listvalues="manure,fym,heap_uncov,heap_cov,pit,communal" description="manure type : ">manure</manure_type>
            <manure_cnr type="text" description="manure CNR : ">20</manure_cnr>
            <manure_cpr type="text" description="manure CPR : ">50</manure_cpr>
          </ui>
        </manager>
        <manager name="Manure at sowing">
          <script>
            <text>
               '[surfaceommodule]' add_surfaceom type=[manure_type], name=[manure_type], mass=[manure_amount], cnr=[manure_cnr], cpr=[manure_cpr]
            </text>
            <event>[modulename].[eventname]</event>
          </script>
          <ui>
            <category name="When should manure be applied" />
            <modulename type="modulename" description="On which module should the event come from : ">wheat</modulename>
            <eventname type="text" description="On which event should manure be applied : ">sowing</eventname>
            <category name="Manure application details" />
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <manure_amount type="text" description="Amount of manure to apply (kg/ha) : ">4</manure_amount>
            <manure_type type="list" listvalues="manure,fym,heap_uncov,heap_cov,pit,communal" description="manure type : ">manure</manure_type>
            <manure_cnr type="text" description="manure CNR : ">20</manure_cnr>
            <manure_cpr type="text" description="manure CPR : ">50</manure_cpr>
          </ui>
        </manager>
      </folder>
      <folder name="Tillage">
        <manager name="Tillage with cn_red on fixed date">
          <script>
            <text>
         if (today = date('[tillage_date]') then
            if ('[tillage_type]' = 'user_defined') then
                '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
                '[soilmodule] Water' type = [tillage_type], cn_red = [tillage_cn_red], cn_rain = [tillage_cn_rain]
            else
                '[surfaceommodule]' tillage type = [tillage_type]
                '[soilmodule] Water' type = [tillage_type]
            endif
            ready_to_till_pre_sow = 0
            till_day_pre_sow = 0
         endif
      </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="When should tillage be done" />
            <tillage_date type="ddmmmdate" description="Enter tillage date (dd-mmm) : ">dd-mmm</tillage_date>
            <category name="Tillage application details" />
            <surfaceommodule type="modulename" moduletype="surfaceom" description="Module used to apply the tillage : " />
            <soilmodule type="modulename" moduletype="soil" description="Name of your soil module : " />
            <tillage_type type="list" listvalues="user_defined, chisel, disc, planter, burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type : ">disc</tillage_type>
            <tillage_depth description="User_defined depth of seedbed preparation (mm) : ">0</tillage_depth>
            <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1): ">0</tillage_f_incorp>
            <tillage_cn_red description="cn reduction after tillage () : ">0</tillage_cn_red>
            <tillage_cn_rain description="amount of cummulative rain to dissipate tillage effects on cn () : ">0</tillage_cn_rain>
          </ui>
        </manager>
      </folder>
      <folder name="Intercropping, Rotations and Weeds">
        <manager name="Harvesting rule for intercropping">
          <script>
            <text>
          [crop]_to_harvest = 0
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
         if ([crop]_to_harvest = 1) then
            [crop] harvest, remove=[fraction_to_remove]
            [crop] kill_crop
            [crop] end_crop
                  crop_in = crop_in - 1
            [crop]_to_harvest = 0
            fert_tot = 0
            sow_year = 0
            if (crop_current = '[crop]') then
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current1 = '[crop]') then
               crop_current1 = crop_current2
               crop_current2 = blank
            elseif (crop_current2 = '[crop]') then
               crop_current2 = blank
            endif
         endif

         if ([crop].StageName = 'harvest_ripe' OR [crop].plant_status = 'dead') then
            [crop]_to_harvest = 1
         endif
            </text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Harvesting criteria" />
            <crop type="crop" description="Enter name of crop to harvest when ripe : ">maize</crop>
            <fraction_to_remove type="text" description="Enter fraction of stover to remove (not for maize): ">0.0</fraction_to_remove>
          </ui>
        </manager>
        <manager name="Output at harvesting for intercropping">
          <script>
            <text>
         if ([crop]_to_harvest = 1) then
            '[outputfile]' do_output
         endif
            </text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Output criteria" />
            <crop type="crop" description="Enter name of crop to output at harvest : ">maize</crop>
            <outputfile type="modulename" moduletype="outputfile" description="Name of outputfile component : " />
          </ui>
        </manager>
        <manager name="Output at all phenological stages">
          <script>
            <text>
               last_stage_name = 'none'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
         if [crop].StageName = last_stage_name  then
         else
            '[outputfile]' do_output
         endif
         last_stage_name = [crop].StageName
            </text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Output criteria" />
            <crop type="crop" description="Enter name of crop to output at harvest : ">maize</crop>
            <outputfile type="modulename" moduletype="outputfile" description="Name of outputfile component : " />
          </ui>
        </manager>
        <manager name="Output at specified phenological stage">
          <script>
            <text>
         if [crop].StageName = [StageName]  then
         else
            '[outputfile]' do_output
         endif
         last_stage_name = [crop].StageName
            </text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Output criteria" />
            <crop type="crop" description="Enter name of crop to output at harvest : ">maize</crop>
            <stage_name type="list" listvalues="sowing,germination,emergence,end_of_juvenile,floral_initiation,flag_leaf,flowering,start_grain_fill,end_grain_fill,maturity,harvest_ripe,end_crop" description="Phenological stage name at which to output : ">flowering</stage_name>
            <outputfile type="modulename" moduletype="outputfile" description="Name of outputfile component : " />
          </ui>
        </manager>
        <manager name="Sow using a variable rule with intercropping">
          <script>
            <text>
         next = 1
         crop_in = 0
         blank = 'fallow'
         next_crop = blank
         crop_current = blank
         crop_current1 = blank
         crop_current2 = blank
         crop_sow = blank
         ready_for_next = 1
         ready_to_manure_pre_sow = 0
         days_last_year = 365
         manure_day_pre_sow = 0
         ready_to_till_pre_sow = 0
         till_day_pre_sow = 0
         days_after_weed_kill = 0
        </text>
            <event>init</event>
          </script>
          <script>
            <text>

         if (date_within('[date1], [date2]') = 1) THEN
         else
            wht_sow_opp_num = 0
            wht_sow_opp_days = 0
         endif
         </text>
            <event>end_of_day</event>
          </script>
          <script>
            <text><![CDATA[

         if (next_crop = '[crop]' OR next_crop = blank OR '[rotation_exclude]' = 'yes') then
               !  Presowing  manure application

            if ([manure_amount_pre_sow] > 0) then
               !  calculate day to fertilise
               manure_day_pre_sow = date('[date1]') - [manure_days_pre_sow]
               ! Need to correct for possible year boundary condition
               if (manure_day_pre_sow < today) then
                  manure_day_pre_sow = days_this_year + manure_day_pre_sow
               endif
               if (today = manure_day_pre_sow) then
                  ready_to_manure_pre_sow = 1
               endif
               if (crop_in = 0 and ready_to_manure_pre_sow = 1) then
                        ! just put on a fixed amount of manure
                  '[surfaceommodule_pre_sow]' add_surfaceom type=[manure_type_pre_sow], name=[manure_type_pre_sow], mass=[manure_amount_pre_sow], cnr=[manure_cnr_pre_sow], cpr=[manure_cpr_pre_sow]
                  ready_to_manure_pre_sow = 0
                  manure_day_pre_sow = 0
               endif
            endif

               !  Presowing  fertiliser application

            if ([fert_amount_pre_sow] > 0 OR [totn_pre_sow] > 0 ) then
               !  calculate day to fertilise
               fert_day_pre_sow = date('[date1]') - [fert_days_pre_sow]
               ! Need to correct for possible year boundary condition
               if (fert_day_pre_sow < today) then
                  fert_day_pre_sow = days_this_year + fert_day_pre_sow
               endif
               if (today = fert_day_pre_sow) then
                  ready_to_fert_pre_sow = 1
               endif
               if (crop_in = 0 and ready_to_fert_pre_sow = 1) then
                  if ([totn_pre_sow] > 0) then
                     !   Top up soil N of top 3 layers
                     N_deficit = [totn_pre_sow] - (no3(1) + nh4(1) + no3(2) + nh4(2) + no3(3) + nh4(3))
                     if (N_deficit < 0) then
                        ! do nothing
                        N_deficit = 0
                     else
                        fertiliz apply amount = N_deficit (kg/ha), depth = 50 (mm), type = [fert_type_pre_sow] ()
                     endif
                  else
                     N_topsoil = no3(1) + nh4(1) + no3(2) + nh4(2)
                     if (N_topsoil > [fert_criteria_pre_sow]) then
                        ! enough N already in topsoil
                     else
                        ! just put on a fixed amount of N
                        fertiliz apply amount = [fert_amount_pre_sow] (kg/ha), depth = 50 (mm), type = [fert_type_pre_sow] ()
                     endif
                  endif
                  ready_to_fert_pre_sow = 0
                  fert_day_pre_sow = 0
               endif
            endif

            !   Tillage - presowing seedbed preparation
            if ( [till_days_pre_sow] > 0) then
               ! calculate presowing tillage date
               till_day_pre_sow = date('[date1]') - [till_days_pre_sow]
               ! Need to correct for possible year boundary condition
               if (till_day_pre_sow < today) then
                  till_day_pre_sow = days_this_year + till_day_pre_sow
               endif
               if (today = till_day_pre_sow) then
                  ready_to_till_pre_sow = 1
               endif
               if ((crop_in = 0 OR '[must_till]' = 'yes') AND (ready_to_till_pre_sow = 1)) then
                  ! tillage
                if (crop_current = 'weed' or crop_current1 = 'weed' or crop_current2 = 'weed') then
                  if (weed.plant_status <> 'out') then
                        weed harvest, remove=[fraction]
                        weed kill_crop
                        weed end_crop
                        days_after_weed_kill = 0
                       crop_in = crop_in - 1
                       if (crop_current = 'weed') then
                           crop_current = crop_current1
                           crop_current1 = crop_current2
                           crop_current2 = blank
                        elseif (crop_current1 = 'weed') then
                           crop_current1 = crop_current2
                           crop_current2 = blank
                        elseif (crop_current2 = 'weed') then
                           crop_current2 = blank
                        endif
                  endif
                 endif
                  if ('[tillage_type]' = 'user_defined') then
                      '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [tillage_f_incorp] (), tillage_depth = [tillage_depth]
                      '[soilmodule] Water' type = [tillage_type], cn_red = [tillage_cn_red], cn_rain = [tillage_cn_rain]
                  else
                      '[surfaceommodule]' tillage type = [tillage_type] ()
                      '[soilmodule] Water' type = [planter_type]
                  endif
                  ready_to_till_pre_sow = 0
                  till_day_pre_sow = 0
               endif
            endif

            if (today = date('[date2]')) then
               if ('[rotation_exclude]' = 'no') then
                  ready_for_next = 1
               endif
            endif

            if (wht_sow_opp_num > 0) then
               wht_sow_opp_days = wht_sow_opp_days + 1
            else
            endif

         if (crop_in = 0 OR ('[cropmethod]' = 'intercrop'
             AND [crop].plant_status = 'out')) then
               if (date_within('[date1], [date2]') = 1) then
                  crop_sow = 'waiting'
                  surface_moist = (sw(1) - ll15(1)) / (dul(1)- ll15(1))
                  if ((rain[[rain_days]] >= [rain_amount]  AND  esw >= [esw_amount] AND
                        (surface_moist <= [surface_up] and surface_moist >= [surface_low])) OR
                      ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN


                     if (wht_sow_opp_days >= [rain_days] OR wht_sow_opp_num = 0) then
                        wht_sow_opp_num = wht_sow_opp_num + 1
                        wht_sow_opp_days = 0
                     endif

                     if ((wht_sow_opp_num >= [sow_opp]) OR ('[must_sow]' = 'yes' AND today = date('[date2]')) then
                        if ('[crop]' = 'sorghum') then
                           [crop] sow plants =[density], sowing_depth = [depth], cultivar = [cultivar1], row_spacing = [row_spacing], tiller_no_fertile = [ftn] (), skip = [skiprow]
                        else
                          [crop] sow cultivar = [cultivar1], plants = [density] (plants/m2), sowing_depth = [depth], row_spacing = [row_spacing]
                        endif
                        crop_in = crop_in + 1
                        if ('[rotation_exclude]' = 'no') then
                           ready_for_next = 1
                        endif
                        crop_current2 = crop_current1
                        crop_current1 = crop_current
                        crop_current = '[crop]'
                        crop_sow = '[crop]'
                        ready_to_manure_pre_sow = 0
                        if ([fert_amount_sow] > 0) then
                           fertiliser apply amount = [fert_amount_sow] (kg/ha), depth = 50 (mm), type = [fert_type_sow] ()
                        endif
                        !   Planter -
                        ! Planting
                        if (crop_current = 'weed' or crop_current1 = 'weed' or crop_current2 = 'weed') then
                           if (weed.plant_status <> 'out' AND [thin_fraction] > 0) then
                              weed kill_crop plants_kill_fraction = [thin_fraction]
                              if ([thin_fraction] = 1.0) then
                                 weed end_crop
                                 days_after_weed_kill = 0
                              else
                              endif
                              if ([thin_fraction] = 1.0) then
                                    crop_in = crop_in - 1
                                   if (crop_current = 'weed') then
                                       crop_current = crop_current1
                                       crop_current1 = crop_current2
                                       crop_current2 = blank
                                    elseif (crop_current1 = 'weed') then
                                       crop_current1 = crop_current2
                                       crop_current2 = blank
                                    elseif (crop_current2 = 'weed') then
                                       crop_current2 = blank
                                    endif
                              endif
                           endif
                        endif
                        if ('[planter_type]' = 'user_defined') then
                            '[surfaceommodule]' tillage type = [planter_type], f_incorp = [planter_f_incorp] (), tillage_depth = [planter_depth]
                            '[soilmodule] Water' type = [planter_type], cn_red = [planter_cn_red], cn_rain = [planter_cn_rain]
                        else
                            '[surfaceommodule]' tillage type = [planter_type] ()
                            '[soilmodule] Water' type = [planter_type]
                        endif


                     else
                        !not this opportunity
                     endif
                  endif
               endif
            endif
         endif
         ! apply topdress fertiliser
         if ([fert_amount_TopDress] > 0.0) then
            if ([crop].DaysAfterSowing = [fert_days_TopDress]) then
               fertiliser apply amount = [fert_amount_TopDress] (kg/ha), depth = 50 (mm), type = [fert_type_TopDress] ()
            else
            endif
         else
         endif
         ]]></text>
            <event>process</event>
          </script>
          <ui>
            <category name="Crop properties" />
            <crop description="Name of this crop" type="crop">maize</crop>
            <cultivar1 type="cultivars" croppropertyname="crop" description="Enter cultivar : ">katumani</cultivar1>
            <cropmethod description="Method of cropping" type="list" listvalues="sole,intercrop">sole</cropmethod>
            <rotation_exclude description="Exclude from rotation sequence" type="yesno">no</rotation_exclude>
            <category name="Sowing criteria" />
            <date1 description="Enter sowing window START date (dd-mmm)" type="ddmmmdate">1-nov</date1>
            <date2 description="Enter sowing window END date (dd-mmm)" type="ddmmmdate">30-dec</date2>
            <must_sow description="Must Sow" type="yesno">no</must_sow>
            <rain_amount description="Enter amount of cumulative rainfall (mm)">20</rain_amount>
            <rain_days description="Enter number of days to accumulate rainfall (days)">5</rain_days>
            <esw_amount description="Enter amount of soil water (mm)">30</esw_amount>
            <sow_opp description="Enter sowing opportunity number to sow on (1..n)">1</sow_opp>
            <surface_up description="Enter upper limit of sw in top layer (0-2) (mm esw/mm soil)">2</surface_up>
            <surface_low description="Enter lower limit of sw in top layer (0-1) (mm esw/mm soil)">0</surface_low>
            <category name="Sowing specs" />
            <density description="Enter sowing density  (plants/m2)">5</density>
            <depth description="Enter sowing depth  (mm)">100</depth>
            <row_spacing description="Enter row spacing  (mm) (m for maize and sorghum)" type="text">0.9</row_spacing>
            <category name="Sorghum specs" />
            <skiprow type="list" listvalues="solid, single, double" description="Skip row : ">solid</skiprow>
            <category name="Starter fertiliser application" />
            <fert_amount_sow description="Amount of starter fertiliser at sowing (kg/ha)" type="text">0</fert_amount_sow>
            <fert_type_sow description="Type" type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea">urea_N</fert_type_sow>
            <category name="TopDress fertiliser application" />
            <fert_days_TopDress description="Enter number of days after sowing to apply top-dress fertiliser (days)" type="text">60</fert_days_TopDress>
            <fert_amount_TopDress description="Amount of TopDress fertiliser (kg/ha)" type="text">0</fert_amount_TopDress>
            <fert_type_TopDress description="Type" type="list" listvalues="NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p">urea_N</fert_type_TopDress>
            <category name="Pre-sowing manure application" />
            <surfaceommodule_pre_sow type="modulename" description="Module used to apply the manure : ">surface organic matter</surfaceommodule_pre_sow>
            <manure_days_pre_sow description="Enter number of days before window to apply pre-crop manure (days)" type="text">30</manure_days_pre_sow>
            <manure_amount_pre_sow type="text" description="Amount of manure to apply (kg/ha) : ">4000</manure_amount_pre_sow>
            <manure_type_pre_sow type="list" listvalues="manure,fym,heap_uncov,heap_cov,pit,communal" description="manure type : ">manure</manure_type_pre_sow>
            <manure_cnr_pre_sow type="text" description="manure CNR : ">25</manure_cnr_pre_sow>
            <manure_cpr_pre_sow type="text" description="manure CPR : ">50</manure_cpr_pre_sow>
            <category name="Pre-sowing fertiliser application" />
            <fert_days_pre_sow description="Enter number of days before window to apply pre-crop fertiliser (days)" type="text">30</fert_days_pre_sow>
            <fert_amount_pre_sow description="Amount of pre-crop fertiliser (kg/ha)" type="text">0</fert_amount_pre_sow>
            <fert_criteria_pre_sow description="Don't add fertiliser if pre-crop N in top 2 layers exceeds (kg/ha)" type="text">1000</fert_criteria_pre_sow>
            <totn_pre_sow description=" OR  Amount of pre-crop N required in top 3 layers (kg/ha)" type="text">0</totn_pre_sow>
            <fert_type_pre_sow description="Type (NO3_N, NH4_N, NH4NO3, urea_N, urea_no3, urea, nh4so4_n, rock_p, banded_p, broadcast_p)" type="text">urea_N</fert_type_pre_sow>
            <category name="Tillage components" />
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <soilmodule type="modulename" description="Name of your soil module : " />
            <category name="Planter Tillage" />
            <planter_type description="Planter type" type="list" listvalues="user_defined, planter">planter</planter_type>
            <planter_depth description="User_defined depth of seedbed preparation (mm)" type="text">0</planter_depth>
            <thin_fraction description="Enter fraction of weed population killed (0-1)" type="text">1.0</thin_fraction>
            <planter_f_incorp description="User_defined fraction of surface residues to incorporate (0-1)" type="text">0</planter_f_incorp>
            <planter_cn_red description="cn reduction after tillage () : ">0</planter_cn_red>
            <planter_cn_rain description="amount of cummulative rain to dissipate tillage effects on cn () : ">0</planter_cn_rain>
            <category name="Seed-bed Tillage Preparation" />
            <till_days_pre_sow description="Enter number of days before window to prepare seed-bed (days)" type="text">0</till_days_pre_sow>
            <must_till description="Must Till (yes/no)" type="yesno">no</must_till>
            <tillage_type description="Tillage type (user_defined, chisel, disc, planter)" type="list" listvalues="user_defined,chisel,disc,planter,burn,burn_90,graze,scarifier,rip,blade,tine">disc</tillage_type>
            <tillage_depth description="User_defined depth of seedbed preparation (mm)" type="text">100</tillage_depth>
            <tillage_f_incorp description="User_defined fraction of surface residues to incorporate (0-1)" type="text">1</tillage_f_incorp>
            <fraction description="Enter biomass removal fraction of growing weeds from field (0-1)" type="text">0.0</fraction>
            <tillage_cn_red description="cn reduction after tillage () : ">0</tillage_cn_red>
            <tillage_cn_rain description="amount of cummulative rain to dissipate tillage effects on cn () : ">0</tillage_cn_rain>
          </ui>
        </manager>
        <manager name="Sow WEEDS using a variable rule with intercropping">
          <script>
            <text>
         next = 1
         crop_in = 0
         blank = 'fallow'
         next_crop = blank
         crop_current = blank
         crop_current1 = blank
         crop_current2 = blank
         crop_sow = blank
         ready_for_next = 1
         ready_to_fert_pre_sow = 0
         days_last_year = 365
         fert_day_pre_sow = 0
         ready_to_till_pre_sow = 0
         till_day_pre_sow = 0
         days_after_weed_kill = 0

      </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
               if (next_crop = '[crop]' OR next_crop = blank OR '[rotation_exclude]' = 'yes') then


                  if (today = date('[date2]')) then
                     if ('[rotation_exclude]' = 'no') then
                        ready_for_next = 1
                     endif
                  endif

                  if (wd_sow_opp_num > 0) then
                     wd_sow_opp_days = wd_sow_opp_days + 1
                  else
                  endif

                  if (crop_in = 0 OR ('[cropmethod]' = 'intercrop'
                      AND weed.plant_status = 'out')
                      AND days_after_weed_kill > 0) then
                        if (date_within('[date1], [date2]') = 1) then
                           crop_sow = 'waiting'
                           surface_moist = (sw(1) - ll15(1)) / (dul(1)- ll15(1))
                           if ((rain[[rain_days]] >= [rain_amount]  AND  esw >= [esw_amount] AND
                                 (surface_moist <= [surface_up] and surface_moist >= [surface_low])) OR
                               ('[must_sow]' = 'yes' AND today = date('[date2]'))) THEN


                              if (wd_sow_opp_days >= [rain_days] OR wd_sow_opp_num = 0) then
                                 wd_sow_opp_num = wd_sow_opp_num + 1
                                 wd_sow_opp_days = 0
                              endif

                              if ((wd_sow_opp_num >= [sow_opp]) OR ('[must_sow]' = 'yes' AND today = date('[date2]')) then
                                 if (date_within('[date1], [date_ch1]') = 1) then
                                    weed sow crop_class = [cla], plants = [density] (plants/m2), sowing_depth = [depth], cultivar = [cultivar1], row_spacing = [row_spacing]
                                 else
                                    weed sow crop_class = [cla], plants = [density] (plants/m2), sowing_depth = [depth], cultivar = [cultivar2], row_spacing = [row_spacing]
                                 endif
                                 crop_in = crop_in + 1
                                 if ('[rotation_exclude]' = 'no') then
                                    ready_for_next = 1
                                 endif
                                 crop_current2 = crop_current1
                                 crop_current1 = crop_current
                                 crop_current = '[crop]'
                                 crop_sow = '[crop]'
                              else
                                 !not this opportunity
                              endif
                        endif
                     endif
                  endif
               endif
                           ]]></text>
            <event>process</event>
          </script>
          <script>
            <text><![CDATA[

               days_after_weed_kill = days_after_weed_kill + 1

               if (next_crop = '[crop]' OR next_crop = blank OR '[rotation_exclude]' = 'yes') then
                  !   Tillage - presowing seedbed preparation
                  if ( [till_days_pre_sow] > 0) then
                     ! calculate presowing tillage date
                     till_day_pre_sow = date('[date1]') - [till_days_pre_sow]
                     ! Need to correct for possible year boundary condition
                     if (till_day_pre_sow < today) then
                        till_day_pre_sow = days_this_year + till_day_pre_sow
                     endif
                     if (today = till_day_pre_sow) then
                        ready_to_till_pre_sow = 1
                     endif
                     if ((crop_in = 0 OR '[must_till]' = 'yes') AND (ready_to_till_pre_sow = 1)) then
                        ! tillage
                        if (weed.plant_status <> 'out') then
                           weed harvest, remove=[fraction]
                           weed kill_crop
                           weed end_crop
                           crop_in = crop_in - 1
                          if (crop_current = 'weed') then
                              crop_current = crop_current1
                              crop_current1 = crop_current2
                              crop_current2 = blank
                           elseif (crop_current1 = 'weed') then
                              crop_current1 = crop_current2
                              crop_current2 = blank
                           elseif (crop_current2 = 'weed') then
                              crop_current2 = blank
                           endif
                        endif
                     endif
                  endif
               endif


               if (date_within('[date1], [date2]') = 1) THEN
               else
                  wd_sow_opp_num = 0
                  wd_sow_opp_days = 0
               endif

            ]]></text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Crop properties" />
            <crop type="crop" description="Name of this crop">weed</crop>
            <cultivar1 type="list" listvalues="late, early" description="Enter first type"> early</cultivar1>
            <cla type="list" listvalues="winter_grass, winter_dicot, summer_grass, perennial_legume" description="Enter class type "> summer_grass</cla>
            <date_ch1 type="ddmmmdate" description="Enter type change date (dd-mmm)">1-jul</date_ch1>
            <cultivar2 type="list" listvalues="late, early" description="Enter second type">late</cultivar2>
            <cropmethod type="list" listvalues="sole, intercrop" description="Method of cropping">intercrop</cropmethod>
            <rotation_exclude type="yesno" description="Exclude from rotation sequence">yes</rotation_exclude>
            <category name="Sowing criteria" />
            <date1 type="ddmmmdate" description="Enter sowing window START date (dd-mmm)">01-oct</date1>
            <date2 type="ddmmmdate" description="Enter sowing window END date (dd-mmm)">30-apr</date2>
            <must_sow type="yesno" description="Must Sow">no</must_sow>
            <rain_amount type="text" description="Enter amount of rainfall (mm)">10</rain_amount>
            <rain_days type="text" description="Enter number of days of rainfall (days)">5</rain_days>
            <esw_amount type="text" description="Enter amount of soil water (mm)">5</esw_amount>
            <sow_opp type="text" description="Enter sowing opportunity number to sow on (1..n)">1</sow_opp>
            <surface_up type="text" description="Enter upper limit of sw in top layer (0-2) (mm esw/mm soil)">2</surface_up>
            <surface_low type="text" description="Enter lower limit of sw in top layer (0-1) (mm esw/mm soil)">0</surface_low>
            <category name="Sowing specs" />
            <density type="text" description="Enter sowing density  (plants/m2)">5</density>
            <depth type="text" description="Enter sowing depth  (mm)">15</depth>
            <row_spacing type="text" description="Enter row spacing  (mm)">350</row_spacing>
            <category name="Seed-bed Tillage Preparation" />
            <till_days_pre_sow type="text" description="Enter number of days before window to prepare seed-bed (days)">0</till_days_pre_sow>
            <must_till type="yesno" description="Must Till">no</must_till>
            <tillage_type type="list" listvalues="user_defined, chisel, disc, planter,burn, burn_90, graze, scarifier, rip, blade, tine" description="Tillage type">disc</tillage_type>
            <tillage_depth type="text" description="User_defined depth of seedbed preparation (mm)">100</tillage_depth>
            <tillage_f_incorp type="text" description="User_defined fraction of surface residues to incorporate (0-1)">1</tillage_f_incorp>
            <fraction type="text" description="Enter biomass removal fraction of growing weeds from field (0-1)">0.0</fraction>
          </ui>
        </manager>
        <manager name="Rotations with Intercrop">
          <script>
            <text>
         next = 1
         crop_in = 0
         blank = 'fallow'
         next_crop = blank
         crop_current = blank
         crop_current1 = blank
         crop_current2 = blank
         crop_sow = blank
         ready_for_next = 1
         ready_to_fert_pre_sow = 0
         days_last_year = 365
         fert_day_pre_sow = 0
         ready_to_till_pre_sow = 0
         till_day_pre_sow = 0
         days_after_weed_kill = 0

      </text>
            <event>init</event>
          </script>
          <script>
            <text>
         if (ready_for_next = 1) then
            if      (next = 1) THEN
               next_crop = '[crop01]'
               next = 2
            elseif      (next = 2) THEN
               next_crop = '[crop02]'
               next = 3
            elseif (next = 3) THEN
               next_crop = '[crop03]'
               next = 4
            elseif (next = 4) THEN
               next_crop = '[crop04]'
               next = 5
            elseif (next = 5) THEN
               next_crop = '[crop05]'
               next = 6
            elseif (next = 6) THEN
               next_crop = '[crop06]'
               next = 7
            elseif (next = 7) THEN
               next_crop = '[crop07]'
               next = 8
            elseif (next = 8) THEN
               next_crop = '[crop08]'
               next = 9
            elseif (next = 9) THEN
                  next_crop = '[crop09]'
                  next = 10
            elseif (next = 10) THEN
                  next_crop = '[crop10]'
                  next = 11
            elseif (next = 11) THEN
                  next_crop = '[crop11]'
                  next = 12
            elseif (next = 12) THEN
                  next_crop = '[crop12]'
                  next = 13
            elseif (next = 13) THEN
                  next_crop = '[crop13]'
                  next = 14
            elseif (next = 14) THEN
                  next_crop = '[crop14]'
                  next = 15
            elseif (next = 15) THEN
                  next_crop = '[crop15]'
                  next = 16
            elseif (next = 16) THEN
                  next_crop = '[crop16]'
                  next = 17
            elseif (next = 17) THEN
                  next_crop = '[crop17]'
                  next = 18
            elseif (next = 18) THEN
                  next_crop = '[crop18]'
                  next = 19
            elseif (next = 19) THEN
                  next_crop = '[crop19]'
                  next = 20
            elseif (next = 20) THEN
                  next_crop = '[crop20]'
                  next = 1
            endif
            if (next_crop = 'nil' OR next_crop = blank) THEN
               next_crop = '[crop01]'
               next = 2
            endif
            ready_for_next = 0
         endif

            ! treat fallow as a crop - its window starts when the other fallow finishes
            ! assume initiation (sowing) of fallow takes place when previous fallow finishes
            ! or when previous crop is harvested, whichever is the latest.
            ! Assume fallow finishes (harvested) at end of fallow date.

         if (next_crop = '[winterf_name]') then
               ! initiate (sow)
            if ((crop_in = 0)
              OR (crop_in = 1 AND (crop_current = 'weed' OR crop_current1 = 'weed' OR crop_current2 = 'weed'))) then
               if (date_within('[summerf_d2], [winterf_d2]') then
                  crop_in = crop_in + 1
                  ready_for_next = 1
                  crop_current2 = crop_current1
                  crop_current1 = crop_current
                  crop_current = '[winterf_name]'
                  crop_sow = '[winterf_name]'
                  ready_to_fert_pre_sow = 0
               endif
            endif

         elseif (next_crop = '[summerf_name]') then
              ! initiate (sow)
            if ((crop_in = 0)
              OR (crop_in = 1 AND (crop_current = 'weed' OR crop_current1 = 'weed' OR crop_current2 = 'weed'))) then
               if (date_within('[winterf_d2], [summerf_d2]') then
                  crop_in = crop_in + 1
                  ready_for_next = 1
                  crop_current2 = crop_current1
                  crop_current1 = crop_current
                  crop_current = '[summerf_name]'
                  crop_sow = '[summerf_name]'
                  ready_to_fert_pre_sow = 0
               endif
            endif
         endif

         if (crop_current = '[winterf_name]'
          OR crop_current1 = '[winterf_name]'
          OR crop_current2 = '[winterf_name]') then
               ! terminate (harvest)
            if (today = date('[winterf_d2]')+1) then
               crop_in = crop_in - 1
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            endif
         elseif (crop_current = '[summerf_name]'
              OR crop_current1 = '[summerf_name]'
              OR crop_current2 = '[summerf_name]') then
               ! terminate (harvest)
            if (today = date('[summerf_d2]')+1) then
               crop_in = crop_in - 1
               crop_current = crop_current1
               crop_current1 = crop_current2
               crop_current2 = blank
            endif
         endif

      </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Fallow properties" />
            <summerf_name description="summer fallow name : " type="text">sf</summerf_name>
            <summerf_d2 description="summer fallow END   (dd-mmm) : " type="ddmmmdate">15-mar</summerf_d2>
            <winterf_name description="winter fallow name : " type="text">wf</winterf_name>
            <winterf_d2 description="winter fallow END   (dd-mmm) : " type="ddmmmdate">23-aug</winterf_d2>
            <category name="Crop and fallow rotation sequence - finish with nil" />
            <crop01 description="1 : " type="crop">sf  </crop01>
            <crop02 description="2 : " type="crop">wf </crop02>
            <crop03 description="3 : " type="crop">sf </crop03>
            <crop04 description="4 : " type="crop">wf </crop04>
            <crop05 description="5 : " type="crop">sf </crop05>
            <crop06 description="6 : " type="crop">wf </crop06>
            <crop07 description="7 : " type="crop">sf </crop07>
            <crop08 description="8 : " type="crop">wf </crop08>
            <crop09 description="9 : " type="crop">sf </crop09>
            <crop10 description="10 : " type="crop">wf  </crop10>
            <crop11 description="11 : " type="crop">sf  </crop11>
            <crop12 description="12 : " type="crop">wf  </crop12>
            <crop13 description="13 : " type="crop">sf  </crop13>
            <crop14 description="14 : " type="crop">wf  </crop14>
            <crop15 description="15 : " type="crop">sf  </crop15>
            <crop16 description="16 : " type="crop">wf  </crop16>
            <crop17 description="17 : " type="crop">sf  </crop17>
            <crop18 description="18 : " type="crop">wf  </crop18>
            <crop19 description="19 : " type="crop">sf  </crop19>
            <crop20 description="20 : " type="crop">wf  </crop20>
          </ui>
        </manager>
        <manager name="Weeding at threshold weed biomass or maximum days">
          <script>
            <text>
          daemerge = 0
      </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
         if ((crop_in >= 1)
            AND (weed.plant_status <> 'out')) then
            if (weed.stage >= 3.0) then
               daemerge = daemerge + 1
            endif

            if (weed.biomass > [weed_biomass] OR daemerge >= [weed_interval]) then
               if ((crop_in > 1 AND [weed_maxno_in] > weed_count_in) OR (crop_in = 1 AND [weed_maxno_out] > weed_count_out)) then
                  if (crop_in > 1) then
                     weed_count_in = weed_count_in + 1
                  elseif (crop_in = 1) then
                     weed_count_out = weed_count_out + 1
                  endif
                  weed harvest, remove = [fraction]
                  weed kill_crop plants_kill_fraction = [thin_fraction]
                  if ([thin_fraction] = 1.0) then
                     weed end_crop
                     days_after_weed_kill = 0
                 else
                  endif
                  '[surfaceommodule]' tillage type = [tillage_type], f_incorp = [f_incorp], tillage_depth = [tillage_depth]
                  if ([thin_fraction] = 1.0) then
                    crop_in = crop_in - 1
                    if (crop_current = 'weed') then
                        crop_current = crop_current1
                        crop_current1 = crop_current2
                        crop_current2 = blank
                     elseif (crop_current1 = 'weed') then
                        crop_current1 = crop_current2
                        crop_current2 = blank
                     elseif (crop_current2 = 'weed') then
                        crop_current2 = blank
                     endif
                     daemerge = 0
                  else
                  endif
               else
               endif
            else
            endif
         else
            daemerge = 0
         endif

         if (((crop_in = 1)
            AND (weed.plant_status <> 'out'))
            OR (crop_in = 0)) then
            weed_count_in = 0
         else
            weed_count_out = 0
         endif
      ]]></text>
            <event>end_of_day</event>
          </script>
          <ui>
            <category name="Weeding properties" />
            <weed_interval description="Maximum days after emergence to weed (days) : " type="text">30</weed_interval>
            <weed_biomass description="Weeding biomass threshold to weed (kg/ha) : " type="text">100</weed_biomass>
            <weed_maxno_in description="Maximum number of in-crop weedings (1..n) : " type="text">2</weed_maxno_in>
            <weed_maxno_out description="Maximum number of fallow weedings (1..n) : " type="text">0</weed_maxno_out>
            <thin_fraction description="Enter fraction of weed population weeded (0-1) : " type="text">1.0</thin_fraction>
            <fraction description="Enter biomass removal fraction from field (0-1) : " type="text">0.0</fraction>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <tillage_type description="Enter name of tillage type : " type="text">user_defined</tillage_type>
            <f_incorp description="Enter fraction of surface residues incorporated into soil (0-1) : " type="text">0.1</f_incorp>
            <tillage_depth description="Enter depth of incorporation of surface residues (mm) : " type="text">25</tillage_depth>
          </ui>
        </manager>
        <manager name="Remove all residues on a fixed date">
          <script>
            <text>
         if today = date('[date]') then
            '[surfaceommodule]' tillage type = user_defined, f_incorp = 1.0 (), tillage_depth = 0.0 ()
         endif
            </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Removal criteria" />
            <date description="Date to remove residues (dd-mmm) :" type="ddmmmdate">1-may</date>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
          </ui>
        </manager>
        <manager name="Remove residues at harvest">
          <script>
            <text>
               last_stage_name = 'none'
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
         if [crop].StageName <> last_stage_name  then
            if ([crop].StageName = 'out') then
               '[surfaceommodule]' tillage type = user_defined, f_incorp = [fraction] (), tillage_depth = 0.0 ()
            endif
         endif
         last_stage_name = [crop].StageName
            ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Removal criteria" />
            <crop description="Name of crop harvest to trigger residue removal" type="crop">weed</crop>
            <surfaceommodule type="modulename" description="Name of your surface organic matter module : ">surface organic matter</surfaceommodule>
            <fraction description="Enter biomass removal fraction from field (0-1) : " type="text">0.0</fraction>
          </ui>
        </manager>
      </folder>
    </folder>
    <folder name="Stock">
      <folder name="Cattle">
        <manager name="Buy cattle on a fixed date">
          <script>
            <text>
               cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
        if (today = date('[buy_date]') then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           cattle_presence = 'on'
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <buy_date type="text" description="Date (dd-mmm) : ">1-jan</buy_date>
            <buy_number type="text" description="Number of stock : ">5</buy_number>
            <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
          </ui>
        </manager>
        <manager name="Buy cattle on a fixed days after sowing">
          <script>
            <text>
               cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
        if (DaysAfterSowing = [buy_das]) then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           cattle_presence = 'on'
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <buy_das type="text" description="Days after sowing : ">30</buy_das>
            <buy_number type="text" description="Number of stock : ">5</buy_number>
            <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
          </ui>
        </manager>
        <manager name="Move cattle on a fixed date">
          <script>
            <text>
               cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
         if (today = date('[move_date]') then
               stockage = [sellpaddock].[sellstockmodule].age_all/30.4375
               stockwt = [sellpaddock].[sellstockmodule].weight_all
               stocknumber = [sellpaddock].[sellstockmodule].number_all
               [sellpaddock].[sellstockmodule]scienceconverter sellstock number = stocknumber (-)
               [buypaddock].[buystockmodule]scienceconverter buystock number = stocknumber (-), genotype = '[genotype]', sex = [sex], age = stockage (months), weight = stockwt (kg)
        endif
        </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Move properties" />
            <sellpaddock type="modulename" description="Name of sell paddock : ">Paddock</sellpaddock>
            <sellstockmodule type="modulename" description="Name of stock module in sell paddock : ">stock</sellstockmodule>
            <buypaddock type="modulename" description="Name of buy paddock : ">Paddock</buypaddock>
            <buystockmodule type="modulename" description="Name of stock module in buy paddock: ">stock</buystockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <move_date type="text" description="Date (dd-mmm) : ">1-jan</move_date>
          </ui>
        </manager>
        <manager name="Move cattle on a minimum weight gain OR at flowering">
          <script>
            <text>
               [sellpaddock]_cattle_presence = 'off'
               [buypaddock]_cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ([sellpaddock].[sellstockmodule].number_all > 0) then
               [sellpaddock]_cattle_presence = 'on'
            endif
          if (([sellpaddock].[sellstockmodule].wt_change_all <= [minimum_wt_change] OR [buypaddock].[herbage_module].StageName = 'flowering') AND [sellpaddock]_cattle_presence = 'on') then
               stockage = [sellpaddock].[sellstockmodule].age_all/30.4375
               stockwt = [sellpaddock].[sellstockmodule].weight_all
               stocknumber = [sellpaddock].[sellstockmodule].number_all
               [sellpaddock].[sellstockmodule]scienceconverter sellstock number = stocknumber (-)
               [buypaddock].[buystockmodule]scienceconverter buystock number = stocknumber (-), genotype = '[genotype]', sex = [sex], age = stockage (months), weight = stockwt (kg)
               [sellpaddock]_cattle_presence = 'off'
               [buypaddock]_cattle_presence = 'on'
          endif
          ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Move properties" />
            <sellpaddock type="modulename" description="Name of sell paddock : ">Paddock</sellpaddock>
            <sellstockmodule type="modulename" description="Name of stock module in sell paddock : ">stock</sellstockmodule>
            <buypaddock type="modulename" description="Name of buy paddock : ">Paddock</buypaddock>
            <buystockmodule type="modulename" description="Name of stock module in buy paddock: ">stock</buystockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <minimum_wt_change type="text" description="Minimum weight gain (kg/day) : ">0</minimum_wt_change>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
          </ui>
        </manager>
        <manager name="Buy cattle on feed-on-offer">
          <script>
            <text>
               cattle_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ([stockmodule].number_all > 0) then
               cattle_presence = 'on'
            endif
        if ([herbage_module].biomass >= [buy_feed_on_offer] AND cattle_presence = 'off') then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           cattle_presence = 'on'
        endif
               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <buy_feed_on_offer type="text" description="Feed on offer (kg/ha) : ">1500.0</buy_feed_on_offer>
            <buy_number type="text" description="Number of stock : ">5</buy_number>
            <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
          </ui>
        </manager>
        <manager name="Buy cattle on feed-on-offer test">
          <script>
            <text>
               [paddockname]_cattle_presence = 'off'
               buy_count = 0
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ('[paddockname]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if ([herbage_module].StageName = 'out') then
                 buy_count = 0
              endif
              if ([herbage_module].biomass >= [buy_feed_on_offer] AND cattle_presence = 'off' AND buy_count = 0) then
                 [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
                 cattle_presence = 'on'
                 buy_count = buy_count + 1
              endif
           else
               if ([paddockname].[stockmodule].number_all > 0) then
                  [paddockname]_cattle_presence = 'on'
               endif
              if ([paddockname].[herbage_module].StageName = 'out') then
                 buy_count = 0
              endif
              if ([paddockname].[herbage_module].biomass >= [buy_feed_on_offer] AND cattle_presence = 'off' AND buy_count = 0) then
                 [paddockname].[stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
                 [paddockname]_cattle_presence = 'on'
                 buy_count = buy_count + 1
              endif
           endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <paddockname type="modulename" description="Name of paddock (nil if none) : ">nil</paddockname>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="Angus,ayrshire,beef shorthorn,brahman,brahman x british,brown swiss,charolais,charolais x british,charolais x friesian,charolais x holstein,chianina,dairy shorthorn,fresian,fresian x british,guernsey,hereford,holstein,holstein x british,jersey,limousein,sahiwal,simmental,south devon" description="Select Genotype : ">Angus</genotype>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <buy_feed_on_offer type="text" description="Feed on offer (kg/ha) : ">1500.0</buy_feed_on_offer>
            <buy_number type="text" description="Number of stock : ">5</buy_number>
            <sex type="list" listvalues="cow,heifer,steer,bull" description="Select sex : ">steer</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">250</buy_weight>
          </ui>
        </manager>
        <manager name="Sell cattle on a fixed date">
          <script>
            <text>
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if (today = date('[sell_date]') AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
              endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_date type="text" description="Date (dd-mmm) : ">1-jan</sell_date>
            <sell_number type="text" description="Number of stock : ">5</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle on weight test">
          <script>
            <text><![CDATA[
           if ('[sellpaddock]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
             if ((stock.weight >= [sell_on_weight]) AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
             endif
           else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
             if ([sellpaddock].[stockmodule].weight_all >= [sell_on_weight]) AND cattle_presence = 'on') then
                 [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 [sellpaddock]_cattle_presence = 'off'
              endif
           endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_on_weight type="text" description="LiveWeight for sale : ">350.0</sell_on_weight>
            <sell_number type="text" description="Number of stock : ">100</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle on weight loss">
          <script>
            <text>
            numdaysweightloss = 0
        </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if ('[sellpaddock]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if ([stockmodule].wt_change_all < 0.0) then
                 numdaysweightloss = numdaysweightloss + 1
              endif
              if ((numdaysweightloss >= [sell_on_days_weight_loss]) AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
                 maxstockwt = -1
              endif
            else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
               if ([sellpaddock]_cattle_presence = 'on') then
                  if ([sellpaddock].[stockmodule].wt_change_all < 0.0) then
                     numdaysweightloss = numdaysweightloss + 1
                  else
                     numdaysweightloss = 0
                  endif
               endif
               if ((numdaysweightloss >= [sell_on_days_weight_loss]) AND [sellpaddock]_cattle_presence = 'on') then
                  [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                  [sellpaddock]_cattle_presence = 'off'
               endif
            endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_on_days_weight_loss type="text" description="Number of days of weight loss : ">2.0</sell_on_days_weight_loss>
            <sell_number type="text" description="Number of stock : ">100</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle below minimum declining weight change">
          <script>
            <text>
            numdaysweightchange = 0
            wt_change_yesterday = 0
        </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if ('[sellpaddock]' = 'nil') then
              if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
              endif
              if (cattle_presence = 'on') then
                 if ([stockmodule].wt_change_all < [sell_min_weight_change] AND [stockmodule].wt_change_all < wt_change_yesterday)then
                    numdaysweightchange = numdaysweightchange + 1
                 else
                    numdaysweightchange = 0
                 endif
              endif
              if ((numdaysweightchange >= [sell_on_days_weight_change] OR ([stockmodule].intake_all < 0.001)) AND cattle_presence = 'on') then
                 [stockmodule].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
                 maxstockwt = -1
              endif
              wt_change_yesterday = wt_change_all
            else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
               if ([sellpaddock]_cattle_presence = 'on') then
                  if ([sellpaddock].[stockmodule].wt_change_all < [sell_min_weight_change] AND [sellpaddock].[stockmodule].wt_change_all < wt_change_yesterday) then
                     numdaysweightchange = numdaysweightchange + 1
                  else
                     numdaysweightchange = 0
                  endif
               endif
               if ((numdaysweightchange >= [sell_on_days_weight_change] OR ([sellpaddock].[stockmodule].intake_all < 0.001)) AND [sellpaddock]_cattle_presence = 'on') then
                  [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                  [sellpaddock]_cattle_presence = 'off'
               endif
               wt_change_yesterday = [sellpaddock].[stockmodule].wt_change_all
            endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_min_weight_change type="text" description="Minimum Weight change : ">0.2</sell_min_weight_change>
            <sell_on_days_weight_change type="text" description="Number of days below weight change : ">2.0</sell_on_days_weight_change>
            <sell_number type="text" description="Number of stock : ">100</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle on minimum condition score change">
          <script>
            <text>
            numdays_cond_score_diminishing = 0
            cond_score_yesterday = 0
        </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if ('[sellpaddock]' = 'nil') then
               if ([stockmodule].number_all > 0) then
                  cattle_presence = 'on'
               endif
              if (cattle_presence = 'on') then
                 cond_score_change = [stockmodule].cond_score - cond_score_yesterday
                 if (cond_score_change < [sell_min_cond_score_change])then
                    numdays_cond_score_diminishing = numdays_cond_score_diminishing + 1
                 else
                    numdays_cond_score_diminishing = 0
                 endif
              endif
              if ((numdays_cond_score_diminishing >= [sell_on_days_cond_score_change] OR ([stockmodule].intake_all < 0.001)) AND cattle_presence = 'on') then
                 [stockmodule]scienceconverter sellstock number = [sell_number] (-)
                 cattle_presence = 'off'
                 maxstockwt = -1
              endif
              cond_score_change_yesterday = cond_score_change
              cond_score_yesterday = cond_score
            else
               if (sellpaddock].[stockmodule].number_all > 0) then
                  [sellpaddock]_cattle_presence = 'on'
               endif
               if ([sellpaddock]_cattle_presence = 'on') then
                  cond_score_change = [sellpaddock].[stockmodule].cond_score - cond_score_yesterday
                  if (cond_score_change < [sell_min_cond_score_change]) then
                     numdays_cond_score_diminishing = numdays_cond_score_diminishing + 1
                  else
                     numdays_cond_score_diminishing = 0
                  endif
               endif
               if ((numdays_cond_score_diminishing >= [sell_on_days_cond_score_change] OR ([sellpaddock].[stockmodule].intake_all < 0.001)) AND [sellpaddock]_cattle_presence = 'on') then
                  [sellpaddock].[stockmodule]scienceconverter sellstock number = [sell_number] (-)
                  [sellpaddock]_cattle_presence = 'off'
               endif
               cond_score_yesterday = [sellpaddock].[stockmodule].cond_score
            endif
         ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <sellpaddock type="modulename" description="Name of paddock: ">nil</sellpaddock>
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_min_cond_score_change type="text" description="Minimum condition score change : ">-0.001</sell_min_cond_score_change>
            <sell_on_days_cond_score_change type="text" description="Number of days below cond score change : ">2.0</sell_on_days_cond_score_change>
            <sell_number type="text" description="Number of stock : ">100</sell_number>
          </ui>
        </manager>
        <manager name="Sell cattle on weight">
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               cattle_presence = 'on'
            endif
        if (([stockmodule].weight >= [sell_on_weight_gain] OR [stockmodule].weight <= [sell_on_weight_loss]) AND cattle_presence = 'on') then
           [stockmodule]scienceconverter sellstock number = [sell_number] (-)
           cattle_presence = 'off'
        endif
               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_on_weight_gain type="text" description="Weight (gaining) : ">350.0</sell_on_weight_gain>
            <sell_on_weight_loss type="text" description="Weight (losing) : ">0.0</sell_on_weight_loss>
            <sell_number type="text" description="Number of stock : ">5</sell_number>
          </ui>
        </manager>
      </folder>
      <folder name="Sheep">
        <manager name="Buy sheep on a fixed date">
          <script>
            <text>
               sheep_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text>
        if (today = date('[buy_date]') then
           [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
           sheep_presence = 'on'
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="black face x white face,birder keucester, border leicester x merino,columbia,corriedale,delaine-merino,dorset x merino,dorset,finnsheep,hampshire,large merino,medium merino,small merino,polwarth,polypay,romney,ryeland,southdown,suffolk,targhee,texel,US corriedale,US romney,US southdown,US suffolk" description="Select Genotype : ">suffolk</genotype>
            <buy_date type="text" description="Date (dd-mmm) : ">1-jan</buy_date>
            <buy_number type="text" description="Number of stock : ">50</buy_number>
            <sex type="list" listvalues="ewe,wether,ram,crypto" description="Select sex : ">wether</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">45</buy_weight>
          </ui>
        </manager>
        <manager name="Buy sheep on feed-on-offer">
          <script>
            <text>
               sheep_presence = 'off'
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
           if ([herbage_module].biomass >= [buy_feed_on_offer] AND sheep_presence = 'off') then
              [stockmodule]scienceconverter buystock number = [buy_number] (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
              sheep_presence = 'on'
            endif
               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="black face x white face,birder keucester, border leicester x merino,columbia,corriedale,delaine-merino,dorset x merino,dorset,finnsheep,hampshire,large merino,medium merino,small merino,polwarth,polypay,romney,ryeland,southdown,suffolk,targhee,texel,US corriedale,US romney,US southdown,US suffolk" description="Select Genotype : ">suffolk</genotype>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <buy_feed_on_offer type="text" description="Feed on offer (kg/ha) : ">1500.0</buy_feed_on_offer>
            <buy_number type="text" description="Number of stock : ">50</buy_number>
            <sex type="list" listvalues="ewe,wether,ram,crypto" description="Select sex : ">wether</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">45</buy_weight>
          </ui>
        </manager>
        <manager name="Buy variable sheep on green feed-on-offer">
          <script>
            <text>
              sheep_presence = 'off'
              grazing_no = 0
              grazing_days = 0
              gpsm2kgpha = 10.0
              stem_discount = 0.17
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
            if sheep_presence = 'on' then
               grazing_days = grazing_days + 1
            else
               grazing_days = 0
            endif
            feed_on_offer = ([herbage_module].LeafGreenWt + ([herbage_module].StemGreenWt * stem_discount)) * gpsm2kgpha
            if ((([herbage_module].Stage >= 5) or (feed_on_offer  > [buy_green_leaf_on_offer])) and (sheep_presence = 'off')) then
                leaf = [herbage_module].LeafGreenWt) + [herbage_module].dlt_dm_green_leaf*[est_grazing_days]
                stem = [herbage_module].StemGreenWt) + [herbage_module].dlt_dm_green_stem*[est_grazing_days]
                stock_in = ((leaf + stem * stem_discount) * gpsm2kgpha / ([est_grazing_days] * [est_intake_day]) + 0.5)

                if (stock_in >= [min_buy_number]) then
                   grazing_days = 0
                   [stockmodule]scienceconverter buystock number = stock_in (-), genotype = '[genotype]', sex = [sex], age = [buy_age] (months), weight = [buy_weight] (kg)
                   sheep_presence = 'on'
                else
                   sheep_presence = 'off'
                endif
            endif
                              ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <genotype type="list" listvalues="black face x white face,border leicester,border leicester x merino,columbia,corriedale,delaine-merino,dorset x merino,dorset,finnsheep,hampshire,large merino,medium merino,small merino,polwarth,polypay,romney,ryeland,southdown,suffolk,targhee,texel,US corriedale,US romney,US southdown,US suffolk" description="Select Genotype : ">suffolk</genotype>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <buy_green_leaf_on_offer type="text" description="Green feed-on-offer (kg/ha) : ">100.0</buy_green_leaf_on_offer>
            <est_grazing_days type="text" description="Estimated grazing period (days) : ">10</est_grazing_days>
            <est_intake_day type="text" description="Estimated feed intake (kg/head/day) : ">1.2</est_intake_day>
            <min_buy_number type="text" description="Threshold buy number below which no stock are bought : ">30</min_buy_number>
            <sex type="list" listvalues="ewe,wether,ram,crypto" description="Select sex : ">wether</sex>
            <buy_age type="text" description="Age (months) : ">12</buy_age>
            <buy_weight type="text" description="Weight (kg) : ">45</buy_weight>
          </ui>
        </manager>
        <manager name="Sell sheep on a fixed date">
          <script>
            <text>
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
        if (today = date('[sell_date]') AND sheep_presence = 'on') then
           [stockmodule]scienceconverter sellstock number = [sell_number] (-)
           sheep_presence = 'off'
        endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_date type="text" description="Date (dd-mmm) : ">1-jan</sell_date>
            <sell_number type="text" description="Number of stock : ">50</sell_number>
          </ui>
        </manager>
        <manager name="Sell sheep on weight">
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
        if (([stockmodule].weight >= [sell_on_weight_gain] OR [stockmodule].weight <= [sell_on_weight_loss]) AND sheep_presence = 'on') then
           [stockmodule]scienceconverter sellstock number = [sell_number] (-)
           sheep_presence = 'off'
        endif
               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <sell_on_weight_gain type="text" description="Weight (gaining) : ">60.0</sell_on_weight_gain>
            <sell_on_weight_loss type="text" description="Weight (losing) : ">0.0</sell_on_weight_loss>
            <sell_number type="text" description="Number of stock : ">50</sell_number>
          </ui>
        </manager>
        <manager name="Sell sheep on green feed-on-offer">
          <script>
            <text>
              gpsm2kgpha = 10.0
              stem_discount = 0.17
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
           if ( [stockmodule].number_all > 0) then
               sheep_presence = 'on'
            endif
           feed_on_offer = ([herbage_module].LeafGreenWt + ([herbage_module].StemGreenWt * stem_discount)) * gpsm2kgpha
            if (feed_on_offer < [sell_on_green_leaf] and sheep_presence = 'on') then
                stock_sell = [stockmodule].number_all
                [stockmodule]scienceconverter sellstock number = stock_sell
                sheep_presence = 'off'
            endif
                              ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Sell properties" />
            <stockmodule type="modulename" description="Name of stock module : ">stock</stockmodule>
            <herbage_module type="modulename" description="Module supplying herbage : ">lucerne</herbage_module>
            <sell_on_green_leaf type="text" description="Green feed-on-offer (kg/ha) : ">50.0</sell_on_green_leaf>
          </ui>
        </manager>
      </folder>
      <folder name="Supplement">
        <manager name="Buy supplement on a fixed date">
          <script>
            <text>
        if (today = date('[buy_date]') then
           [supplementmodule]scienceconverter buysupplement supplement = [buy_name] (-), amount = [buy_amount] (kg)
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Buy properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <buy_date type="text" description="Date (dd-mmm) : ">1-jan</buy_date>
            <buy_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</buy_name>
            <buy_amount type="text" description="Fresh weight of supplement to purchase (kg) : ">1000</buy_amount>
          </ui>
        </manager>
        <manager name="Mix supplement on a fixed date">
          <script>
            <text>
        if (today = date('[mix_date]') then
           [supplementmodule]scienceconverter mixsupplement src_store = [src_store_name] (-), amount = [mix_amount] (kg), dest_store = [dest_store_name] (-)
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Mix properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <mix_date type="text" description="Date (dd-mmm) : ">1-jan</mix_date>
            <src_store_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the source supplement store. : ">wheat</src_store_name>
            <dest_store_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the destination store. : ">wheat</dest_store_name>
            <mix_amount type="text" description="Fresh weight of supplement to transfer. (kg) : ">1000</mix_amount>
          </ui>
        </manager>
        <manager name="Feed supplement in a fixed date window">
          <script>
            <text>
        if (date_within('[feed_start_date], [feed_end_date]') = 1) then
           [supplementmodule]scienceconverter feedsupplement supplement = [feed_name] (-), amount = [feed_amount] (kg)
         endif
               </text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <feed_start_date type="text" description="Date (dd-mmm) : ">1-jan</feed_start_date>
            <feed_end_date type="text" description="Date (dd-mmm) : ">1-jan</feed_end_date>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
            <feed_amount type="text" description="Fresh weight of supplement to purchase (kg) : ">1000</feed_amount>
          </ui>
        </manager>
        <manager name="Feed supplement on animal condition">
          <script>
            <text>
         FALSE = 0
         TRUE = 1
         feeding = FALSE
         feed_rate = 0.0     ! Rate of feeding in kg FW/day
         feed_rate_factor = 0.2
         est_lag_days = 10.0 / feed_rate_factor
         initial_feed_rate = 0.0

            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            dlt_cond_score = cond_score_all - yest_cond_score_all
            yest_cond_score_all = cond_score_all
            if (feeding = TRUE AND cond_score_all = 0.0) then
               feeding = FALSE
            endif

            if ((feeding = FALSE) AND (cond_score_all < [crit_cs]) AND (dlt_cond_score < 0.0)) then
               feeding = TRUE
               feed_rate = initial_feed_rate
            else
               ! leave feeding as is
            endif

            if (feeding = TRUE) then
               feed_rate = feed_rate - feed_rate_factor * (cond_score_all + dlt_cond_score*est_lag_days - [crit_cs])
               if (feed_rate > [max_feed_rate]) then
                  feed_rate = [max_feed_rate]
               elseif (feed_rate < 0.0) then
                  feed_rate = 0.0
               endif
               if (feed_rate > 0) then
                   feed_amount = feed_rate * number_all
                   [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
               else
                  feed_rate = 0.0
               endif
            else
               feed_rate = 0.0
            endif

               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <crit_cs type="text" description="Critical condition score. 1.0 is sensible for dry stock : ">1.0</crit_cs>
            <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
          </ui>
        </manager>
        <manager name="Feed supplement on animal condition loss">
          <script>
            <text>
         FALSE = 0
         TRUE = 1
         feeding = FALSE
         feed_rate = 0.0     ! Rate of feeding in kg FW/day
         crit_cs = 0.0
         feed_rate_factor = 0.2
         est_lag_days = 10.0 / feed_rate_factor
         initial_feed_rate = 0.0
         yest_cond_score_all = 0.0
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
         dlt_cond_score = cond_score_all - yest_cond_score_all
         yest_cond_score_all = cond_score_all
            if (feeding = TRUE AND cond_score_all = 0.0) then
               crit_cs = 0.0
               feeding = FALSE
            endif

            if (dlt_cond_score[[days]] < [crit_condition_change] AND crit_cs <= 0.0) then
               crit_cs = cond_score_all
            endif
            if ((feeding = FALSE) AND (cond_score_all < crit_cs)) then
               feeding = TRUE
               feed_rate = initial_feed_rate
            else
               ! leave feeding as is
            endif

            if (feeding = TRUE) then
               feed_rate = feed_rate - feed_rate_factor * (cond_score_all + dlt_cond_score*est_lag_days - crit_cs)
               if (feed_rate > [max_feed_rate]) then
                  feed_rate = [max_feed_rate]
               elseif (feed_rate < 0.0) then
                  feed_rate = 0.0
               endif
               if (feed_rate > 0) then
                   feed_amount = feed_rate * number_all
                   [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
               else
                  feed_rate = 0.0
               endif
            else
               feed_rate = 0.0
            endif

               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <days type="text" description="Number of days to sum condition change : ">5</days>
            <crit_condition_change type="text" description="Critical condition change needed to start feeding (kg/head) : ">0.0</crit_condition_change>
            <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
          </ui>
        </manager>
        <manager name="Feed supplement on animal weight loss">
          <script>
            <text>
         FALSE = 0
         TRUE = 1
         feeding = FALSE
         feed_rate = 0.0     ! Rate of feeding in kg FW/day
         crit_wt = 0.0
         feed_rate_factor = 0.5
         est_lag_days = 10.0 / feed_rate_factor
         initial_feed_rate = 0.1
            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if (feeding = TRUE AND cond_score_all = 0.0) then
               crit_wt = 0.0
               feeding = FALSE
            endif

            if (wt_change_all[[days]] < [crit_wt_change] AND crit_wt <= 0.0) then
               crit_wt = weight_all
            endif
            if ((feeding = FALSE) AND (weight_all < crit_wt)) then
               feeding = TRUE
               feed_rate = initial_feed_rate
            else
               ! leave feeding as is
            endif

            if (feeding = TRUE) then
               feed_rate = feed_rate - feed_rate_factor * (weight_all + wt_change_all*est_lag_days - crit_wt)
               if (feed_rate > [max_feed_rate]) then
                  feed_rate = [max_feed_rate]
               elseif (feed_rate < 0.0) then
                  feed_rate = 0.0
               endif
               if (feed_rate > 0) then
                   feed_amount = feed_rate * number_all
                   [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
               else
                  feed_rate = 0.0
               endif
            else
               feed_rate = 0.0
            endif

               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <days type="text" description="Number of days to sum weight change : ">5</days>
            <crit_weight_change type="text" description="Critical weight change needed to start feeding (kg/head) : ">0.0</crit_weight_change>
            <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
          </ui>
        </manager>
        <manager name="Feed supplement to reach a target weight">
          <script>
            <text>
         feed_rate = 0.0     ! Rate of feeding in kg FW/day

            </text>
            <event>init</event>
          </script>
          <script>
            <text><![CDATA[
            if (date_within('[date_start_feed], [date_end_feed]') = 1) then
               days_left = date('[date_end_feed]') - date('[date_start_feed]')
               if (days_left < 0.0) then
                  days_left = days_left + 365.0
               endif
               if (days_left > 0) then
                  dwt_reqd = ([target_wt] - stock.weight_all) / days_left

                  feed_rate = feed_rate + (2.0 * (dwt_reqd - wt_change_all))
                  if (feed_rate > [max_feed_rate]) then
                     feed_rate = [max_feed_rate]
                  elseif (feed_rate < 0.0) then
                     feed_rate = 0.0
                  endif

                  if (feed_rate > 0) then
                     if (today = date('[date_start_feed]') then
                        feed_rate = feed_rate * 0.5
                     endif
                      feed_amount = feed_rate * number_all
                      [supplementmodule]scienceconverter feedsupplement  supplement = [feed_name], amount = feed_amount
                  else
                     feed_rate = 0.0
                  endif
               endif
            endif

               ]]></text>
            <event>start_of_day</event>
          </script>
          <ui>
            <category name="Feed properties" />
            <supplementmodule type="modulename" description="Name of supplement module : ">supplement</supplementmodule>
            <date_start_feed type="text" description="date to begin feeding (dd-mmm) : ">1-jan</date_start_feed>
            <date_end_feed type="text" description="date to end feeding (dd-mmm) : ">1-jan</date_end_feed>
            <target_wt type="text" description="Target weight per head to finish (kg) : ">1.0</target_wt>
            <max_feed_rate type="text" description="Maximum rate of feeding in kg FW/day; 1.0 is sensible for sheep : ">1.0</max_feed_rate>
            <feed_name type="list" listvalues="'barley- crushed','barley- whole','barley straw','beans- field','bran','brewers grains','canola meal','canola straw','citrus pulp- dry','coconut meal','cottonseed- whole','cottonseed meal','fish meal','groundnut meal','hay','lucerne pellets','lupins','linseed meal','maize','maize bran','maize gluten fd','maize straw','molasses','oats- crushed','oats- whole','oat bran','oat chaff','oat straw','peas','pea pod meal','pea straw','pellets','rice- crushed','rice- whole','rice bran','rice straw','rye','safflower meal','silage','sorghum','sorghum- whole','soya bean meal','sunflower meal','tallow','triticale- crushed','triticale- whole','urea','vetch grain','wheat- crushed','wheat- whole','wheat chaff','wheat pollard','wheat straw'" description="Name of the supplement to purchase : ">wheat</feed_name>
          </ui>
        </manager>
      </folder>
    </folder>
    <folder name="Tcl">
      <tclmanager name="TCL Manager (standalone)">
        <rule name="Logic">
          <script name="init">
            <text>
            </text>
            <event>init</event>
          </script>
          <script name="prepare">
            <text>
            </text>
            <event>prepare</event>
          </script>
          <script name="exit">
            <text>
            </text>
            <event>exit</event>
          </script>
        </rule>
        <rule name="Debugger">
          <script name="init">
            <event>init</event>
            <text><![CDATA[package require Tk
wm withdraw .

package require tkcon
tkcon show
tkcon title "Apsim Debugging Console"
puts "Commands:"
puts " 'c'       - Continue"
puts " 's <n>'   - Step n days (default 1)"
puts " 'p <what>'- Print apsim variable"
puts " 'b <cond>'- Set break condition"
set steps 1
update

# A 4 command debugger:
proc c {}      {uplevel #0 set steps -1}  ;# Continue
proc s {{n 1}} {uplevel #0 set steps $n}  ;# Step n days
proc p {var}   {apsimGet $var}            ;# print apsim variable
proc b {cond}  {global Conds; lappend Conds $cond} ;# set break condition
set Conds {}

# Link an apsim variable
proc link {apsimName tclName} {
   global $tclName; set $tclName {}
   trace variable $tclName r "getLinked $apsimName"
   trace variable $tclName w "setLinked $apsimName"
}
proc getLinked {a n1 n2 op} {uplevel #0 set $n1 [apsimGet $a]}
proc setLinked {a n1 n2 op} {apsimSet $a $n1}

]]></text>
          </script>
\          <script name="process"><event>process</event><text>update
foreach cond $Conds {
  if {[expr $cond]} {
    set steps 1
  }
}

incr steps -1
if {$steps == 0} {tkwait variable steps}
        </text></script></rule>
      </tclmanager>
      <farmmanager name="Farm Manager">
        <rule name="Farm logic">
          <script name="init">
            <text>
            </text>
            <event>init</event>
          </script>
          <script name="prepare">
            <text>
            </text>
            <event>prepare</event>
          </script>
          <script name="exit">
            <text>
            </text>
            <event>exit</event>
          </script>
        </rule>
      </farmmanager>
      <paddockmanager name="Paddock Manager">
        <rule name="Farm logic">
          <script name="init">
            <text>
            </text>
            <event>init</event>
          </script>
          <script name="prepare">
            <text>
            </text>
            <event>prepare</event>
          </script>
          <script name="exit">
            <text>
            </text>
            <event>exit</event>
          </script>
        </rule>
      </paddockmanager>
      <tclui name="R Graphics">
        <uiscript>
# Displays R graphics
trace remove variable XMLDoc read setXML
package require Tk

# Get the value of one of our parameters
proc getValue {id thing} {
   foreach node [$id childNodes] {
      if {[string equal -nocase [$node nodeName] $thing]} {
         return [$node text]
      }
   }
   return ""
}

# Set the value of our 'thing'
proc setValue {w thing what} {
   upvar #0 $w data
   foreach node [$data(docroot) childNodes] {
      if {[string equal -nocase [$node nodeName] $thing]} {
         $data(docroot) removeChild $node
      }
   }
   set node [$data(doc) createElement $thing]
   $node appendChild [$data(doc) createTextNode $what]
   $data(docroot) appendChild $node
}

proc appletInit {w} {
   upvar #0 $w data
   global XMLDoc GlobalXMLDoc
   package require tdom

   set data(doc) [dom parse $XMLDoc]
   set data(docroot) [$data(doc) documentElement]
   set data(rscript) [getValue $data(docroot) rscript]
   set data(gdocroot) [[dom parse $GlobalXMLDoc] documentElement]
}

# find input &amp; output files
proc findFiles {w} {
   global myName
   upvar #0 $w data
   set data(inputs) {}

   # Dodgy voodoo from ReporComponent.cpp - blame holzworth..
   foreach node [$data(gdocroot) selectNodes "//outputfile" ] {
       set simroot $node
       while {"$simroot" != "" &amp;&amp;
              [$simroot nodeName] != "simulation"} {
          set parent [$simroot getAttribute name]
          set simroot [$simroot parent]
       }
       set title [$simroot getAttribute name]
       set filename $title
       if {$parent != "paddock"} {
           set filename "$filename $parent"
       }

       if {[$node getAttribute "name"] != "outputfile"} {
           set filename "$filename [$node getAttribute name]"
       }
       set filename "$filename.out"
       lappend data(inputs) $filename
   }
   set data(output) [file join [string trim $myName].png]
   set data(outputScript) [file join [string trim $myName].R]
}

# See if we need to re-run the R script
proc checkAndLoad {w} {
   upvar #0 $w data

   set runAgain 0
   # Does it exist?
   if {[file exists $data(output)]} {
      set t [file mtime $data(output)]
   } else {
      set runAgain 1
      set t 0
   }
   # Are the inputs newer?
   foreach f $data(inputs) {
      if {[file mtime $f] &gt; $t} {
         set runAgain 1
      }
   }

   # See if a resize is needed
   package require Img
   if {!$runAgain &amp;&amp; [file exists $data(output)]} {
      set data(image) [image create photo -file $data(output)]
      if {[winfo width .] != [image width $data(image)] ||
          ([winfo height .]-30) != [image height $data(image)]} {
         set runAgain 1
      }
   }
   if { $runAgain } {
      regenerate $w
   } else {
      $w.l config -image $data(image)
      set data(message) "No update of \"$data(output)\" needed"; update
   }
}

# Run the R script
proc regenerate {w} {
   upvar #0 $w data
   package require registry
   set data(message) "Running R"; update

   set width [winfo width .]
   if {$width &lt; 500} {set width 500}
   set height [expr [winfo height .]-30]
   if {$height &lt; 500} {set height 500}

   set fp [open $data(outputScript) w]
   puts $fp "outputWidth &lt;- $width"
   puts $fp "outputHeight &lt;- $height"
   puts $fp "inputs &lt;- c(\"[join $data(inputs) \",\"]\")"
   puts $fp "output &lt;- \"$data(output)\""
   puts $fp "$data(rscript)"
   close $fp

   set path [registry get HKEY_LOCAL_MACHINE\\software\\R-core\\R InstallPath]
   set rterm [file norm $path]/bin/rterm.exe

   catch {
     exec $rterm --slave --vanilla &lt; $data(outputScript)
   } msg

   if {[file exists $data(output)]} {
      set data(image) [image create photo -file $data(output)]
      $w.l config -image $data(image)
      set data(message) "Finished R"; update
   } else {
      set data(message) "R failed to write \"$data(output)\" - $msg"; update
   }
}

proc setupUI {w} {
   upvar #0 $w data

   label $w.l
   message $w.m -textvariable $w\(message\) -aspect 1000
   grid $w.l -row 0 -column 0 -sticky nsew
   grid $w.m -row 1 -column 0 -sticky ew
   set data(message) "Loading"
   update
   bind $w.l &lt;3&gt; "rightClick $w"
}

# pop open an edit window
proc rightClick {w} {
   upvar #0 $w data

   package require BWidget

   if {[winfo exists $w.edit]} {destroy $w.edit}
   set f [frame $w.edit]
   ScrolledWindow $f.sw
   text $f.sw.t -height 30 -wrap none -font courier
   $f.sw setwidget $f.sw.t

   set width [winfo width .]
   if {$width &lt; 500} {set width 500}
   set height [expr [winfo height .]-30]
   if {$height &lt; 500} {set height 500}

   $f.sw.t insert end "#vvvvvv DO NOT EDIT THIS BIT vvvv\n" auto
   $f.sw.t insert end "outputWidth &lt;- $width\n"   auto
   $f.sw.t insert end "outputHeight &lt;- $height\n" auto
   $f.sw.t insert end "inputs &lt;- c(\"[join $data(inputs) \",\"]\")\n" auto
   $f.sw.t insert end "output &lt;- \"$data(output)\"\n" auto
   $f.sw.t insert end "#^^^^^^ DO NOT EDIT THIS BIT ^^^^\n\n" auto
   $f.sw.t insert end $data(rscript)

   Button $f.ok  -text "Ok"     -command "finishEditRule $w $f.sw.t"
   Button $f.can -text "Cancel" -command "destroy $w.edit"
   pack $f.sw -fill both -expand 1
   pack $f.ok $f.can -side left -padx 10
   grid $w.edit -row 0 -column 0 -sticky nsew
   focus $f.sw.t

   $f.sw.t tag configure auto      -foreground red -background gray
}

proc finishEditRule {w t} {
   upvar #0 $w data
   foreach {a b} [$t tag range auto] {$t delete $a $b}
   set data(rscript) [$t get 0.0 end]
   setValue $w rscript $data(rscript)
   regenerate $w
   destroy $w.edit
}


##############################
########Main program starts here
##############################
foreach name [image names] {image delete $name}
catch {destroy .w}
frame .w
grid forget .
grid .w -row 1 -column 1 -sticky nsew
grid columnconf . 1 -weight 1
grid rowconf    . 1 -weight 1

setupUI     .w
appletInit  .w
findFiles   .w
checkAndLoad .w

proc setXML {name1 name2 op} {
   upvar #0 .w data
   if {[catch {set newXML [$data(doc) asXML]}]} {
      global errorInfo; tk_messageBox -title "Error - not updating" -message "$errorInfo" -type ok
   } else {
      global XMLDoc
      set XMLDoc $newXML
   }
}
trace add variable XMLDoc read setXML
</uiscript>
        <rscript>

files&lt;-c("C:/Program Files/Apsim6/apsim/Wheat/Sample/co2.out",
            "C:/Program Files/Apsim6/apsim/Wheat/Sample/std.out")

read.apsim &lt;- function (fname) {
   apsim &lt;- read.table(fname, skip=4, header=F, na.strings="?")
   names(apsim) &lt;- names(read.table(fname, skip=2,header=T,nrows=1))
   return(apsim)
}

cdf&lt;-function(arg) {
  x &lt;- rev(as.vector(quantile(arg, probs=seq(0.0, 1.0, 0.01),na.rm=TRUE )))
  y &lt;- seq(0.0, 1.0, 0.01)
  return(xy.coords(x, y))
}

########

d&lt;- NULL
for (f in files) {
   if (file.access(f, 0) == 0) {
      d&lt;- rbind(d, cbind(file=f, as.data.frame(read.apsim(f))))
   }
}
png(output,width=outputWidth,height=outputHeight)
boxplot(yield ~ file, d)
dev.off()
########

</rscript>
      </tclui>
    </folder>
    <operations />
    <accum>
      <variable name="variable">variable</variable>
    </accum>
    <log />
    <sysbal />
    <tracker />
    <manager name="CanolaOilConc">
      <script>
        <event>script</event>
        <text><![CDATA[start_of_day
         if (DaysAfterSowing = 1) then
            cum_temp = 0
            cum_swdef = 0
            cum_days = 0
         elseif (StageName = 'start_grain_fill' or
                       StageName = 'end_grain_fill' or
                       StageName = 'maturity' or
                       StageName = 'harvest_ripe') then
            cum_temp = cum_temp + (maxt + mint) / 2
            cum_swdef = cum_swdef + swdef_photo
            cum_days = cum_days + 1
         endif

         ! calculate canola oil content
         if (cum_days > 0) then
            avg_temp = cum_temp / cum_days
            avg_swdef = cum_swdef / cum_days
            if (avg_temp <= 14) then
               oil_conc =  47
            else
               oil_conc = (47 - ((avg_temp - 14)*1.21)) - (1.91*(1 - avg_swdef^2))
            endif
         else
            oil_conc = 0
         endif
      ]]></text>
      </script>
    </manager>
  </folder>
  <folder name="Water Management">
    <irrigation name="Irrigation">
      <automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">on</automatic_irrigation>
      <asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
      <crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.5</crit_fr_asw>
      <irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
      <irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
      <allocation type="text" description="Allocation in mm">0</allocation>
      <default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
      <default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
      <default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
    </irrigation>
    <irrigation name="Irrigation ML allocation">
      <automatic_irrigation type="list" listvalues="on,off" description="Automatic irrigation">on</automatic_irrigation>
      <asw_depth type="text" description="Depth to which ASW is calculated. (mm)">600</asw_depth>
      <crit_fr_asw type="text" description="Fraction of ASW below which irrigation is applied (0-1.0)">0.5</crit_fr_asw>
      <irrigation_efficiency type="text" description="Efficiency of the irrigation. (0-1.0)">1</irrigation_efficiency>
      <irrigation_allocation type="list" listvalues="on,off" description="Allocation limits">off</irrigation_allocation>
      <allocation_ML type="text" description="Allocation in ML">0</allocation_ML>
      <application_area type="text" description="Irrigated area (ha)">1</application_area>
      <default_no3_conc type="text" description="Nitrate concentration (ppm N)">0.0</default_no3_conc>
      <default_nh4_conc type="text" description="Ammonium concentration (ppm N)">0.0</default_nh4_conc>
      <default_cl_conc type="text" description="Chloride concentration (ppm Cl)">0.0</default_cl_conc>
    </irrigation>
    <bore>
      <max_available_water description="Capacity (ML)">100</max_available_water>
      <init_available_water description="Supply volume available at start of simulation (ML)">50</init_available_water>
      <max_pump description="Maximum pump delivery volume per day (ML/day)">10</max_pump>
      <min_volume description="Minimum volume in storage below which pump cannot access">2</min_volume>
      <annual_allocation description="Annual Allocation in ML">100</annual_allocation>
      <allocation_renewal_day description="Day of year on which allocation is granted">180</allocation_renewal_day>
      <init_salt_conc description="Initial chloride concentration (ppm)">704.0</init_salt_conc>
    </bore>
    <channel>
      <max_available_water description="Capacity (ML)">100</max_available_water>
      <init_available_water description="Supply volume available at start of simulation (ML)">50</init_available_water>
      <max_pump description="Maximum pump delivery volume per day (ML/day)">10</max_pump>
      <min_volume description="Minimum volume in storage that the pump cannot access">2</min_volume>
      <annual_allocation description="Annual Allocation in ML">100</annual_allocation>
      <allocation_renewal_day description="Day of year on which allocation is granted">180</allocation_renewal_day>
      <init_salt_conc description="Initial chloride concentration (ppm)">704.0</init_salt_conc>
    </channel>
    <dam>
      <source_type type="list" listvalues="dam_gully,dam_ring,dam_exc,sump" description="Source Type">dam_gully</source_type>
      <max_available_water description="Capacity (ML)">100</max_available_water>
      <max_area description="Storage water surface area at capacity (ha)">5</max_area>
      <init_available_water description="Initial supply volume available(ML)">50</init_available_water>
      <max_pump description="Maximum pump delivery volume per day (ML/day)">10</max_pump>
      <min_volume description="Minimum volume in storage that the pump cannot access">2</min_volume>
      <permeability description="Permeability of sealing layer (m/day)">0.00007</permeability>
      <seal_thickness description="Thickness of low permeability seal (m)">0.5</seal_thickness>
      <receive_catchment_runoff type="list" listvalues="no,yes" description="Dam collects runoff from larger catchment area">no</receive_catchment_runoff>
      <receive_crop_runoff type="list" listvalues="no,yes" description="Dam collects runoff from simulated crop area">no</receive_crop_runoff>
      <init_salt_conc description="Initial chloride concentration (ppm)">704.0</init_salt_conc>
      <catchment_area description="Catchment area (ha)">50.0</catchment_area>
      <catchment_runoff_factor description="soilwat2.runoff multiplier">0.5</catchment_runoff_factor>
      <runoff_salt_conc description="Runoff chloride concentration (ppm)">700.0</runoff_salt_conc>
      <rainfall_salt_conc description="Rainfall chloride concentration (ppm)">20.0</rainfall_salt_conc>
    </dam>
    <pond>
      <algae_present description="is there algae present in this pond (0 or 1)">0</algae_present>
      <CEC description="surface soil cation exchange capacity">30.0</CEC>
    </pond>
  </folder>
  <canopy name="Canopy">
    <intercrop name="intercrop" description="Enter crop names to intercrop" type="text">
    </intercrop>
  </canopy>
  <venlink>
    <model_filename type="filename" description="Name of VENSIM model filename" />
    <variable type="multiedit" description="Name of VENSIM variable(s) that are gettable/settable by APSIM" />
    <ini name="Constants">
      <filename>%apsuite\apsim\venlink\sample\Vensim.ini</filename>
    </ini>
  </venlink>
  <folder name="Animals">
    <stock>
      <fraction_faeces_added type="text" description="fraction_faeces_added">0.5</fraction_faeces_added>
      <fraction_urine_added type="text" description="fraction_urine_added">0.5</fraction_urine_added>
      <herbage1 type="text" description="First plant herbage source">lucerne</herbage1>
      <herbage2 type="text" description="Second plant herbage source">
      </herbage2>
    </stock>
    <supplement>
      <spoilage_time type="text" description="spoilage_time">0</spoilage_time>
    </supplement>
    <graz name="Simple grazing model">
      <intake_util_intercept type="text" description="Intercept in intake and utilization eqn (p142)">1</intake_util_intercept>
      <intake_util_slope type="text" description="Slope in intake and utilization eqn (p143)">-0.3</intake_util_slope>
      <yld_eat_restr type="text" description="Yield at which intake restriction no longer applies (p144)">300</yld_eat_restr>
      <summer_lwg type="text" description="Expected summer lwg @ low SR (p145)">70</summer_lwg>
      <autumn_lwg type="text" description="Expected autumn lwg @ low SR (p146)">35</autumn_lwg>
      <winter_lwg type="text" description="Expected winter lwg @ low SR (p147)">10</winter_lwg>
      <spring_lwg type="text" description="Expected spring lwg @ low SR (p148)">35</spring_lwg>
      <leaf_diet type="text" description="Proportion of leaf in diet (p132/100)">0.85</leaf_diet>
      <std_alw type="text" description="std_alw">200</std_alw>
      <metabol_expon type="text" description="metabol_expon">0.75</metabol_expon>
      <acc_eaten_reset type="text" description="Day to reset eaten accumulator">335</acc_eaten_reset>
      <prop_can_eat type="text" description="prop_can_eat">1</prop_can_eat>
      <allow_supplements type="text" description="allow_supplements">1</allow_supplements>
    </graz>
  </folder>
  <folder name="Pasture">
    <AusfarmPasture>
      <debug type="list" listvalues="on,off" description="debug">off</debug>
      <sand type="text" description="sand">0.1 0.1 0.1 0.1 0.1</sand>
      <svp_fract type="text" description="svp_fract">0.75</svp_fract>
      <co2_ppm type="text" description="co2 (ppm)">400</co2_ppm>
      <species type="text" description="Name of the pasture species for which parameters are to be used">Cocksfoot</species>
    </AusfarmPasture>
    <AusfarmPasture name="AusfarmEstablishedPasture">
      <debug type="list" listvalues="on,off" description="debug">off</debug>
      <sand type="text" description="sand">0.1 0.1 0.1 0.1 0.1</sand>
      <svp_fract type="text" description="svp_fract">0.75</svp_fract>
      <co2_ppm type="text" description="co2 (ppm)">400</co2_ppm>
      <species type="text" description="Name of the pasture species for which parameters are to be used">Cocksfoot</species>
      <nutrients type="list" listvalues="Null,N,NP,NS,NPS" description="Determines which of the plant nutrient submodels to activate">N</nutrients>
      <fertility type="text" description="Fertility scalar. Only meaningful in simple mode">1</fertility>
      <max_rtdep type="text" description="Maximum rooting depth (mm)">1300</max_rtdep>
      <lagged_day_t type="text" description="Lagged daytime temperature (oC)">-999.9</lagged_day_t>
      <phenology type="text" description="Value denoting the phenological stage of the species">1.005</phenology>
      <flower_len type="text" description="Current maximum length of the flowering period (d)">0</flower_len>
      <flower_time type="text" description="Time since the start of flowering (d)">0</flower_time>
      <senc_index type="text" description="Number of preceding days of dry conditions (d)">0</senc_index>
      <dorm_index type="text" description="Number of preceding days of cool, moist conditions (d)">0</dorm_index>
      <dorm_t type="text" description="Lagged mean temperature used in summer-dormancy calculations (oc)">-999.9</dorm_t>
      <seed_dorm_time type="text" description="Time since commencement of embryo dormancy (d)">0</seed_dorm_time>
      <germ_index type="text" description="Germination index. Only meaningful if the species is modelled with seed pools (d)">0</germ_index>
      <kl type="text" description="kl (-)">
      </kl>
      <ll type="text" description="lower limit (mm/mm)">
      </ll>
      <AusfarmPastureGreen name="Green">
        <status type="list" listvalues="seedling,established,senescing" description="status">established</status>
        <rt_dep type="text" description="Current rooting depth of the cohort (mm)">100</rt_dep>
        <estab_index type="text" description="Establishment index.  Only meaningful if status = seedling">0</estab_index>
        <stress_index type="text" description="Stress index.  Only meaningful if status = seedling:">0</stress_index>
        <stem_reloc type="text" description="Maximum amount of stem tissue to be relocated to seed (kg/ha)">0</stem_reloc>
        <frosts type="text" description="Number of frosts experienced by this herbage cohort during its lifetime">0</frosts>
        <AusfarmPastureGreenHerbage name="Leaf">
          <dmd type="text" description="dmd (kg/kg)">0.825</dmd>
          <weight type="text" description="weight (kg/ha)">8000</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
          <root_wt type="text" description="root_wt (kg/ha)">3600</root_wt>
        </AusfarmPastureGreenHerbage>
        <AusfarmPastureGreenHerbage name="Stem">
          <dmd type="text" description="dmd (kg/kg)">0.825</dmd>
          <weight type="text" description="weight (kg/ha)">1000</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
          <root_wt type="text" description="root_wt (kg/ha)">0</root_wt>
        </AusfarmPastureGreenHerbage>
      </AusfarmPastureGreen>
      <AusfarmPastureDry name="Dry">
        <status type="list" listvalues="dead,litter" description="State of a cohort of dry herbage:">dead</status>
        <AusfarmPastureDryHerbage name="Leaf">
          <dmd type="text" description="dmd (kg/kg)">0.65</dmd>
          <weight type="text" description="weight (kg/ha)">500</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
        </AusfarmPastureDryHerbage>
        <AusfarmPastureDryHerbage name="Stem">
          <dmd type="text" description="dmd (kg/kg)">0.425</dmd>
          <weight type="text" description="weight (kg/ha)">100</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
        </AusfarmPastureDryHerbage>
      </AusfarmPastureDry>
      <AusfarmPastureDry name="Litter">
        <status type="list" listvalues="dead,litter" description="State of a cohort of dry herbage:">litter</status>
        <AusfarmPastureDryHerbage name="Leaf">
          <dmd type="text" description="dmd (kg/kg)">0.651</dmd>
          <weight type="text" description="weight (kg/ha)">233</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
        </AusfarmPastureDryHerbage>
        <AusfarmPastureDryHerbage name="Stem">
          <dmd type="text" description="dmd (kg/kg)">0</dmd>
          <weight type="text" description="weight (kg/ha)">0</weight>
          <n_conc type="text" description="n_conc (kg/kg)">
          </n_conc>
          <p_conc type="text" description="p_conc (kg/kg)">
          </p_conc>
          <s_conc type="text" description="s_conc (kg/kg)">
          </s_conc>
          <spec_area type="text" description="spec_area (cm^2/g)">10</spec_area>
        </AusfarmPastureDryHerbage>
      </AusfarmPastureDry>
      <AusfarmPastureSeeds name="Seeds">
        <soft_unripe type="text" description="Mass of soft, unripe seeds (kg/ha)">
        </soft_unripe>
        <soft_ripe type="text" description="Mass of soft, ripe seeds (kg/ha)">
        </soft_ripe>
        <hard_unripe type="text" description="Mass of hard, unripe seeds (kg/ha)">
        </hard_unripe>
        <hard_ripe type="text" description="Mass of hard, ripe seeds (kg/ha)">
        </hard_ripe>
      </AusfarmPastureSeeds>
    </AusfarmPasture>
    <manager name="Area">
      <ui>
        <area type="text" description="Area of paddock (ha) :">100</area>
      </ui>
      <script name="Init">
        <text>area = [area]</text>
        <event>Init</event>
      </script>
    </manager>
    <manager name="Sow">
      <ui>
        <category description="Sowing criteria" />
        <date type="text" description="Enter sowing date (dd-mmm):">15-May</date>
        <category description="Sowing details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <rate type="text" description="Enter sowing rate (kg/ha):">100</rate>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' sowpasture rate = [rate]
    endif
   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Cut">
      <ui>
        <category description="When should a cut be done?" />
        <date type="ddmmmdate" description="Enter date of cut (dd-mmm) : ">1-jan</date>
        <category description="Cut details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <height type="text" description="Enter height of cut (mm):">80</height>
        <gathered type="text" description="Proportion of cut forage gathered in (remainder becomes litter):">0.5</gathered>
        <dmdloss type="text" description="Loss of DMD during cutting, drying and storage:">0.1</dmdloss>
        <dmdcontent type="text" description="Dry matter content when stored (kg/kg):">0.9</dmdcontent>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
         standing_DM = avail_dm
         '[pasturemodel]' cutpasture cut_height = [height], gathered = [gathered], dmd_loss = [dmdloss], dm_content = [dmdcontent]
         resid_DM = avail_dm
         removed_DM = standing_DM - resid_DM
   endif



   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="CutOnDMThreshold">
      <ui>
        <category description="When should a cut be done?" />
        <availdmthreshold type="text" description="Enter DM threshold after which a cut should be performed (kg/ha):">1500</availdmthreshold>
        <category description="Cut details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <height type="text" description="Enter height of cut (mm):">80</height>
        <gathered type="text" description="Proportion of cut forage gathered in (remainder becomes litter):">0.5</gathered>
        <dmdloss type="text" description="Loss of DMD during cutting, drying and storage:">0.1</dmdloss>
        <dmdcontent type="text" description="Dry matter content when stored (kg/kg):">0.9</dmdcontent>
      </ui>
      <script name="start_of_day">
        <text><![CDATA[if (avail_dm > [availdmthreshold]) then
         standing_DM = avail_dm
         '[pasturemodel]' cutpasture cut_height = [height], gathered = [gathered], dmd_loss = [dmdloss], dm_content = [dmdcontent]
         resid_DM = avail_dm
         removed_DM = standing_DM - resid_DM
   endif



   ]]></text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Kill">
      <ui>
        <category description="Kill criteria" />
        <date type="text" description="Enter kill date (dd-mmm):">11-May</date>
        <category description="Kill details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <propn_herbage type="text" description="Proportion of herbage to be killed:">0.5</propn_herbage>
        <propn_seed type="text" description="Proportion of seed to be killed:">0.5</propn_seed>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' killpasture propn_herbage = [propn_herbage],  propn_seed = [propn_seed]
    endif


   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Burn">
      <ui>
        <category description="Burn criteria" />
        <date type="text" description="Enter burn date (dd-mmm):">10-May</date>
        <category description="Burn details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <kill_plants type="text" description="Proportion of herbage killed by the fire:">0.5</kill_plants>
        <kill_seed type="text" description="Proportion of seeds killed by the fire:">0.5</kill_seed>
        <propn_unburnt type="text" description="Proportion of herbage (green &amp; dead) that remains after the fire has passed:">0.2</propn_unburnt>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' burnpasture kill_plants = [kill_plants], kill_seed = [kill_seed], propn_unburnt = [propn_unburnt]
    endif
   </text>
        <event>start_of_day</event>
      </script>
    </manager>
    <manager name="Cultivate">
      <ui>
        <category description="Cultivate criteria" />
        <date type="text" description="Enter cultivation date (dd-mmm):">13-May</date>
        <category description="Cultivation details" />
        <pasturemodel type="crop" description="Enter name of pasture module:">AusfarmPasture</pasturemodel>
        <depth type="text" description="Depth of cultivation (mm):">100</depth>
        <propn_incorp type="text" description="Proportion of surface herbage incorporated into the soil:" />
        <propn_mixed type="text" description="Proportion of soil in each soil layer that is mixed across the cultivation depth:">0.3</propn_mixed>
      </ui>
      <script name="start_of_day">
        <text>if (today = date('[date]')) then
     '[pasturemodel]' cultivatepasture depth = [depth], propn_incorp = [propn_incorp], propn_mixed = [propn_mixed]
    endif
   </text>
        <event>start_of_day</event>
      </script>
    </manager>
  </folder>
</folder>