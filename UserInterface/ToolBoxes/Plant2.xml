<folder version="31" name="Plant2">
  <Construct />
  <MetaData />
  <Memo />
  <Model />
  <Plant />
  <Cultivar>
    <Construct>Plant</Construct>
    <Override name="Phenology.Vernalisation">
      <VernSens>2.5</VernSens>
      <PhotopSens>3.5</PhotopSens>
    </Override>
  </Cultivar>
  <Folder name="Functions">
    <Folder name="DMDemand Functions">
      <AllometricDemandFunction>
        <Power type="text" description="Power term in allometric power function">1.52</Power>
        <XProperty type="text" description="Value from which demand is calculated">Leaf.LAI</XProperty>
        <YProperty type="text" description="DM pool for which demand is calculated">Stem.Live.Wt</YProperty>
        <Const type="text" description="Constant term in allometric power function">30.57</Const>
        <Memo> Note:  This must be renamed "DMDemandFunction" for the source code to recoginise it!!!!.  
		  Plant allometry is often described using a simple power function (y=kX^p).  
      	This function returns the demand for DM that would be required to return the size of a pool to that calculated using a good old fashioned allometric relationship using the standard power function (y=kx^p)
        </Memo>
      </AllometricDemandFunction>
      <InternodeDemandFunction>
        <Constant name="InterNodeWt">
          <Value type="text" description="Value">.2</Value>
        </Constant>
        <Memo> Note:  This must be renamed "DMDemandFunction" for the source code to recoginise it!!!!.  
		  This function returns the product of stem population (/m2), Delta leaf number (assuming internodes are expanding at the same rate that leaves are appearing) and the weight internode weight parameter specified
        </Memo>
      </InternodeDemandFunction>
      <PartitionFractionDemandFunction>
        <StageBasedInterpolation name="PartitionFraction">
          <Stages>Germination Emergence FloralInitiation FlagLeaf Flowering StartGrainFill EndGrainFill Maturity HarvestRipe </Stages>
          <Values>    0.0       0.40      0.40             0.6       0.6         0.0         0.0           0.0     0.0 </Values>
        </StageBasedInterpolation>
        <Memo> Note:  This must be renamed "DMDemandFunction" for the source code to recoginise it!!!!.  
		This function returns the specified proportion of totol DM supply.  The organ may not get this proportion if the sum of demands from other organs exceeds DM supply
		</Memo>
      </PartitionFractionDemandFunction>
      <PopulationBasedDemandFunction>
        <StartStage type="text" description="StartStage">5</StartStage>
        <GrowthDuration type="text" description="GrowthDuration">300</GrowthDuration>
        <MaximumOrganWt type="text" description="MaximumOrganWt">.11</MaximumOrganWt>
        <TemperatureFunction name="ThermalTime">
          <SoilTemperaturePhases> Germinating Emerging Inductive </SoilTemperaturePhases>
          <XYPairs>
            <XY>0 0</XY>
            <XY>30 30</XY>
            <XY>40 0</XY>
          </XYPairs>
        </TemperatureFunction>
        <Constant name="ExpansionStress">
          <Value>1</Value>
        </Constant>
        <Memo> Note:  This must be renamed "DMDemandFunction" for the source code to recoginise it!!!!.  
		This function calculates DM demand from the start stage over the growth duration as the product of potential growth rate (MaximumOrganWt/GrowthDuration) and daily thermal time.
		It returns the product of this potential rate and any childern so if other stress multipliers are required they can be constructed with generic functions.  Stress factors are optional
		</Memo>
      </PopulationBasedDemandFunction>
      <PotentialSizeDemandFunction>
        <StartStageName type="text" description="StartStageName">TuberInitiation</StartStageName>
        <EndStageName type="text" description="StartStageName">Maturity</EndStageName>
        <Constant name="PotentialGrowthIncrement">
          <Value type="text" description="Value">0.06</Value>
        </Constant>
        <Constant name="OrganNumber">
          <Value type="text" description="Value">5</Value>
        </Constant>
        <TemperatureFunction name="ThermalTime" />
        <Memo> Note:  This must be renamed "DMDemandFunction" for the source code to recoginise it!!!!.  
		This function calculates DM demand between the start and end stages as the product of potential growth rate (g/oCd/organ), daily thermal time and the specified organ number.
		It returns the product of this potential rate and any childern so if other stress multipliers are required they can be constructed with generic functions.  Stress factors are optional
		</Memo>
      </PotentialSizeDemandFunction>
      <RelativeGrowthRateDemandFunction>
        <InitialWt>500.0</InitialWt>
        <InitialStageName>TuberInitiation</InitialStageName>
        <LinearInterpolationFunction name="RelativeGrowthRate">
          <XProperty type="text" description="XProperty">StageCode.Value</XProperty>
          <XYPairs>
            <XY>3 0</XY>
            <XY>4 0</XY>
            <XY>4.1 0.075</XY>
            <XY>4.7 0.075</XY>
            <XY>5.4 0.003</XY>
            <XY>6 0</XY>
          </XYPairs>
        </LinearInterpolationFunction>
        <Constant name="OrganNumber">
          <Value type="text" description="Value">5</Value>
        </Constant>
        <Memo> Note:  This must be renamed "DMDemandFunction" for the source code to recoginise it!!!!.  
		This function calculates DM demand beyond the start stage as the product of current organ wt (g), relative growth rate and the specified organ number.
		</Memo>
      </RelativeGrowthRateDemandFunction>
    </Folder>
    <Folder name="Structure functions">
      <HeightFunction>
        <Memo> 
			This Function takes potential height increment for the day from the PotentialHeight function then multiplies it by the smallest of any other childern (stress) functions and returns this number
		</Memo>
      </HeightFunction>
      <CerealFinalNodeNumber>
        <PhotoperiodSensitivity type="text" description="Number of additional leaves added per hour reduction in photoperiod">.4</PhotoperiodSensitivity>
        <SaturationPhotoperiod type="text" description="Photoperiod that minimises leaf number">16</SaturationPhotoperiod>
        <MaximumMainStemNodeNumber type="text" description="Number of additional leaves added per hour reduction in photoperiod">26</MaximumMainStemNodeNumber>
        <MinimumMainStemNodeNumber type="text" description="Photoperiod that minimises leaf number">7</MinimumMainStemNodeNumber>
        <PhotoperiodFunction name="Photoperiod">
          <Twilight type="text" description="Twilight">-6</Twilight>
        </PhotoperiodFunction>
        <Memo> 
			This Function calculates the final mainstem leaf number using the approaches outlined by Jamieson and Brooking and implemented in the SIRIUS wheat model.
			Note:  This function is dependent on the FacultativeVernalisationPhase
			It works something like this:  
			- The crop will not comitt to a final leaf number until the crop complets its juvinle phase.  Juvinalisy ends in 3 ways.
			   1. Spring crop types are "borne" vernalised and end their juvinle phase at leaf number 3.
			   2. Winter crop types will end their juvinle phase when their vernalisation requirement is fully saturated.
			   3. Winter crop types may also end their juvenile phase when the number of primordia accumulated exceeds the attainable leaf number which starts at a maximum and decreases as the crop progresses toward saturation of its vernalisation requirement.  Thus a crop will eventually end its juvinele phase even if it is not vernalised and partial vernalisation will shorten this phase.
		    - Once the Juvenile phase is complete the final leaf number responds to photo period with shorter photoperiods increasing leaf number.  
			- Final leaf number will change daily in response to photoperiod until primordia number equals the final leaf number + 4.  At this point final leaf number is fixed and will not change.
			</Memo>
      </CerealFinalNodeNumber>
      <PhaseLengthFinalNodeNumber>
        <MaximumMainStemNodeNumber type="text" description="Maximum number of mainstem leaves that the plant can produce">26</MaximumMainStemNodeNumber>
        <Memo> 
			This Function allows final node number to increase as primordia are initiated and it is fixed at the value or primordia that are initiated when initiation finishes.  
			</Memo>
      </PhaseLengthFinalNodeNumber>
      <CerealFinalNodeNumber name="CerealFinalNodeNumber1">
        <PhotoperiodSensitivity type="text" description="Number of additional leaves added per hour reduction in photoperiod">.4</PhotoperiodSensitivity>
        <SaturationPhotoperiod type="text" description="Photoperiod that minimises leaf number">16</SaturationPhotoperiod>
        <MaximumMainStemNodeNumber type="text" description="Number of additional leaves added per hour reduction in photoperiod">26</MaximumMainStemNodeNumber>
        <MinimumMainStemNodeNumber type="text" description="Photoperiod that minimises leaf number">7</MinimumMainStemNodeNumber>
        <PhotoperiodFunction name="Photoperiod">
          <Twilight type="text" description="Twilight">-6</Twilight>
        </PhotoperiodFunction>
        <Memo> 
			This Function calculates the final mainstem leaf number using the approaches outlined by Jamieson and Brooking and implemented in the SIRIUS wheat model.
			Note:  This function is dependent on the FacultativeVernalisationPhase
			It works something like this:  
			- The crop will not comitt to a final leaf number until the crop complets its juvinle phase.  Juvinalisy ends in 3 ways.
			   1. Spring crop types are "borne" vernalised and end their juvinle phase at leaf number 3.
			   2. Winter crop types will end their juvinle phase when their vernalisation requirement is fully saturated.
			   3. Winter crop types may also end their juvenile phase when the number of primordia accumulated exceeds the attainable leaf number which starts at a maximum and decreases as the crop progresses toward saturation of its vernalisation requirement.  Thus a crop will eventually end its juvinele phase even if it is not vernalised and partial vernalisation will shorten this phase.
		    - Once the Juvenile phase is complete the final leaf number responds to photo period with shorter photoperiods increasing leaf number.  
			- Final leaf number will change daily in response to photoperiod until primordia number equals the final leaf number + 4.  At this point final leaf number is fixed and will not change.
			</Memo>
      </CerealFinalNodeNumber>
      <PhaseLengthFinalNodeNumber name="PhaseLengthFinalNodeNumber1">
        <MaximumMainStemNodeNumber type="text" description="Maximum number of mainstem leaves that the plant can produce">26</MaximumMainStemNodeNumber>
        <Memo> 
			This Function allows final node number to increase as primordia are initiated and it is fixed at the value or primordia that are initiated when initiation finishes.  
			</Memo>
      </PhaseLengthFinalNodeNumber>
    </Folder>
    <AccumulateFunction>
      <StartStageName type="text" description="StartStageName">TuberInitiation</StartStageName>
      <EndStageName type="text" description="StartStageName">Maturity</EndStageName>
      <Variable name="DailyThermalTimeValue">
        <VariableName type="text" description="Variable Name">Phenology.ThermalTime.Value</VariableName>
      </Variable>
      <Memo>This function accumlates the daily values of all childern functions between the start and end phases.</Memo>
    </AccumulateFunction>
    <AddFunction>
      <Memo>Sum the values of the children of this node.  Drop on childern nodes as appropriate</Memo>
    </AddFunction>
    <AgeCalculatorFunction>
      <Memo>This function returns the age (in years) of the plant since initialisation</Memo>
    </AgeCalculatorFunction>
    <AirTemperatureFunction>
      <XYPairs>
        <XY>0 0</XY>
        <XY>30 30</XY>
        <XY>40 0</XY>
      </XYPairs>
      <Memo>This function uses max and min air temperature, three hourly temperature interpolation and the temperature threshold specified to return a daily thermal time value</Memo>
    </AirTemperatureFunction>
    <BellCurveFunction>
      <LinearInterpolationFunction name="LargestLeaf">
        <XProperty type="text" description="XProperty">
        </XProperty>
        <XYPairs />
        <Memo> Position of the largest leaf up the main-stem</Memo>
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="AreaMax">
        <XProperty type="text" description="XProperty">
        </XProperty>
        <XYPairs />
        <Memo> Area of the largest leaf of a plant (mm2)</Memo>
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="Breadth">
        <XProperty type="text" description="XProperty">
        </XProperty>
        <XYPairs />
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="Skewness">
        <XProperty type="text" description="XProperty">
        </XProperty>
        <XYPairs />
      </LinearInterpolationFunction>
      <Memo> Calculates the maximum leaf size (mm2/leaf) given its node position (Elings, 2000 - Agronomy Journal 92, 436-444)</Memo>
    </BellCurveFunction>
    <Constant>
      <Value type="text" description="Value">401</Value>
    </Constant>
    <DivideFunction>
      <Memo>Starting with the first child value of this node, recursively divide by the values of the subsequent child values.  Drop on node as appropriate </Memo>
    </DivideFunction>
    <ExpressionFunction>
      <Expression type="text" description="Math Expression">1.0*Leaf.LAI</Expression>
      <Memo>Evaluate a mathematical expression using the EvaluateExpression dll. 
Obs: Expression can contain variable names from Plant2
</Memo>
    </ExpressionFunction>
    <ExternalVariable>
      <VariableName type="text" description="Variable Name">lucerne2.LeafLAI</VariableName>
      <Memo>Returns the value of a nominated external APSIM numerical variable.

The naming convention to refer to variables external to Plant2
differs from the one used in other Plant2 functions.

It is the same as the one used for outputfile variables and 
APSIM manager module scripts.

General Format:

[component_name.]variable_name

</Memo>
    </ExternalVariable>
    <LinearInterpolationFunction>
      <XProperty type="text" description="XProperty">Phenology.Vernalisation.CrownTemperature</XProperty>
      <XYPairs>
        <XY> 0 0</XY>
        <XY> 26  26</XY>
        <XY> 34  0</XY>
      </XYPairs>
      <Memo>Takes the current value of the XProperty and returns the corresponding y value from the XY maxtix specified</Memo>
    </LinearInterpolationFunction>
    <MaximumFunction>
      <Memo>Returns the maximum value of all children functions.  Drop on nodes as appropriate</Memo>
    </MaximumFunction>
    <MinimumFunction>
      <Memo>Returns the minimum value of all children functions.  Drop on nodes as appropriate</Memo>
    </MinimumFunction>
    <MultiplyFunction>
      <Memo>Multiplies the values of the children of this node.  Drop on nodes as appropriate</Memo>
    </MultiplyFunction>
    <OnEventFunction>
      <Event type="text" description="Event">EndJuvenile</Event>
      <LinearInterpolationFunction name="TemporaryTarget">
        <XProperty type="text" description="XProperty">Phenology.Photoperiod.Value</XProperty>
        <XYPairs>
          <XY>10 700</XY>
          <XY>13 379</XY>
          <XY>14.5 295</XY>
          <XY>16.5 243</XY>
          <XY>24 243</XY>
        </XYPairs>
      </LinearInterpolationFunction>
      <Memo>Returns a value of 0 until the specified event is reached.  Then it is reset to the value returend by its child function and returns that value for the remainder of the simulation</Memo>
    </OnEventFunction>
    <PhaseBasedSwitch>
      <Start>
      </Start>
      <End>
      </End>
      <Memo>Returns a value of 1 if crop is between start and finish stages and zero if not.  
		Applied in model code but can not be nested with other functions.
        </Memo>
    </PhaseBasedSwitch>
    <PhaseLookup>
      <PhaseLookupValue>
        <Start>
        </Start>
        <End>
        </End>
        <Constant name="Function">
          <Value type="text">
          </Value>
        </Constant>
      </PhaseLookupValue>
      <Memo>Returns the value of the "PhaseLookupValue" functions child if phenology is between the specified start and end value.  Multiple "PhaseLookupValue" functions can be added to this function returning different values durring different phases.  Function returns 0 if none of the "PhaseLookupValue" are in phase </Memo>
    </PhaseLookup>
    <PhotoperiodDeltaFunction>
      <Twilight type="text" description="Twilight">-6</Twilight>
      <Memo>Returns the change of photoperiod each day. Twilight is the sun angle below the horizon for beginning and ending photoperiods </Memo>
    </PhotoperiodDeltaFunction>
    <PhotoperiodFunction>
      <Twilight type="text" description="Twilight">-6</Twilight>
      <Memo>Returns the value of photoperiod.  Twilight is the sun angle below the horizon for beginning and ending photoperiods</Memo>
    </PhotoperiodFunction>
    <PowerFunction>
      <Exponent type="text" description="Exponent">1.0</Exponent>
      <Memo>Raises the value of the child to the power of the especified exponent parameter</Memo>
    </PowerFunction>
    <SoilTemperatureDepthFunction>
      <Depth type="text" description="Soil depth(mm)">10</Depth>
      <Memo>Return soil temperature (oC) from a specified soil profile layer.</Memo>
    </SoilTemperatureDepthFunction>
    <SoilTemperatureFunction>
      <Depth type="text" description="Soil depth(mm)">10</Depth>
      <Memo>This function uses max and min soil surface temperature, three hourly temperature interpolation and the temperature threshold specified to return a daily thermal time value</Memo>
    </SoilTemperatureFunction>
    <StageBasedInterpolation>
      <Stages>Germination Emergence 50%Anthesis StartGrainFill Maturity </Stages>
      <Values>  0.93         0.93      0.93    0.93            0.90</Values>
      <Memo>Returns value interpolated between the specified values depending on the progress between phases </Memo>
    </StageBasedInterpolation>
    <SubtractFunction>
      <Memo>From the first child value of this node subtract the values of the subsequent children</Memo>
    </SubtractFunction>
    <Variable>
      <VariableName type="text" description="Variable Name">Leaf.LAI</VariableName>
      <Memo>Returns the value of a nominated internal Plant.NET numerical variable
</Memo>
    </Variable>
    <WeightedTemperatureFunction>
      <MaximumTemperatureWeighting>0.75</MaximumTemperatureWeighting>
      <XYPairs>
        <XY>5 0</XY>
        <XY>30 30</XY>
        <XY>40 0</XY>
      </XYPairs>
      <Memo>This Function calculates a mean dail temperature from Max and Min weighted toward Max according to the specified MaximumTemperatureWeighting factor.  This is then passed into the XY matrix as the x property and the function returns the y value</Memo>
    </WeightedTemperatureFunction>
  </Folder>
  <Folder name="Organs">
    <GenericAboveGroundOrgan>
      <Memo>This is an example generic organ with all of the necessary child functions.  Parameter values need to be changed and functions can be replaced with different functions (and renamed with the same name) to make the desired functionality.  There may be bits missing from this still</Memo>
      <Biomass name="Live" />
      <Biomass name="Dead" />
      <Constant name="SenescenceRateFunction">
        <Value type="text" description="Value">0</Value>
        <Memo>Default value is 0 which means the organ will not seness.  If senesence is required place a function on the organ named SenescenceRate.  It needs to be a number for 0 - 1 that represents the proportion of total biomass that is senessed each day.  </Memo>
      </Constant>
      <Constant name="NReallocationFactor">
        <Value type="text" description="Value">0</Value>
        <Memo>Controls the proportion of Non-Structural and senesing Metabolic N that may be Reallocated to other organs each day.  </Memo>
      </Constant>
      <Constant name="NRetranslocationFactor">
        <Value type="text" description="Value">0.1</Value>
        <Memo>sets the proportion of Metabolic N that may be Remobilised to meet the demand of other organs each day.  A value of zero means the crop will favor maintaining the N concentration and photosynthetic capacity of its current leaf area (behaviour of crops such as potato and wheat).  Increasing this will enable the crop to grow and increased leaf area with diluted N concentration, favoring larger leaf area over the higher N concentration and photosynthetic capacity of leaves (behaviour of crops such as maize) </Memo>
      </Constant>
      <PhaseBasedSwitch name="NitrogenDemandSwitch">
        <Start type="text" description="Start">Transplanting</Start>
        <End type="text" description="End">Maturity</End>
        <Memo>Default value is 1 which means the organ always has a N demand if its N content is below maximum N conc.  If N demand needs to be switched off place a function on the organ named NitrogenDemandSwitch which returns a value of 1 when no demand is expressed.</Memo>
      </PhaseBasedSwitch>
      <Constant name="DMRetranslocationFactor">
        <Value type="text" description="Value">0</Value>
        <Memo>Default value is 0 which means the organ will not retranslocate NonStructural biomass.  If retranslocation is desired turn change this to a value between 0 - 1.  This represents the proportion of NonStructural biomass in the organ that can be retranslocated each day.</Memo>
      </Constant>
      <Constant name="StructuralFraction">
        <Value type="text" description="Value">1</Value>
        <Memo>The DMDemand Function sets demand for structural DM in Generic Organ.  The organ may also assimilate Non-structural DM up to a maximum non-structural fraction (StructuralFraction - 1).  Non-structural DM will only be assimilated if DM is left over after satisfying the Structural and Metabolic DM demands of organs</Memo>
      </Constant>
      <AllometricDemandFunction name="DMDemandFunction">
        <Power type="text" description="Power term in allometric power function">1.52</Power>
        <XProperty type="text" description="Value from which demand is calculated">Leaf.LAI</XProperty>
        <YProperty type="text" description="DM pool for which demand is calculated">Stem.Live.Wt</YProperty>
        <Const type="text" description="Constant term in allometric power function">30.57</Const>
        <Memo> DMDemandFunction sets demand for structural DM.  This is passed to the arbitrator which determines the eventual allocation</Memo>
      </AllometricDemandFunction>
      <Constant name="InitialWtFunction">
        <Value type="text" description="Value">0</Value>
        <Memo>Sets the Wt of the organ on the day of initialisation</Memo>
      </Constant>
      <Constant name="InitialStructuralFraction">
        <Value type="text" description="Value">1</Value>
        <Memo>Sets structural fraction on the day of initialisation</Memo>
      </Constant>
      <Constant name="WaterContent">
        <Value type="text" description="Value">0</Value>
        <Memo>Sets the proportion of the organ that is water used to calculate fresh wt of the organ</Memo>
      </Constant>
      <StageBasedInterpolation name="MaximumNConc">
        <Stages type="text" description="Stages">Transplanting EndShock FloralInitiation StartBudding  Buttoning Maturity</Stages>
        <Values type="text" description="Values">   0.02             0.02          0.02              0.02                0.02       .02</Values>
        <Memo>This is the highest N concentration that the organ can achieve.  This sets the upper limit to N demand and includes essential and Luxury N demands.  Essential N demand is set by the MinimumNConc of the organ.  Luxary N Demand is N is set by Live.Wt * (MaximumNConc - MinimumNConc) and is N the organ may take up in surples to its growth requirements and store in its Non-Structural pool for reallocation -</Memo>
      </StageBasedInterpolation>
      <StageBasedInterpolation name="MinimumNConc">
        <Stages type="text" description="Stages">Transplanting EndShock FloralInitiation StartBudding  Buttoning Maturity</Stages>
        <Values type="text" description="Values">   0.005             0.005          0.005              0.005                0.005       .005</Values>
        <Memo>The MinimumNconc determins the organs essential N demand.  Essential N Demand is N is set by Live.Wt * MinimumNConc and is N the organ must take up to achieve its potential growth.  If the organ is not supplied with sufficient N to maintain MinimunNConc its growth will be constrained by the arbitrator.  All N taken up to MinimunNConc is placed in the StructuralPool and is not mobile</Memo>
      </StageBasedInterpolation>
    </GenericAboveGroundOrgan>
    <GenericBelowGroundOrgan>
      <Memo>This is an example generic organ with all of the necessary child functions.  Parameter values need to be changed and functions can be replaced with different functions (and renamed with the same name) to make the desired functionality.  There may be bits missing from this still</Memo>
      <Biomass name="Live" />
      <Biomass name="Dead" />
      <Constant name="SenescenceRateFunction">
        <Value type="text" description="Value">0</Value>
        <Memo>Default value is 0 which means the organ will not seness.  If senesence is required place a function on the organ named SenescenceRate.  It needs to be a number for 0 - 1 that represents the proportion of total biomass that is senessed each day.  </Memo>
      </Constant>
      <Constant name="NReallocationFactor">
        <Value type="text" description="Value">0</Value>
        <Memo>Controls the proportion of Non-Structural and senesing Metabolic N that may be Reallocated to other organs each day.  </Memo>
      </Constant>
      <Constant name="NRetranslocationFactor">
        <Value type="text" description="Value">0.1</Value>
        <Memo>sets the proportion of Metabolic N that may be Remobilised to meet the demand of other organs each day.  A value of zero means the crop will favor maintaining the N concentration and photosynthetic capacity of its current leaf area (behaviour of crops such as potato and wheat).  Increasing this will enable the crop to grow and increased leaf area with diluted N concentration, favoring larger leaf area over the higher N concentration and photosynthetic capacity of leaves (behaviour of crops such as maize) </Memo>
      </Constant>
      <PhaseBasedSwitch name="NitrogenDemandSwitch">
        <Start type="text" description="Start">Transplanting</Start>
        <End type="text" description="End">Maturity</End>
        <Memo>Default value is 1 which means the organ always has a N demand if its N content is below maximum N conc.  If N demand needs to be switched off place a function on the organ named NitrogenDemandSwitch which returns a value of 1 when no demand is expressed.</Memo>
      </PhaseBasedSwitch>
      <Constant name="DMRetranslocationFactor">
        <Value type="text" description="Value">0</Value>
        <Memo>Default value is 0 which means the organ will not retranslocate NonStructural biomass.  If retranslocation is desired turn change this to a value between 0 - 1.  This represents the proportion of NonStructural biomass in the organ that can be retranslocated each day.</Memo>
      </Constant>
      <Constant name="StructuralFraction">
        <Value type="text" description="Value">1</Value>
        <Memo>The DMDemand Function sets demand for structural DM in Generic Organ.  The organ may also assimilate Non-structural DM up to a maximum non-structural fraction (StructuralFraction - 1).  Non-structural DM will only be assimilated if DM is left over after satisfying the Structural and Metabolic DM demands of organs</Memo>
      </Constant>
      <AllometricDemandFunction name="DMDemandFunction">
        <Power type="text" description="Power term in allometric power function">1.52</Power>
        <XProperty type="text" description="Value from which demand is calculated">Leaf.LAI</XProperty>
        <YProperty type="text" description="DM pool for which demand is calculated">Stem.Live.Wt</YProperty>
        <Const type="text" description="Constant term in allometric power function">30.57</Const>
        <Memo> DMDemandFunction sets demand for structural DM.  This is passed to the arbitrator which determines the eventual allocation</Memo>
      </AllometricDemandFunction>
      <Constant name="InitialWtFunction">
        <Value type="text" description="Value">0</Value>
        <Memo>Sets the Wt of the organ on the day of initialisation</Memo>
      </Constant>
      <Constant name="InitialStructuralFraction">
        <Value type="text" description="Value">1</Value>
        <Memo>Sets structural fraction on the day of initialisation</Memo>
      </Constant>
      <Constant name="WaterContent">
        <Value type="text" description="Value">0</Value>
        <Memo>Sets the proportion of the organ that is water used to calculate fresh wt of the organ</Memo>
      </Constant>
      <StageBasedInterpolation name="MaximumNConc">
        <Stages type="text" description="Stages">Transplanting EndShock FloralInitiation StartBudding  Buttoning Maturity</Stages>
        <Values type="text" description="Values">   0.02             0.02          0.02              0.02                0.02       .02</Values>
        <Memo>This is the highest N concentration that the organ can achieve.  This sets the upper limit to N demand and includes essential and Luxury N demands.  Essential N demand is set by the MinimumNConc of the organ.  Luxary N Demand is N is set by Live.Wt * (MaximumNConc - MinimumNConc) and is N the organ may take up in surples to its growth requirements and store in its Non-Structural pool for reallocation -</Memo>
      </StageBasedInterpolation>
      <StageBasedInterpolation name="MinimumNConc">
        <Stages type="text" description="Stages">Transplanting EndShock FloralInitiation StartBudding  Buttoning Maturity</Stages>
        <Values type="text" description="Values">   0.005             0.005          0.005              0.005                0.005       .005</Values>
        <Memo>The MinimumNconc determins the organs essential N demand.  Essential N Demand is N is set by Live.Wt * MinimumNConc and is N the organ must take up to achieve its potential growth.  If the organ is not supplied with sufficient N to maintain MinimunNConc its growth will be constrained by the arbitrator.  All N taken up to MinimunNConc is placed in the StructuralPool and is not mobile</Memo>
      </StageBasedInterpolation>
    </GenericBelowGroundOrgan>
    <Population>
      <Value>4</Value>
    </Population>
    <Arbitrator>
      <ArbitrationOption type="text" description="ArbitrationOption">PriorityAllocation</ArbitrationOption>
      <Memo>  There are a number of passes involved in the allocation of Weight (Wt).  
	  Wt_Step 1. Set up DM supplies and demands.  Each organ may have a demand for Structural, Metabolic and Non-structural Wt.  Each organ may supply Fresh DM from photosynthesis and/or stored DM from retranslocation of its Non-structural pool.
	  Wt_Step 2. In this step freshly fixed Wt is partitioned to organs based on their relative Structural and Metabolic demands such that if there is not enough freshly fixed Wt to meet these demands the organs with the highest demands get the greatest share of the photosynthesis.
	  Wt_Step 3. In the second step any freshly fixed DM that was surplus to Structural and Metabolic demands is partitioned to sink organs.  An organ will be a sink if it is parameterised to have a Non-structural (mobile) component and the capacity of each organ to receive excess DM depends on its structural fraction (which determines the Non-structural Fraction and subsequent sink capacity).  If there is still fresh DM unallocated after the second pass this remains unallocated with the assumption that in this case the plant would down regulate photosynthesis due to lack of sink capacity.
	  Wt_Step 4. In this step, Non-structural DM is reallocated from Non-Structural pools if there was insufficient DM to meet the structural and metabolic DM demands of organs.
	  The arbitrator then sends a potential DM allocation to each organ that they use to calculate their N demands and then steps through N partitioning routines.  The final pass in biomass partitioning comes after N partitioning
	  
	  N_Step 1. Set up N supplies and demands.  Each organ may (or may not) supply N in a number of ways.  Each organ has (potentially) a structural, metabolic and Non-structural N Demand.  The structural N demand is that required to grow immobile biomass components, Metabolic N is that required to produce working biomass such as the photosynthetic mechanism in the leaves.  The Non-structural N demand is considered to be the luxury uptake and storage of highly mobile N compounds such as nitrate.
      Each of the following 4 steps have a number of processes in common; Firstly the arbitrator determines each organs current N demand (that outstanding after previous N partitioning steps), then it allocates N to each demanding organ (There are three ways that N can be allocated, see below), then it sets for each supplying organ the amount of N that was taken up.
	  N_Step 2. NReallocation.  This is the supply of N within the plant by the reallocation of sensing and/or Non-structural N which is the lowest energy form of N available to the plant so is partitioned first.
	  N_Step 3. NUptake.  This is the supply of mineral N from the environment (typically by roots from the soil). In this step the arbitrator partitions the potential N uptake supply to satisfy all organs N demands (Structural, Metabolic and Non-structural).  If supply is sufficient this will replenish all Non-structural N that was reallocated in the previous step.  If not the N conc of organs with a Non-structural N component will begin to fall.  If total N demand is less than the uptake supply the crop will leave the surplus mineral N in the soil.
	  N_Step 4. NFixation.  This is the supply of symbiotically fixed N and is redundant for Non-fixers!  The arbitrator will asks all N fixing organs (typically nodules) for their potential N fixation supply and then partition this to meet the Structural and Metabolic N demands of organs.  The arbitrator will not fix N to meet Non-structural N demands to minimise the biomass cost of fixation which is metabolically expensive.  Fixation follows uptake to enable the arbitrator to capture the "Lazy" N fixing behaviour of some legumes.  Once fixation is calculated the arbitrator determines the DM cost of this fixation.
	  N_Step 5. NRetranslocation.  This is only invoked under sever N shortage when NReallocation and Uptake (and fixation if appropriate) cannot meet structural and metabolic N demands.  It this step the arbitrator will remove Metabolic N from older leaf cohorts to meet the N demand of new leaves and reproductive organs.

	
      In all of these N partitioning steps there are three options the developer may chose for determining the allocation of N between demanding organs.
	  1. RelativeAllocation.  If this option is used all N is partitioned to organs relative to their demand so that the organs with the larger N demand get a larger share of a limited N supply.
	  2. PriorityAllocation.  If this option is used the arbitrator steps through all organs in order of priority (set by the order they appear in the IDE) allocating N to meet all of the first organs structural and metabolic N demands before partitioning any to the next organ in the hierarchy.  Once it has stepped through all organs and allocated their minimum (structural and metabolic) N demands it will then step through them again and allocate their luxury (Non-structural) N demands in the same way.
	  3. PrioritythenRelativeAllocation.  If this option is used the arbitrator steps through all organs in order of priority allocating N to meet minimum N demands.  However on the second pass it allocated N relative to the organs outstanding demands such that the organ with the greatest luxury N demand will get the greatest share of the N allocation.
	  
	  Wt_Step 5. Once N is allocated the arbitrator then reduces the Wt allocation of each organ to account for the metabolic cost of N fixation.  The Wt reduction is spread around all organs and an organ will only have its Wt allocation limited until it reaches maximum N conc.
	  Wt_Step 6. Then the arbitrator determines if the N allocated to each organ is sufficient for that organ to reach its minimum N concentration.  If not the arbitrator will constrain the biomass growth of that organ and discards the surplus biomass.  This assume that under sever N stress photosynthesis would be down regulated due to N inadequacy limiting sink strength.  
      
	  Once these steps are complete the Arbitrator finally communicates to each organ its state changes as a result of arbitration.
		   
        </Memo>
      <Constant name="RetransWtNRatio">
        <Value type="text" description="Value">0</Value>
      </Constant>
    </Arbitrator>
    <HIReproductiveOrgan>
      <Biomass name="Live" />
      <Biomass name="Dead" />
    </HIReproductiveOrgan>
    <Leaf>
      <PrimaryBudNo type="text" description="PrimaryBudNo">1</PrimaryBudNo>
      <MaxCover type="text" description="MaxCover">1.0</MaxCover>
      <KDead type="text" description="KDead">.03</KDead>
      <InitialiseStage type="text" description="InitialiseStage">Emergence</InitialiseStage>
      <FinalNodeNumber>
        <MaxNodeNo type="text" description="MaximumNodeNo">34</MaxNodeNo>
        <InitialLeafPrimordia type="text" description="InitialLeafPrimordia">0</InitialLeafPrimordia>
        <Constant name="NodeInitiationRate">
          <Value type="text" description="Value">30</Value>
          <Memo>NodeInitiationRate is the number of degree days required for a primordia to initiate on the shoot apex.  This is an optional parameter and if omitted primordia number will be set to MaximumNodeNo from the beginning</Memo>
        </Constant>
        <Memo>FinalNodeNumber is an essential element of leaf as it determines how many mainstem leaves may appear.  TerminateFinalNodeNumber or PhotoperiodFactor functions are included FinalleafNumber may become less then MaximumNodeNo</Memo>
      </FinalNodeNumber>
      <LeafCohort name="Leaves[1]">
        <Rank>1</Rank>
        <Area>900</Area>
      </LeafCohort>
      <LeafCohort name="Leaves[2]">
        <Rank>2</Rank>
        <Area>600</Area>
      </LeafCohort>
      <LeafCohort name="Leaves[3]">
        <Rank>3</Rank>
        <Area>300</Area>
      </LeafCohort>
      <Memo>The Leaf organ has 3 biomass pools, Structural, Metabolic and Non-Structural.</Memo>
      <CompositeBiomass name="Live">
        <Property>Leaf.Leaves[].Live</Property>
      </CompositeBiomass>
      <CompositeBiomass name="Dead">
        <Property>Leaf.Leaves[].Dead</Property>
      </CompositeBiomass>
      <CompositeBiomass name="Total">
        <Property>Leaf.Live</Property>
        <Property>Leaf.Dead</Property>
      </CompositeBiomass>
      <ArrayBiomass name="CohortLive">
        <ArraySize>Leaf.MaxNodeNo</ArraySize>
        <Property>Leaf.Leaves[].Live</Property>
      </ArrayBiomass>
      <ArrayBiomass name="CohortDead">
        <ArraySize>Leaf.MaxNodeNo</ArraySize>
        <Property>Leaf.Leaves[].Dead</Property>
      </ArrayBiomass>
      <AirTemperatureFunction name="ThermalTime">
        <XYPairs>
          <XY>0 0</XY>
          <XY>30 30</XY>
          <XY>40 0</XY>
        </XYPairs>
        <Memo>Returns thermal time value used to drive leaf appearance, expansion and senescence</Memo>
      </AirTemperatureFunction>
      <Constant name="NodeAppearanceRate">
        <Value type="text" description="Value">30</Value>
        <Memo>NodeAppearanceRate is the number of degree days required for a leaf to appear and begin expanding.</Memo>
      </Constant>
      <MultiplyFunction name="BranchingRate">
        <Memo>The branching rates sets the number of new branches initiated.  If we have a plant with one stem and branching rate is set as zero this plant will continue to have only one stem.  If this value increases to 1 for the appearance of 1 mainstem node and then reduces to zero again the plant will produce one branch on its mainstem that has the same properties as the mainstem.  The higher this number is and the longer is remains above 0 the more branches the plant will produce.
For Potato the potential branching rate is the branching pattern that would be observed in wide spaced plantings.  There is a cover response factor to reduce branching rates in closer spacings.</Memo>
        <LinearInterpolationFunction name="Potential_Branching_Rate">
          <XProperty>Leaf.AppearedNodeNo</XProperty>
          <XYPairs>
            <XY>0 0</XY>
            <XY>7 0</XY>
            <XY>8 0.5</XY>
            <XY>13 0.5</XY>
            <XY>14 0</XY>
            <XY>34 0</XY>
          </XYPairs>
        </LinearInterpolationFunction>
        <LinearInterpolationFunction name="Cover_response">
          <XProperty type="text" description="XProperty">leaf.CoverGreen</XProperty>
          <XYPairs>
            <XY>0 1</XY>
            <XY>0.4 1</XY>
            <XY>0.55 0.45</XY>
            <XY>0.8 0</XY>
            <XY>1 0</XY>
          </XYPairs>
        </LinearInterpolationFunction>
      </MultiplyFunction>
      <LinearInterpolationFunction name="Growthduration">
        <XProperty type="text" description="XProperty">Leaf.RelativeLeafApperance</XProperty>
        <XYPairs>
          <XY>0 200</XY>
          <XY>0.3 400</XY>
          <XY>0.4 400</XY>
          <XY>1 400</XY>
        </XYPairs>
        <Memo>Is the duration (in degree days) that leaves expand for</Memo>
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="MaxArea">
        <XProperty type="text" description="XProperty">Leaf.RelativeLeafApperance</XProperty>
        <XYPairs>
          <XY>0 2000</XY>
          <XY>0.15 18000</XY>
          <XY>0.3 27000</XY>
          <XY>0.44 15000</XY>
          <XY>0.59 6000</XY>
          <XY>0.73 1500</XY>
        </XYPairs>
        <Memo>Gives the size of individual leaves when they are fully expanded (mm2)</Memo>
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="LagDuration">
        <XProperty type="text" description="XProperty">Leaf.RelativeLeafApperance</XProperty>
        <XYPairs>
          <XY>0 350</XY>
          <XY>0.15 350</XY>
          <XY>0.3 350</XY>
          <XY>0.4 350</XY>
          <XY>0.73 350</XY>
          <XY>1 20</XY>
        </XYPairs>
        <Memo>Is the duration (in degree days) that the leaf remains at its maximum size in the absence of stress</Memo>
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="SenescenceDuration">
        <XProperty type="text" description="XProperty">Leaf.RelativeLeafApperance</XProperty>
        <XYPairs>
          <XY>0 350</XY>
          <XY>0.15 350</XY>
          <XY>0.3 350</XY>
          <XY>0.4 350</XY>
          <XY>0.73 350</XY>
          <XY>1 100</XY>
        </XYPairs>
        <Memo>is the duration (in degree days) that leaf area is declining due to senescence</Memo>
      </LinearInterpolationFunction>
      <Constant name="ExtinctionCoeff">
        <Value type="text" description="Value">0.8</Value>
        <Memo>Quantifies the relationship between Leaf area index and radiation interception.</Memo>
      </Constant>
      <RUEModel name="Photosynthesis">
        <Memo>Potential photosynthesis is set by the radiation use efficiency (RUE in gDM/MJ).  Stress and CO2 adjustments are applied as:
Photosynthesis =  RadnInt * RUE * Min(Ft, Min(Fn Fvpd)) * Fw * Fco2</Memo>
        <Constant name="RUE">
          <Value type="text" description="Value">1.2</Value>
        </Constant>
        <WeightedTemperatureFunction name="FT">
          <MaximumTemperatureWeighting>0.75</MaximumTemperatureWeighting>
          <XYPairs>
            <XY>2 0</XY>
            <XY>12 1</XY>
            <XY>24 1</XY>
            <XY>34 0</XY>
          </XYPairs>
        </WeightedTemperatureFunction>
        <LinearInterpolationFunction name="FVPD">
          <XProperty type="text" description="XProperty">Leaf.Photosynthesis.VPD</XProperty>
          <XYPairs>
            <XY>0 1</XY>
            <XY>10 1</XY>
            <XY>50 1</XY>
          </XYPairs>
        </LinearInterpolationFunction>
        <LinearInterpolationFunction name="FN">
          <XProperty type="text" description="XProperty">Leaf.Fn</XProperty>
          <XYPairs>
            <XY>0 1</XY>
            <XY>1 1</XY>
            <XY>1.5 1</XY>
          </XYPairs>
        </LinearInterpolationFunction>
        <LinearInterpolationFunction name="FW">
          <XProperty type="text" description="XProperty">Leaf.Fw</XProperty>
          <XYPairs>
            <XY>0 0</XY>
            <XY>0.4 1</XY>
            <XY>1.5 1</XY>
          </XYPairs>
        </LinearInterpolationFunction>
        <RUECO2Function name="Fco2">
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
        </RUECO2Function>
      </RUEModel>
      <LinearInterpolationFunction name="SpecificLeafAreaMax">
        <XProperty type="text" description="XProperty">Leaf.RelativeLeafApperance</XProperty>
        <XYPairs>
          <XY>0 40000</XY>
          <XY>1 25000</XY>
        </XYPairs>
        <Memo>Sets the minimum density of leaves</Memo>
      </LinearInterpolationFunction>
      <Constant name="StructuralFraction">
        <Value type="text" description="Value">.5</Value>
        <Memo>Sets the proportion of DM allocated to the leaf that will be partitioned into StruturalDM, the remainder being partitioned to MetabolicDM</Memo>
      </Constant>
      <Constant name="SpecificLeafAreaMin">
        <Value type="text" description="Value">25000</Value>
        <Memo>Sets the maximum density of the structural and metabolic pools of leaves.  Leaves may get to a lower SLA if Non-structural DM accumulation is allowed </Memo>
      </Constant>
      <LinearInterpolationFunction name="ExpansionStress">
        <XProperty type="text" description="XProperty">WaterSupplyDemandRatio</XProperty>
        <XYPairs>
          <XY>0.5 0</XY>
          <XY>1 1</XY>
        </XYPairs>
        <Memo>This controls the effect of water stress on leaf area during the expansion phase expansion</Memo>
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="CellDivisionStress">
        <XProperty>WaterSupplyDemandRatio</XProperty>
        <XYPairs>
          <XY>0.9 0</XY>
          <XY>1 1</XY>
        </XYPairs>
        <Memo>This controls the effect of water stress on potential leaf area during the period from leaf initiation on the apex until leaf appearance</Memo>
      </LinearInterpolationFunction>
      <Constant name="MinimumNConc">
        <Value type="text" description="Value">.03</Value>
        <Memo>The MinimumNconc determins the N content of the structural fraction of the leaf.  This N is not mobile</Memo>
      </Constant>
      <Constant name="CriticalNConc">
        <Value type="text" description="Value">.05</Value>
        <Memo>The CriticalNconc determins the leaves essential N demand for metabolic N.  MetabolicN is essential for leaf growth and is N the leaves must take up this N to achieve its potential growth.  If the leaf is not supplied with sufficient N to achieve CriticalNConc its growth will be constrained.  N taken up between CriticalNConc and MinimumNConc is placed in the MetabolicPool and is may be remobolised or reallocated</Memo>
      </Constant>
      <Constant name="MaximumNConc">
        <Value type="text" description="Value">.07</Value>
        <Memo>This is the highest N concentration that the leaves can achieve.  This sets the upper limit to N demand and includes essential and Luxury N demands.  Essential N demand is set by the CriticalNConc of the organ.  Luxary N Demand is N is set by Live.Wt * (MaximumNConc - CriticalNConc) and is N the organ may take up in surples to its growth requirements and store in its Non-Structural pool for reallocation.</Memo>
      </Constant>
      <Constant name="NReallocationFactor">
        <Value type="text" description="Value">1</Value>
        <Memo>Controls the proportion of Non-Structural and senesing Metabolic N that may be Reallocated to other organs each day.  </Memo>
      </Constant>
      <Constant name="NRetranslocationFactor">
        <Value type="text" description="Value">.01</Value>
        <Memo>sets the proportion of Metabolic N that may be Remobilised to meet the demand of other organs each day.  A value of zero means the crop will favor maintaining the N concentration and photosynthetic capacity of its current leaf area (behaviour of crops such as potato and wheat).  Increasing this will enable the crop to grow and increased leaf area with diluted N concentration, favoring larger leaf area over the higher N concentration and photosynthetic capacity of leaves (behaviour of crops such as maize) </Memo>
      </Constant>
      <Constant name="DMRetranslocationFactor">
        <Value type="text" description="Value">.5</Value>
        <Memo>This sets the proportion of NonStructural Wt that can be remobilised each day.</Memo>
      </Constant>
      <LinearInterpolationFunction name="Height">
        <XProperty>Stem.Live.Wt</XProperty>
        <XYPairs>
          <XY>0 20</XY>
          <XY>200 300</XY>
          <XY>1200 700</XY>
          <XY>4000 900</XY>
        </XYPairs>
        <Memo>This function defines the potential hight of the canopy</Memo>
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="HeightExpansionStress">
        <XProperty type="text" description="XProperty">WaterSupplyDemandRatio</XProperty>
        <XYPairs>
          <XY>0.1 0</XY>
          <XY>1 1</XY>
        </XYPairs>
        <Memo>This controls the effect of water stress on hight</Memo>
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="FrostFraction">
        <XProperty type="text" description="XProperty">Leaf.MinT</XProperty>
        <XYPairs>
          <XY>-1 0.0</XY>
          <XY>0 0.0</XY>
        </XYPairs>
        <Memo>Sets the proportion of leaf area that is killed by frost</Memo>
      </LinearInterpolationFunction>
      <Constant name="NonStructuralFraction">
        <Value type="text" description="Value">.2</Value>
        <Memo>Sets the amount of non-structural DM that the leaf may accumulate</Memo>
      </Constant>
      <LinearInterpolationFunction name="ShadeInducedSenescenceRate">
        <XProperty type="text" description="XProperty">Leaf.Leaves[Leaf.CurrentRank].CoverAbove</XProperty>
        <XYPairs>
          <XY>0 0</XY>
          <XY>0.5 0</XY>
          <XY>0.8 0</XY>
          <XY>1 0.03</XY>
        </XYPairs>
      </LinearInterpolationFunction>
      <AddFunction name="DroughtInducedSenAcceleration">
        <Memo>This Function acellerates the accumulation of thernal time for leaves under drought stress so that senesence begins sooner and progresses faster with water stress</Memo>
        <Constant name="One">
          <Value type="text" description="Value">1</Value>
        </Constant>
        <MultiplyFunction name="Stress">
          <Constant name="StressResponseCoefficient">
            <Value type="text" description="Value">1</Value>
          </Constant>
          <LinearInterpolationFunction name="StressFactor">
            <XProperty>WaterSupplyDemandRatio</XProperty>
            <XYPairs>
              <XY>0 1</XY>
              <XY>0.7 0</XY>
            </XYPairs>
          </LinearInterpolationFunction>
        </MultiplyFunction>
      </AddFunction>
      <PhaseLookup name="ShadeInducedBranchMortality">
        <PhaseLookupValue>
          <Start type="text" description="Start">Emergence</Start>
          <End type="text" description="End">StartGrainFill</End>
          <LinearInterpolationFunction name="ShadeInducedBranchMortality">
            <XProperty type="text" description="XProperty">Leaf.CoverGreen</XProperty>
            <XYPairs>
              <XY>0 0</XY>
              <XY>0.98 0</XY>
              <XY>0.99 0.04</XY>
              <XY>1 0.04</XY>
            </XYPairs>
          </LinearInterpolationFunction>
        </PhaseLookupValue>
        <Memo>Reduces branch number in response to shading</Memo>
      </PhaseLookup>
      <PhaseLookup name="DroughtInducedBranchMortality">
        <PhaseLookupValue>
          <Start type="text" description="Start">Emergence</Start>
          <End type="text" description="End">EndGrainFill</End>
          <LinearInterpolationFunction name="DroughtInducedBranchMortality">
            <XProperty type="text" description="XProperty">WaterSupplyDemandRatio</XProperty>
            <XYPairs>
              <XY>0.1 0.1</XY>
              <XY>0.6 0</XY>
            </XYPairs>
          </LinearInterpolationFunction>
        </PhaseLookupValue>
        <Memo>Reduces branch number in response to water stress</Memo>
      </PhaseLookup>
      <Constant name="InitialNConc">
        <Value type="text" description="Value">0</Value>
      </Constant>
    </Leaf>
    <Nodule>
      <Biomass name="Live" />
      <Biomass name="Dead" />
      <Memo>This organ give the arbitrator an N fixation potential depending on the SpecificNitrogenaseActivity of nodule and a number of stress multipliers.  It also deliveres teh metabolic cost of fixation to the arbitrator.</Memo>
      <Constant name="SpecificNitrogenaseActivity">
        <Value type="text" description="Value">45</Value>
        <Memo>Maximum potential N fixation defined as g of N fixed per g of root node in the absence of stresses and under high fixation demand.  Value taken from CropGro soybean model</Memo>
      </Constant>
      <Constant name="FixationMetabolicCost">
        <Value type="text" description="Value">7</Value>
        <Memo>How much biomass is burned per g of N fixed.  Value taken from CropGro for soybean</Memo>
      </Constant>
      <AirTemperatureFunction>
        <XYPairs>
          <XY>5 0</XY>
          <XY>20 1</XY>
          <XY>30 1</XY>
          <XY>40 0</XY>
        </XYPairs>
      </AirTemperatureFunction>
      <SoilTemperatureFunction>
        <XYPairs>
          <XY>5 0</XY>
          <XY>20 1</XY>
          <XY>30 1</XY>
          <XY>40 0</XY>
        </XYPairs>
      </SoilTemperatureFunction>
      <LinearInterpolationFunction>
        <XProperty type="text" description="XProperty">Leaf.Fw</XProperty>
        <XYPairs>
          <XY>0 0</XY>
          <XY>1 1</XY>
          <XY>1.5 1</XY>
        </XYPairs>
      </LinearInterpolationFunction>
      <LinearInterpolationFunction name="LinearInterpolationFunction1">
        <XProperty type="text" description="XProperty">Leaf.Fw</XProperty>
        <XYPairs>
          <XY>0 1</XY>
          <XY>1 1</XY>
          <XY>1.5 1</XY>
        </XYPairs>
        <Memo>This is just here at the moment.  I have not set it to respond to a sensible x variable</Memo>
      </LinearInterpolationFunction>
      <PhaseLookup name="PartitionFraction">
        <PhaseLookupValue name="Early">
          <Start type="text" description="Start">Emergence</Start>
          <End type="text" description="End">FloralInitiation</End>
          <Constant name="Function">
            <Value type="text" description="Value">0.03</Value>
          </Constant>
        </PhaseLookupValue>
        <PhaseLookupValue name="Middle">
          <Start type="text" description="Start">FloralInitiation</Start>
          <End type="text" description="End">StartPodGrowth</End>
          <Constant name="Function">
            <Value type="text" description="Value">0.02</Value>
          </Constant>
        </PhaseLookupValue>
        <PhaseLookupValue name="Late">
          <Start>StartPodGrowth</Start>
          <End>Maturity</End>
          <Constant name="Function">
            <Value type="text" description="Value">0.01</Value>
          </Constant>
        </PhaseLookupValue>
        <Memo>Partitioning to root nodules is a small proportion (~5%) of the biomass partitioned to roots (CropGro)</Memo>
      </PhaseLookup>
      <Constant name="MaximumNConc">
        <Value>0.01</Value>
        <Memo>This is the highest N concentration that the organ can achieve.  This sets the upper limit to N demand and includes essential and Luxury N demands.  Essential N demand is set by the MinimumNConc of the organ.  Luxary N Demand is N is set by Live.Wt * (MaximumNConc - MinimumNConc) and is N the organ may take up in surples to its growth requirements and store in its Non-Structural pool for reallocation -</Memo>
      </Constant>
      <Constant name="MinimumNConc">
        <Value>0.01</Value>
        <Memo>The MinimumNconc determins the organs essential N demand.  Essential N Demand is N is set by Live.Wt * MinimumNConc and is N the organ must take up to achieve its potential growth.  If the organ is not supplied with sufficient N to maintain MinimunNConc its growth will be constrained by the arbitrator.  All N taken up to MinimunNConc is placed in the StructuralPool and is not mobile</Memo>
      </Constant>
      <Constant name="SenescenceRate">
        <Value>0.0</Value>
        <Memo>is the proportion of LiveWt that is passed to Dead.Wt each day due to senesence</Memo>
      </Constant>
    </Nodule>
    <ReproductiveOrgan>
      <MaximumSize />
      <RipeStage />
      <Biomass name="Live" />
      <Biomass name="Dead" />
    </ReproductiveOrgan>
    <ReserveOrgan>
      <InitialDM />
      <DailyRetransFraction />
      <Biomass name="Live" />
      <Biomass name="Dead" />
    </ReserveOrgan>
    <Root>
      <ll>   0.29  0.29  0.29  0.29  0.3   0.31  0.32  0.33  0.34  0.35  0.36 </ll>
      <kl>   0.07  0.07  0.07  0.07  0.05  0.05  0.04  0.04  0.04  0.04  0.04 </kl>
      <xf>   1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 </xf>
      <InitialDM>0.2</InitialDM>
      <SpecificRootLength>40000</SpecificRootLength>
      <KNO3>0.02</KNO3>
      <KNH4>0.0</KNH4>
      <Memo>Optional paramaters

1. SenescenceRate.  Default value is 0 which means the organ will not seness.  If senesence is required place a function on the organ named SenescenceRate.  It needs to be a number for 0 - 1 that represents the proportion of total biomass that is senessed each day.
2.  NitrogenDemandSwitch.  Default value is 1 which means the organ always has a N demand if its N content is below maximum N conc.  If N demand needs to be switched off place a function on the organ named NitrogenDemandSwitch which returns a value of 1 when no demand is expressed.
</Memo>
      <LinearInterpolationFunction name="KLModifier">
        <XProperty>Leaf.LAI</XProperty>
        <XYPairs>
          <XY>0 1</XY>
          <XY>3 1</XY>
        </XYPairs>
      </LinearInterpolationFunction>
      <Constant name="SoilWaterEffect">
        <Value>1.0</Value>
      </Constant>
      <TemperatureFunction name="TemperatureEffect">
        <XYPairs>
          <XY>0 1</XY>
          <XY>26 1</XY>
          <XY>35 1</XY>
        </XYPairs>
      </TemperatureFunction>
      <Constant name="MaxDailyNUptake">
        <Value type="text" description="Value">6</Value>
        <Memo>I the maximum amount of N that the root system can take up each day (kg/ha)</Memo>
      </Constant>
      <Constant name="SenescenceRate">
        <Value type="text" description="Value">0.0</Value>
        <Memo>is the proportion of LiveWt that is passed to Dead.Wt each day due to senesence</Memo>
      </Constant>
      <PhaseLookup name="RootFrontVelocity">
        <PhaseLookupValue>
          <Start type="text" description="Start">Peeping</Start>
          <End type="text" description="End">FinalLeaf</End>
          <Constant>
            <Value type="text" description="Value">10</Value>
          </Constant>
        </PhaseLookupValue>
      </PhaseLookup>
      <PhaseLookup name="PartitionFraction">
        <PhaseLookupValue name="Inductive">
          <Start type="text" description="Start">Emergence</Start>
          <End type="text" description="End">FloralInitiation</End>
          <Constant name="Function">
            <Value type="text" description="Value">0.3</Value>
          </Constant>
        </PhaseLookupValue>
        <PhaseLookupValue name="Induced">
          <Start type="text" description="Start">FloralInitiation</Start>
          <End type="text" description="End">TuberInitiation</End>
          <Constant name="Function">
            <Value type="text" description="Value">0.3</Value>
          </Constant>
        </PhaseLookupValue>
        <PhaseLookupValue name="EarlyTuber">
          <Start type="text" description="Start">TuberInitiation</Start>
          <End type="text" description="End">FinalLeaf</End>
          <Constant name="Function">
            <Value type="text" description="Value">.05</Value>
          </Constant>
        </PhaseLookupValue>
        <PhaseLookupValue name="LateTuber">
          <Start type="text" description="Start">FinalLeaf</Start>
          <End type="text" description="End">FullSenescence</End>
          <Constant name="Function">
            <Value type="text" description="Value">0</Value>
          </Constant>
        </PhaseLookupValue>
      </PhaseLookup>
      <Constant name="MaximumNConc">
        <Value>0.01</Value>
        <Memo>This is the highest N concentration that the organ can achieve.  This sets the upper limit to N demand and includes essential and Luxury N demands.  Essential N demand is set by the MinimumNConc of the organ.  Luxary N Demand is N is set by Live.Wt * (MaximumNConc - MinimumNConc) and is N the organ may take up in surples to its growth requirements and store in its Non-Structural pool for reallocation -</Memo>
      </Constant>
      <Constant name="MinimumNConc">
        <Value>0.01</Value>
        <Memo>The MinimumNconc determins the organs essential N demand.  Essential N Demand is N is set by Live.Wt * MinimumNConc and is N the organ must take up to achieve its potential growth.  If the organ is not supplied with sufficient N to maintain MinimunNConc its growth will be constrained by the arbitrator.  All N taken up to MinimunNConc is placed in the StructuralPool and is not mobile</Memo>
      </Constant>
      <PhaseBasedSwitch name="NitrogenDemandSwitch">
        <Start type="text" description="Start">Planting</Start>
        <End type="text" description="End">FinalLeaf</End>
        <Memo>Stops the roots from demanding Nitrogen after final leaf stage
        </Memo>
      </PhaseBasedSwitch>
    </Root>
    <RootSWIM />
    <SimpleLeaf>
      <FT>
        <XY>5 1.0</XY>
        <XY>20 1.0</XY>
        <XY>25 1.0</XY>
        <XY>40 1.0</XY>
      </FT>
      <FVPD>
        <XY>0 1.0</XY>
        <XY>10 1.0</XY>
        <XY>50 1.0</XY>
      </FVPD>
      <Height>800</Height>
      <LAI>6</LAI>
      <LAIDead>0</LAIDead>
      <K>0.5</K>
      <KDead>0.5</KDead>
    </SimpleLeaf>
    <SimpleRoot />
    <CompositeBiomass>
      <Property>PodWall.Live Grain.Live</Property>
    </CompositeBiomass>
    <ArrayBiomass>
      <Property>PodWall.Live Grain.Live</Property>
    </ArrayBiomass>
    <Summary />
  </Folder>
  <Folder name="Phenology">
    <EmergingPhase>
      <Start type="text" description="Start stage name">Germination</Start>
      <End type="text" description="End stage name">Emergence</End>
      <ShootLag type="text" description="Time lag before linear coleoptile growth starts (deg days)">15</ShootLag>
      <ShootRate type="text" description="Growing deg day increase with depth for coleoptile (deg day/mm depth)">2</ShootRate>
      <LinearInterpolationFunction name="ThermalTime">
        <XProperty>Phenology.Vernalisation.CrownTemperature</XProperty>
        <XYPairs>
          <XY>0 0</XY>
          <XY>26 26</XY>
          <XY>34 0</XY>
        </XYPairs>
      </LinearInterpolationFunction>
    </EmergingPhase>
    <EndPhase>
      <Start description="Start stage name">
      </Start>
      <End description="End stage name">
      </End>
      <TemperatureFunction />
    </EndPhase>
    <FacultativeVernalisationPhase>
      <Start type="text" description="Start stage name">Emergence</Start>
      <End type="text" description="End stage name">EndJuvenile</End>
      <Constant name="Target">
        <Value type="text" description="Value">401</Value>
      </Constant>
      <MinimumFunction name="Stress">
        <Variable>
          <VariableName type="text" description="Variable Name">Phenology.Vernalisation.VernEff</VariableName>
          <Memo>Returns the value of a nominated internal Plant2 numerical variable
</Memo>
        </Variable>
        <Variable name="Variable1">
          <VariableName type="text" description="Variable Name"> Phenology.Vernalisation.PhotopEff</VariableName>
          <Memo>Returns the value of a nominated internal Plant2 numerical variable
</Memo>
        </Variable>
      </MinimumFunction>
      <LinearInterpolationFunction name="Thermal Time">
        <XProperty type="text" description="XProperty">Phenology.Vernalisation.CumulativeVD</XProperty>
        <XYPairs>
          <XY>0 515</XY>
          <XY>100 515</XY>
        </XYPairs>
      </LinearInterpolationFunction>
    </FacultativeVernalisationPhase>
    <GenericPhase>
      <Start type="text" description="Start stage name">Germination</Start>
      <End type="text" description="End stage name">Emergence</End>
      <Constant name="Target">
        <Value type="text" description="Value">100</Value>
      </Constant>
      <TemperatureFunction />
    </GenericPhase>
    <GerminatingPhase>
      <Start description="Start stage name">
      </Start>
      <End description="End stage name">
      </End>
    </GerminatingPhase>
    <GotoPhase>
      <Start description="Start stage name">
      </Start>
      <End description="End stage name">
      </End>
      <PhaseNameToGoto>
      </PhaseNameToGoto>
    </GotoPhase>
    <LeafAppearancePhase>
      <Start description="Start stage name">
      </Start>
      <End description="End stage name">
      </End>
      <RemainingLeaves />
      <TemperatureFunction />
    </LeafAppearancePhase>
    <LeafDeathPhase>
      <Start description="Start stage name">
      </Start>
      <End description="End stage name">
      </End>
      <TemperatureFunction />
    </LeafDeathPhase>
    <PhaseJumpFunction>
      <Start type="text" description="Start stage name:">Germination</Start>
      <End type="text" description="End stage name:">Emergence</End>
      <Event type="text" description="Look for this event:">Cut</Event>
      <PhaseNameToJumpTo type="text" description="Phase name to jump to">
      </PhaseNameToJumpTo>
    </PhaseJumpFunction>
    <Vernalisation>
      <StartStage type="text" description="Start stage name">Germination</StartStage>
      <EndStage type="text" description="End stage name">EndJuvenile</EndStage>
      <TemperatureFunction name="VDModel">
        <XYPairs>
          <XY>0 1</XY>
          <XY>2 1</XY>
          <XY>8 1</XY>
          <XY>15 1</XY>
        </XYPairs>
      </TemperatureFunction>
    </Vernalisation>
    <VernalisationCW>
      <VernSens type="text" description="VernSens">
      </VernSens>
      <PhotopSens type="text" description="PhotopSens">
      </PhotopSens>
      <Twilight type="text" description="Twilight">
      </Twilight>
      <StartStageForEffects type="text" description="StartStageForEffects">
      </StartStageForEffects>
      <EndStageForEffects type="text" description="EndStageForEffects">
      </EndStageForEffects>
      <StartStageForCumulativeVD type="text" description="StartStageForCumulativeVD">
      </StartStageForCumulativeVD>
      <EndStageForCumulativeVD type="text" description="EndStageForCumulativeVD">
      </EndStageForCumulativeVD>
    </VernalisationCW>
    <VernalisationSIRIUS>
      <VernalisationType type="text" description="VernalisationType">0</VernalisationType>
      <PhaseLookup name="Vernalisation">
        <PhaseLookupValue name="SoilTemperature">
          <Start type="text" description="Start">Sowing</Start>
          <End type="text" description="End">FloralInitiation</End>
          <SoilTemperatureFunction name="ThermalTime">
            <XYPairs>
              <XY>0 0.012</XY>
              <XY>11 0.0187</XY>
              <XY>15 0</XY>
            </XYPairs>
          </SoilTemperatureFunction>
        </PhaseLookupValue>
        <PhaseLookupValue name="AirTemperature">
          <Start type="text" description="Start">FloralInitiation</Start>
          <End type="text" description="End">HarvestRipe</End>
          <AirTemperatureFunction name="ThermalTime">
            <XYPairs />
          </AirTemperatureFunction>
        </PhaseLookupValue>
      </PhaseLookup>
    </VernalisationSIRIUS>
  </Folder>
</folder>