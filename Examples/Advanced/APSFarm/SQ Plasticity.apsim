<folder version="37" creator="Apsim 7.10-r4168" name="Simulations">
  <folder name="Shared">
    <area name="p">
      <wheat />
      <chickpea>
        <ini>
          <filename>chickpea.xml</filename>
        </ini>
      </chickpea>
      <sweetsorghum />
      <weed>
        <ini>
          <filename>weed.xml</filename>
        </ini>
      </weed>
      <surfaceom name="surface organic matter">
        <PoolName description="Organic Matter pool name">wheat_stubble</PoolName>
        <type description="Organic Matter type">wheat</type>
        <mass description="Initial surface residue (kg/ha)">1000.</mass>
        <cnr description="C:N ration of initial residue">80.0</cnr>
        <standing_fraction description="Fraction of residue standing">0.0</standing_fraction>
      </surfaceom>
      <fertiliser />
      <erosion name="Erosion">
        <model description="Model Name">freebairn</model>
        <slope description="Slope of plot in percent (%)">6.5</slope>
        <slope_length description="Length of plot (m)">60.0</slope_length>
        <k_factor description="Soil erodibility factor (t/ha/EI 30 )">0.4</k_factor>
        <p_factor description="Supporting practise factor (unitless)">1.0</p_factor>
        <bed_depth description="Depth to bedrock (mm)">3500</bed_depth>
        <profile_reduction type="list" listvalues="off,on" description="Profile Reduction">off</profile_reduction>
        <profile_layer_merge description="Fraction of original size in which the lowest layer is merged into the layer above (0-1)">0.05</profile_layer_merge>
        <minimum_depth description="If the profile erodes to this depth, the simulation is stopped (mm)">100.0</minimum_depth>
      </erosion>
    </area>
    <tclmanager name="Machinery">
      <rule name="Machinery Initialisation Logic">
        <ui>
          <category description="No editable parameters" />
        </ui>
        <script name="init">
          <text><![CDATA[
# Apsim Machinery (sub)Module
# Contains Tractors, Implements & Labour.

# Operations: 
# bool available(<config>)    ; See if a configuration can be used today (read)
# operate <config> <area>     ; Operate a configuration over an area until finished (event)

########################## Apsim interface code here
source $apsuite/Model/TclLink/CIDataTypes.tcl

# A trace handler for status. This handler is called whenever another module 
# asks us whether machinery is available.
#    NB. Careful! Errors in trace routines are not caught!!!
proc machinery:maProc {name1 name2 op} {
   if {$op == "read" } {
      global config $name1
      foreach {junk tractor implement} [split $name1 "_"] { break }

      # Check they are known to us
      if {[lsearch $config(tractors) $tractor] < 0} {
         set msg "tractor \"$tractor\" is unknown - I only know about $config(tractors)"
         error $msg
      }
      if {[lsearch $config(implements) $implement] < 0} {
         set msg "implement \"$implement\" is unknown - I only know about $config(implements)"
         error $msg
      }
      
      # Now see if they are busy
      set avail 1
      catch {
         global machinery:jobs
         foreach job ${machinery:jobs} {
            foreach {tid iid area paddock costtype} [split $job ","] {break}
            if {"$tractor" == "$tid" || "$implement" == "$iid"} {set avail 0}
         }
      } msg
      if {$msg != ""} {apsimWriteToSummaryFile $msg; error $msg}
           
      # Set the variable - this is what is returned to apsim.
      set $name1 $avail
   }  
}

# An event handler. 
proc machinery:operateHandler {args} {
  global incomingVariant
  foreach {name value} [unpack_Variant $incomingVariant] {
     regsub -all "'" $name {} name
     regsub -all "'" $value {} value
     set [string tolower $name] [string tolower $value]
  }
  if {![info exists tractor] || ![info exists implement] || ![info exists area]} {
     error "Must specify a tractor, implement, and area to operate over."
  }
  if { ![info exists paddock] } {set paddock {}}
  if { ![info exists costtype] } {set costtype unknown}
  machinery:operate $tractor $implement $area $paddock $costtype
}

# Now register the event handlers. 
apsimSubscribeVariant operate            "machinery:operateHandler"
apsimSubscribeNull process            "machinery:process"
apsimSubscribeNull end_financial_year "machinery:end_year"
########################## End apsim interface code

########################## Machinery configuration code
# Read in our configuration
proc machinery:initialise {} {
   global config
   if {![info exists config(tractors)]} {set config(tractors) {}}
   if {![info exists config(implements)]} {set config(implements) {}}
} 


# return the work rate for this combo can cover per hour
proc getCombo {tractor implement thing} {
   global config
   if {![info exists config(machinery,$tractor,$implement,$thing)]} {
      foreach {n v} [array get config machinery*] {apsimWriteToSummaryFile "$n=$v"}
      error "No $thing specified for $tractor and $implement"
   }
   return $config(machinery,$tractor,$implement,$thing)
}

proc getRate {tid iid} {
   return [getCombo $tid $iid fuelrate]
}

proc getValue {id thing} {
   global config
   if {![info exists config(machinery,$id,$thing)]} {
      error "No $thing for $id specified (get)"
   }
   return $config(machinery,$id,$thing)
}

# Return the cost of fuel per liter
proc fuelCost {} {
   global config
   if {![info exists config(machinery,fuelcost)]} {
      error "No fuelcost specified"
   }
   return $config(machinery,fuelcost)
}

# return the fuel cost this combo uses per hour 
proc getFuelCost {tid iid} {
   return [expr [getCombo $tid $iid fuelrate] * [fuelCost]]
}

# Return the number of hours worked per day
proc getHoursPerDay {tid iid} {
   return [getCombo $tid $iid hoursperday]
}

proc setValue {id thing value} {
   global config
   if {![info exists config(machinery,$id,$thing)]} {
      error "No $thing for $id specified (set)"
   }
   set config(machinery,$id,$thing) $value
}

##############
# Operate a configuration over an area. Just add it to the job queue 
# and let process look after it.
proc machinery:operate {tractor implement area paddock costtype} {
   if {![string is double -strict $area]} {
      error "Area should be a number (not $area)"
   }
   global machinery:jobs
   lappend machinery:jobs $tractor,$implement,$area,$paddock,$costtype
   apsimWriteToSummaryFile "Machinery job \"$tractor + $implement\" is queued"
}

# The daily process routine. Manages the job queue
proc machinery:process {} {
   global machinery:jobs
   set tomorrowsJobs {}
   # Go through each job. If an item is in use in any prior job, we can't do it today. 
   for {set ijob 0} {$ijob < [llength ${machinery:jobs}]} {incr ijob} {
      set job [lindex ${machinery:jobs} $ijob]
      foreach {tid iid area paddock costtype} [split $job ","] {break}
      set inuse 0
      for {set j 0} {$j < $ijob} {incr j} {
         foreach {Ttid Tiid Tarea Tpaddock Tcosttype} [split [lindex ${machinery:jobs} $j] ","] {break}
         if {$tid == $Ttid || $iid == $Tiid} {set inuse 1}
      }
      if {!$inuse} {
        # The job is running today. Work out how many hours, and then the costs
        set maxHours [getHoursPerDay $tid $iid]
        set rate [getRate $tid $iid]

        if {$maxHours * $rate <= $area} {
           set hours $maxHours
           set areaToday [expr $maxHours * $rate]
        } else {   
           set hours [expr $area / $rate]
           set areaToday [expr $hours * $rate]
        }   
        #apsimWriteToSummaryFile "hours='$hours', rate='$rate',cost='[getFuelCost $tid $iid]',oil='[getValue $tid oil]',paddock='$paddock',costtype=$costtype"
        set cost [expr $hours * [getFuelCost $tid $iid] * (1.0 + [getValue $tid oil]/100.0)]
        apsimSendMessage "" expenditure [list cost $cost] [list comment "fuel & oil costs of $tid + $iid"] [list paddock $paddock] [list area $areaToday] [list $costtype {}]

        set cost [expr $hours * [getValue $tid newPrice] * ([getValue $tid repairs]/100.0)/ [getValue $tid lifeOfEquipment]] 
        apsimSendMessage "" expenditure [list cost $cost] [list comment "Repairs & maintenance of $tid"] [list paddock $paddock] [list area $areaToday] [list $costtype {}]

        set cost [expr $hours * [getValue $iid newPrice] * ([getValue $iid repairs]/100.0)/ [getValue $iid lifeOfEquipment]] 
        apsimSendMessage "" expenditure [list cost $cost] [list comment "Repairs & maintenance of $iid"] [list paddock $paddock] [list area $areaToday] [list $costtype {}]

        set rate [expr $hours * [getRate $tid $iid]]
        set area [expr $area - $rate]
        setValue $tid age [expr $hours + [getValue $tid age]]
        setValue $iid age [expr $hours + [getValue $iid age]]

        if {$area > 0} {
           lappend tomorrowsJobs $tid,$iid,$area,$paddock,$costtype
        } else {
           apsimWriteToSummaryFile "Machinery job '$tid + $iid' in $paddock has finished"
        }
      } else {
        lappend tomorrowsJobs $job
      } 
   }
   set machinery:jobs $tomorrowsJobs
}

# The "end_year" routine. Do loan payments and replacement
proc machinery:end_year {} {
   global config
   foreach id [concat $config(tractors) $config(implements)] {
     if {$config(machinery,$id,loanInterestRate) > 0.0} {
        if {$config(machinery,$id,loanDuration) > 0} {
           if {$config(machinery,$id,age) >= $config(machinery,$id,lifeOfEquipment)} {
              set newPrice $config(machinery,$id,newPrice)
              set salvage [expr $config(machinery,$id,tradeInValue)/100.0 * $newPrice]
              set loanValue [expr $newPrice - $salvage]
              apsimWriteToSummaryFile "Establishing new loan of \$$loanValue for $id (new price \$$newPrice, salvage \$$salvage)"
              set config(machinery,$id,loanValue) $loanValue
              set config(machinery,$id,age) 0
              set config(machinery,$id,loanPeriod) 1
           } else {
              if {$config(machinery,$id,loanPeriod) <=  $config(machinery,$id,loanDuration)} {
                 #A = P(i(1+i)^n)/((1+i)^n - 1)
                 set P $config(machinery,$id,newPrice) 
                 set i [expr $config(machinery,$id,loanInterestRate)/100.0]
                 set n $config(machinery,$id,loanDuration)
                 set A [expr $P * ($i*pow(1+$i,$n))/(pow(1.0+$i,$n) - 1.0) ]
                 apsimSendMessage "" expenditure [list cost $A] [list interest_paid $A] [list comment "Loan repayments for $id"]
                 
                 set config(machinery,$id,loanPeriod) [expr 1 + $config(machinery,$id,loanPeriod)]
                 if { $config(machinery,$id,loanPeriod) >  $config(machinery,$id,loanDuration) } {
                     apsimWriteToSummaryFile "Loan for $id is finished"
                 }
              }
           }
        }
     }    
   }  
}
]]></text>
          <event>init</event>
        </script>
        <script name="start_simulation">
          <text>

# Finally, load our configuration database and initialise states
machinery:initialise 
set machinery:jobs {}

# Set the current period of the loan to 1 past its end
foreach id [concat $config(tractors) $config(implements)] {
   set config(machinery,$id,loanPeriod) [expr 1 + $config(machinery,$id,loanDuration)]
}

# Now tell apsim we own it, set up the trace variable we use to trigger when the variable is read
foreach tid $config(tractors) {
  foreach iid $config(implements) {
     set v available_${tid}_${iid}
     set $v 0
     apsimRegisterGetSet $v
     trace add variable $v read "machinery:maProc"
  }
}

apsimWriteToSummaryFile "Machinery:\nTractors=$config(tractors)\nImplements=$config(implements)"

</text>
          <event>start_simulation</event>
        </script>
      </rule>
      <rule name="Machinery - 200kwFWA">
        <ui>
          <category description="Tractor" />
          <apsimname type="text" description="Apsim name">tractor1</apsimname>
          <newPrice type="text" description="New price ($)">100000.0</newPrice>
          <tradeInValue type="text" description="Trade In Value (% of new)">15</tradeInValue>
          <lifeOfEquipment type="text" description="Life of Equipment (hrs)">3000</lifeOfEquipment>
          <insuranceRate type="text" description="Insurance cost ($/$1000 insured)">6.2</insuranceRate>
          <repairs type="text" description="Repairs &amp; Maintenance (% of new value over lifetime)">30</repairs>
          <oil type="text" description="Oil &amp; Tyre costs (%age of fuel costs)">10</oil>
          <loanInterestRate type="text" description="Loan Interest Rate (%)">7</loanInterestRate>
          <loanDuration type="text" description="Loan Duration (years)">50</loanDuration>
          <age type="text" description="Age at start of simulation (hrs)">2</age>
          <category description="Implement 1" />
          <implement1name type="text" description="Name">sprayrig</implement1name>
          <implement1fuelrate type="text" description="Fuel Rate (lts/hour)">30.0</implement1fuelrate>
          <implement1workrate type="text" description="Work Rate (ha/hour)">20.0</implement1workrate>
          <implement1hoursperday type="text" description="Daily Hours (hours)">16</implement1hoursperday>
          <category description="Implement 2" />
          <implement2name type="text" description="Name">planter</implement2name>
          <implement2fuelrate type="text" description="Fuel Rate (lts/hour)">40.0</implement2fuelrate>
          <implement2workrate type="text" description="Work Rate (ha/hour)">8.12</implement2workrate>
          <implement2hoursperday type="text" description="Daily Hours (hours)">16</implement2hoursperday>
        </ui>
        <script name="init">
          <text>
lappend config(tractors) "[apsimname]"
set config(machinery,[apsimname],newPrice) "[newPrice]"
set config(machinery,[apsimname],tradeInValue) "[tradeInValue]"
set config(machinery,[apsimname],lifeOfEquipment) "[lifeOfEquipment]"
set config(machinery,[apsimname],insuranceRate) "[insuranceRate]"
set config(machinery,[apsimname],repairs) "[repairs]"
set config(machinery,[apsimname],oil) "[oil]"
set config(machinery,[apsimname],loanInterestRate) "[loanInterestRate]"
set config(machinery,[apsimname],loanDuration) "[loanDuration]"
set config(machinery,[apsimname],age) "[age]"

set config(machinery,[apsimname],[implement1name],fuelrate) "[implement1fuelrate]"
set config(machinery,[apsimname],[implement1name],workrate) "[implement1workrate]"
set config(machinery,[apsimname],[implement1name],hoursperday) "[implement1hoursperday]"

set config(machinery,[apsimname],[implement2name],fuelrate) "[implement2fuelrate]"
set config(machinery,[apsimname],[implement2name],workrate) "[implement2workrate]"
set config(machinery,[apsimname],[implement2name],hoursperday) "[implement2hoursperday]"

</text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Machinery - Precision Planter">
        <ui>
          <category description="Implement" />
          <apsimname type="text" description="Apsim name">planter</apsimname>
          <newPrice type="text" description="New price ($)">150000.0</newPrice>
          <tradeInValue type="text" description="Trade In Value (% of new)">20</tradeInValue>
          <lifeOfEquipment type="text" description="Life of Equipment (hrs)">1500</lifeOfEquipment>
          <insuranceRate type="text" description="Insurance cost ($/$1000 insured)">2.3</insuranceRate>
          <repairs type="text" description="Repairs &amp; Maintenance (% of new value over lifetime)">30</repairs>
          <oil type="text" description="Oil &amp; Tyre costs (%age of fuel costs)">0</oil>
          <loanInterestRate type="text" description="Loan Interest Rate (%)">4.5</loanInterestRate>
          <loanDuration type="text" description="Loan Duration (years)">50</loanDuration>
          <age type="text" description="Age at start of simulation (hrs)">200</age>
        </ui>
        <script name="init">
          <text>
lappend config(implements) "[apsimname]"
set config(machinery,[apsimname],newPrice) "[newPrice]"
set config(machinery,[apsimname],tradeInValue) "[tradeInValue]"
set config(machinery,[apsimname],lifeOfEquipment) "[lifeOfEquipment]"
set config(machinery,[apsimname],insuranceRate) "[insuranceRate]"
set config(machinery,[apsimname],repairs) "[repairs]"
set config(machinery,[apsimname],oil) "[oil]"
set config(machinery,[apsimname],loanInterestRate) "[loanInterestRate]"
set config(machinery,[apsimname],loanDuration) "[loanDuration]"
set config(machinery,[apsimname],age) "[age]"

</text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Machinery - Spray Rig">
        <ui>
          <category description="Implement" />
          <apsimname type="text" description="Apsim name">sprayrig</apsimname>
          <newPrice type="text" description="New price ($)">100000.0</newPrice>
          <tradeInValue type="text" description="Trade In Value (% of new)">20</tradeInValue>
          <lifeOfEquipment type="text" description="Life of Equipment (hrs)">1500</lifeOfEquipment>
          <insuranceRate type="text" description="Insurance cost ($/$1000 insured)">2.3</insuranceRate>
          <repairs type="text" description="Repairs &amp; Maintenance (% of new value over lifetime)">30</repairs>
          <oil type="text" description="Oil &amp; Tyre costs (%age of fuel costs)">0</oil>
          <loanInterestRate type="text" description="Loan Interest Rate (%)">4.5</loanInterestRate>
          <loanDuration type="text" description="Loan Duration (years)">50</loanDuration>
          <age type="text" description="Age at start of simulation (hrs)">200</age>
        </ui>
        <script name="init">
          <text>
lappend config(implements) "[apsimname]"
set config(machinery,[apsimname],newPrice) "[newPrice]"
set config(machinery,[apsimname],tradeInValue) "[tradeInValue]"
set config(machinery,[apsimname],lifeOfEquipment) "[lifeOfEquipment]"
set config(machinery,[apsimname],insuranceRate) "[insuranceRate]"
set config(machinery,[apsimname],repairs) "[repairs]"
set config(machinery,[apsimname],oil) "[oil]"
set config(machinery,[apsimname],loanInterestRate) "[loanInterestRate]"
set config(machinery,[apsimname],loanDuration) "[loanDuration]"
set config(machinery,[apsimname],age) "[age]"

</text>
          <event>init</event>
        </script>
      </rule>
    </tclmanager>
    <tclmanager name="Economics">
      <rule name="Cash Initialisation logic">
        <ui>
          <category description="No editable parameters" />
        </ui>
        <script name="init">
          <text><![CDATA[
# Apsim/Economics Cashbook (sub)module

# accepts messages:
#  cashbook income {amount 64000.0} {comment "description here"}
#  cashbook income {category cropprice} {name wheat} {yield 4000} {protein 12.3} {comment "description here"}
#  cashbook income {category cropprice} {name sorghum} {yield 6000} {comment "description here"}
#  cashbook expenditure {cost 42.0} {comment "description here"}
#  cashbook expenditure {category seed} {name wheat} {rate 120} {comment "description here"}
# Keeps a balance, writes a log.

########################## Apsim interface code here
source $apsuite/Model/TclLink/CIDataTypes.tcl

set balance [expr 0.0]
apsimRegisterGetSet balance
apsimSubscribeVariant  income      "cashbook:incomeHandler"
apsimSubscribeVariant  expenditure "cashbook:expenditureHandler"
apsimSubscribeNull  process     "cashbook:processHandler"
apsimSubscribeNull  end_simulation "cashbook:exitHandler"

# An event handler. 
#  cashbook income {amount 64000.0}                                              {comment "description here"}
#  cashbook income {category cropprice} {name wheat} {yield 4000} {protein 12.3} {comment "description here"}
#  cashbook income {category cropprice} {name sorghum} {yield 6000}              {comment "description here"}
proc cashbook:incomeHandler {args} {
   global config incomingVariant balance

   set names {}
   foreach {_name _value} [unpack_Variant $incomingVariant] {
      set $_name [string tolower $_value]
      lappend names $_name
   }
   if {![info exists comment]} { set comment "" }
   if {![info exists paddock]} { set paddock "" }
   if {![info exists protein]} { set protein "" }
   
   if {[info exists amount] && [string is double -strict $amount]} {
      set balance [expr $balance + $amount]
      cashbook:log income amount $amount comment $comment paddock $paddock

   } elseif {[info exists category] && [info exists name] && 
             [info exists yield] && [info exists area]} {
      set amount "NA"
      set price  "NA"
      if {![info exists config(economics,$category,$name)] } {
         foreach {n v} [array get config economics*] {apsimWriteToSummaryFile "economics $n=$v"}
         error "No price information for crop $name in $category"
      }
      if {![info exists config(economics,$category,$name,grain_moisture)] } {
         apsimWriteToSummaryFile "Warning!!!!\nNo grain moisture found for $name. Using 12%."
         set config(economics,$category,$name,grain_moisture) 12.0
      }
      if {$name != "wheat"} {
         set price $config(economics,$category,$name)
      } else {
         # oddball wheat pricing system..
         set proteins $config(economics,$category,$name,protein)
         set prices $config(economics,$category,$name)
         set price [lindex $prices 0]
         for {set i 0} {($i < [llength $proteins]) && 
             ($protein > [lindex $proteins $i])} {incr i} {
               set price [lindex $prices $i]
         }
      }  
      set wetYield [expr ($yield * 100.0) / (100.0 - $config(economics,$category,$name,grain_moisture))]
      set amount [expr  $price * $wetYield * $area]

      set comment "$category ($name)"
      apsimWriteToSummaryFile "Priced $name $category (price='$price', yield='$wetYield' wet) over '$area' ha = '$amount'"
      set balance [expr $balance + $amount]
      cashbook:log income amount $amount comment $comment \
                          income $amount crop_income $amount \
                          paddock $paddock area $area \
                          yield $wetYield protein $protein crop $name
   } else {
      error "cashbook:income: Must specify a either an numeric amount, or <category, name, price and area>."
   }
}

proc cashbook:expenditureHandler {args} {
  global incomingVariant config
  set _names {}

  set comment ""
  foreach {_name _value} [unpack_Variant $incomingVariant] { 
     set $_name [string tolower $_value]
     lappend _names $_name
  }

  if {[lsearch ${_names} comment] < 0} {lappend _names comment}

  if {[info exists cost]} {
     # Simple 
     global balance
     set balance [expr $balance - $cost]
  } elseif {[info exists category] && [info exists name] && [info exists rate] && [info exists area]} {
     # lookup this expense in our table of costs

     if {![info exists config(economics,$category,$name)] } {
        foreach {n v} [array get config economics*] {apsimWriteToSummaryFile "economics $n=$v"}
        error "No price information for $name in $category"
     }

     set price $config(economics,$category,$name)
     set cost [expr $price * $rate * $area]

     if {[lsearch ${_names} price] < 0} {lappend _names price}

     set comment "$category ($name)"
     apsimWriteToSummaryFile "Costed $name $category (rate=$rate, price=$price) over $area ha = $cost"
     
     global balance
     set balance [expr $balance - $cost]
  } else {
     error "cashbook:expenditure: Must specify a either a cost or a (category + name + rate + area)."
  }
  if {[info exists fallow_cost] && ![string is double -strict $fallow_cost]} {set fallow_cost $cost}
  if {[info exists incrop_cost] && ![string is double -strict $incrop_cost]} {set incrop_cost $cost}
  set cmd "cashbook:log expenditure cost $cost" 
  foreach _name ${_names} { lappend cmd ${_name} [set ${_name}] }
  eval $cmd
}

# Add up the annual farm overheads
proc cashbook:doFarmOverheads {} {
   global balance config
   set sum $config(economics,overheads)
      
   set balance [expr $balance - $sum]
   cashbook:log expenditure cost $sum comment "Farm Overheads"
}

# Work our repayments on initial investment
proc cashbook:doInitialCapital {} {
   global config balance

   if {![info exists config(economics,icapital,ivalue)] ||
       ![info exists config(economics,icapital,loanRate)] ||
       ![info exists config(economics,icapital,loanDuration)]} {
      return   
   }
       
   if {![info exists config(economics,icapital,loanPeriod)]} {
      set config(economics,icapital,loanPeriod) 1
   }
   
   if {$config(economics,icapital,loanRate) > 0.0} {
      if {$config(economics,icapital,loanPeriod) <=  $config(economics,icapital,loanDuration)} {
         #A = P(i(1+i)^n)/((1+i)^n - 1)
         set P $config(economics,icapital,ivalue)
         set i [expr $config(economics,icapital,loanRate)/100.0]
         set n $config(economics,icapital,loanDuration)
         
         set A [expr $P * ($i*pow(1+$i,$n))/(pow(1.0+$i,$n) - 1.0) ]
      
         set balance [expr $balance - $A]
         cashbook:log expenditure cost $A \
                                  interest_paid $A \
                                  comment "Loan repayments for initial capital outlay"
         
         set config(economics,icapital,loanPeriod) [expr 1 + $config(economics,icapital,loanPeriod)]
         if { $config(economics,icapital,loanPeriod) >  $config(economics,icapital,loanDuration) } {
             apsimWriteToSummaryFile "Loan for initial capital outlay is finished"
         }    
      }
   }
   puts "doInitialCapital done"
}
     


# Send an "end financial year" message when needed
proc cashbook:processHandler {args} {
  if {[apsimGet day] == 181} {
     cashbook:doFarmOverheads
     cashbook:doInitialCapital
     apsimSendMessage "" end_financial_year
  }
}

proc cashbook:log {what args} {
   global balance config 
   set date [apsimGet dd/mmm/yyyy]

   set _names {}
   foreach {_name _value} $args { 
      set ${_name} ${_value} 
      lappend _names $_name
   }

   if { [info exists config(economics,outputfp)] } {
      if {$what == "income"} {
         puts $config(economics,outputfp) "$date,$amount,,$balance,$comment"
      } elseif {$what == "expenditure"} {
         puts $config(economics,outputfp) "$date,,$cost,$balance,$comment"
      } else {
         error "Unknown cashbook operation '$what'"
      }
   }

   if {$what == "income"} {
      set cmd "cashbook:summary date $date $what $amount"
   } elseif {$what == "expenditure"} {
      set cmd "cashbook:summary date $date $what $cost "
   } else {
      error "Unknown cashbook operation '$what'"
   }
   foreach _name ${_names} { lappend cmd ${_name} [set ${_name}] }
   eval $cmd
}

proc cashbook:summary {args} {
   global balance config
   
   if { [info exists config(economics,summaryfp)]} {
      
      foreach {_name _value} $args {set ${_name} ${_value} }

      foreach v {date paddock area crop yield protein "fertiliser_type" \
               "fertiliser_rate" "interim_rainfall" "interim_runoff" "interim_drainage" \
               "interim_soil_loss" "SW_state" "NO3_state" "fallow_cost" "incrop_cost" "crop_income" \
               "interest_paid" "expenditure" "income" "comment"} {
         if {[info exists $v]} {
            puts -nonewline $config(economics,summaryfp) "[set $v],"
         } else {
            puts -nonewline $config(economics,summaryfp) ","
         }     
      }
      puts $config(economics,summaryfp) ""
   }
}
# Annual summaries. Re-read the event file we have written into a single array and
# write a cash flow summary
proc cashbook:exitHandler {} {
   global config

   puts "Cashbook: Writing summaries"

   if { [info exists config(economics,outputfp)] } { close $config(economics,outputfp) }
   if { [info exists config(economics,summaryfp)] } { close $config(economics,summaryfp) }

   if { ![info exists config(economics,cashSummaryName)] } { return }

   #1. Read and store event data
   set fp [open $config(economics,cashSummaryName) r]
   gets $fp header
   set columns [split $header ","]
   
   set minyear 3000; set maxyear 0; 
   set years {}; set paddocks {}; catch {unset A}
   
   while {[gets $fp line] >= 0} {
      foreach what {incrop_cost fallow_cost crop_income income expenditure interest_paid interest_earned} {catch {unset $what}}
      foreach $columns [split $line ","] {break}
      regsub -all "/" $date "-" date
      set now [clock scan $date]
      set endYear [clock scan "30-june-[clock format $now -format %Y]"]
   
      if {$now > $endYear} {
         set year [expr [clock format $now -format %Y]+1]
      } else {
         set year [clock format $now -format %Y]
      }
   
      if {$year < $minyear} {set minyear $year}
      if {$year > $maxyear} {set maxyear $year}
      if {[lsearch $years $year] < 0} {lappend years $year}
      if {$paddock != {} && $paddock != "livestock" && [lsearch $paddocks $paddock] < 0} {lappend paddocks $paddock}
      foreach what {incrop_cost fallow_cost crop_income} {
         if {[string is double -strict [set $what]]} {
            if {![info exists A($year,$paddock,$what)]} {
               set A($year,$paddock,$what) [set $what]
            } else {
               set A($year,$paddock,$what) [expr $A($year,$paddock,$what) + [set $what]]
            }
         }
      }
      
      foreach what {income expenditure interest_paid interest_earned} {
         if {$paddock == {} && 
             [info exists $what] && 
             [string is double -strict [set $what]]} {
            if {![info exists A($year,farm_$what)]} {
               set A($year,farm_$what) [set $what]
            } else {
               set A($year,farm_$what) [expr $A($year,farm_$what) + [set $what]]
            }
         }

         if {$paddock == "livestock" && 
             [info exists $what] && 
             [string is double -strict [set $what]]} {
            if {![info exists A($year,livestock_$what)]} {
               set A($year,livestock_$what) [set $what]
            } else {
               set A($year,livestock_$what) [expr $A($year,livestock_$what) + [set $what]]
            }
         }

      }
   }
   close $fp
   
   set paddocks [lsort $paddocks]
   
   #2. Write annual cash flow summary
   set fp [open $config(economics,annualSummaryName) w]

   foreach year $years {puts -nonewline $fp ",Year $year"}
   puts $fp "\nCrop income"
   foreach paddock $paddocks {
      puts -nonewline $fp "Paddock $paddock"
      foreach year $years {
         if {[info exists A($year,$paddock,crop_income)]} {
            puts -nonewline $fp ",[format "%.0f" $A($year,$paddock,crop_income)]"
         } else {
            puts -nonewline $fp ","
         }
      }
      puts $fp ""
   }
   
   puts -nonewline $fp "Livestock income"
   foreach year $years {
      if {[info exists A($year,livestock_income)]} {
         puts -nonewline $fp ",[format "%.0f" $A($year,livestock_income)]"
      } else {
         puts -nonewline $fp ","
      }
   }
   puts $fp ""
   puts -nonewline $fp "Other farm income"
   foreach year $years {
      if {[info exists A($year,farm_income)]} {
         puts -nonewline $fp ",[format "%.0f" $A($year,farm_income)]"
      } else {
         puts -nonewline $fp ","
      }
   }
   puts $fp ""
   puts -nonewline $fp "Interest Earned"
   foreach year $years {
      if {[info exists A($year,farm_interest_earned)]} {
         puts -nonewline $fp ",[format "%.0f" $A($year,farm_interest_earned)]"
      } else {
         puts -nonewline $fp ","
      }
   }
   puts $fp ""
   
   puts -nonewline $fp "Total income"
   foreach year $years {
      set sum 0.0
      foreach {name value} [array get A $year,*income] {
         set sum [expr $sum + $value]
      }   
      puts -nonewline $fp ",[format %.0f $sum]"
      set A($year,total_income) $sum
   }
   puts $fp "\n"
   
   puts $fp "Variable expenses"
   foreach what {incrop_cost fallow_cost} {
      foreach paddock $paddocks {
         puts -nonewline $fp "Paddock $paddock $what"
         foreach year $years {
            if {[info exists A($year,$paddock,$what)]} {
               puts -nonewline $fp ",[format "%.0f" $A($year,$paddock,$what)]"
            } else {
               puts -nonewline $fp ","
            }
         }
         puts $fp ""
      }
   }
   puts -nonewline $fp "Livestock expenses"
   foreach year $years {
      if {[info exists A($year,livestock_expenditure)]} {
         puts -nonewline $fp ",[format "%.0f" $A($year,livestock_expenditure)]"
      } else {
         puts -nonewline $fp ","
      }
   }
   puts $fp ""
   puts -nonewline $fp "Other expenses"
   foreach year $years {
      if {[info exists A($year,farm_expenditure)]} {
         puts -nonewline $fp ",[format "%.0f" $A($year,farm_expenditure)]"
      } else {
         puts -nonewline $fp ","
      }
   }
   puts $fp ""
   
   puts -nonewline $fp "Interest Paid"
   foreach year $years {
      if {[info exists A($year,farm_interest_paid)]} {
         puts -nonewline $fp ",[format "%.0f" $A($year,farm_interest_paid)]"
      } else {
         puts -nonewline $fp ","
      }
   }
   puts $fp ""
   
   puts -nonewline $fp "Total expenses"
   foreach year $years {
      set sum 0.0
      foreach {name value} [array get A $year,farm_expenditure] {
         set sum [expr $sum + $value]
      }   
      foreach {name value} [array get A $year,*cost] {
         set sum [expr $sum + $value]
      }   
      puts -nonewline $fp ",[format %.0f $sum]"
      set A($year,total_expenses) $sum
   }
   puts $fp "\n"

   puts -nonewline $fp "Annual Surplus/Deficit"
   foreach year $years {
      set sum [expr $A($year,total_income) - $A($year,total_expenses)]
      set A($year,surplus) $sum
      puts -nonewline $fp ",[format %.0f $sum]"
   }
   puts $fp "\n"

   puts -nonewline $fp "Cumulative Cash Flow"
   set year [expr [lindex $years 0]-1]
   set A($year,balance) $config(initialBalance)
   foreach year $years {
      set A($year,balance) [expr $A([expr $year-1],balance) + $A($year,surplus)]
      puts -nonewline $fp ",[format %.0f $A($year,balance)]"
   }
   puts $fp "\n"

   close $fp
}

# apsim 'strings' are returned as arrays of strings and may need this
proc unlist {list} {
   if {[llength $list] == 1} {return [lindex $list 0]}
   return $list
}

########################## End apsim interface code

apsimWriteToSummaryFile "     Cashbook initialised."
apsimWriteToSummaryFile ""

]]></text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Initial Capital Assets">
        <ui>
          <category description="Initial Capital Assets" />
          <ivalue type="text" description="Loan Value of Initial Investment ($)">1</ivalue>
          <loanRate type="text" description="Loan repayment rate (% pa)">6.0</loanRate>
          <loanDuration type="text" description="Loan duration (years)">50</loanDuration>
        </ui>
        <script name="init">
          <text>
set config(economics,icapital,ivalue) "[ivalue]"
set config(economics,icapital,loanRate) "[loanRate]"
set config(economics,icapital,loanDuration) "[loanDuration]"
          </text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Cash Journal">
        <ui>
          <category description="Initial Value" />
          <balance type="text" description="Initial cash balance ($)">42000</balance>
          <category description="Cash Journal" />
          <outputfile type="yesno" description="Produce Cashbook">yes</outputfile>
          <summaryfile type="yesno" description="Produce Cash Summaries">yes</summaryfile>
        </ui>
        <script name="init">
          <text>
set runTitle [unlist [apsimGet title]]

if {"[outputfile]" != "no"} {
   set config(economics,outputfp) [open $runTitle.cashBook.csv w]
   puts $config(economics,outputfp) "date,income,expenditure,balance,comment"
}

if {"summaryfile" != "no"} {
   set config(economics,cashSummaryName) "$runTitle.cashSummary.csv"
   set config(economics,summaryfp) [open $config(economics,cashSummaryName) w]
   puts $config(economics,summaryfp) "date,paddock,area,crop,yield,protein,fertiliser_type,fertiliser_rate,\
interim_rainfall,interim_runoff,interim_drainage,\
interim_soil_loss,SW_state,NO3_state,fallow_cost,incrop_cost,crop_income,interest_paid,expenditure,income,comment"

   set config(economics,annualSummaryName) "$runTitle.cashSummary.Annual.csv"
   file delete -force $config(economics,annualSummaryName)
}

set config(initialBalance) "[balance]"

          </text>
          <event>init</event>
        </script>
        <script name="start_simulation">
          <text>
set balance "[balance]"
apsimWriteToSummaryFile "     Initial Balance = $balance"
          </text>
          <event>start_simulation</event>
        </script>
      </rule>
      <rule name="Prices">
        <ui>
          <category description="Prices" />
          <wheat type="text" description="Wheat price ($/tonne)">180.0</wheat>
          <wheatprotein type="text" description="Wheat protein (%)">12.0</wheatprotein>
          <sorghum type="text" description="Sorghum price ($/tonne)">140.0</sorghum>
          <chickpea type="text" description="Chickpea price ($/tonne)">350.0</chickpea>
          <weed type="text" description="Weed price ($/tonne)">0.0</weed>
          <maize type="text" description="Maize price ($/tonne)">0.0</maize>
        </ui>
        <script name="init">
          <text>
set config(economics,cropprice,wheat) "[wheat]"
set config(economics,cropprice,wheat,protein) "[wheatprotein]"
set config(economics,cropprice,sorghum) "[sorghum]"
set config(economics,cropprice,chickpea) "[chickpea]"
set config(economics,cropprice,weed) "[weed]"
set config(economics,cropprice,maize) "[maize]"
          </text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Costs - Farm Overheads">
        <ui>
          <category description="Overheads" />
          <accountancy type="text" description="Accountant/Consultancy fees ($)">5000.0</accountancy>
          <administration type="text" description="Administration ($)">500.0</administration>
          <bankcharges type="text" description="Bank Charges other than interest ($)">500.0</bankcharges>
          <electricity type="text" description="Electricity - Farm ($)">2000.0</electricity>
          <freight type="text" description="Freight &amp; Cartage (sundry) ($)">0.0</freight>
          <fuels type="text" description="Fuel &amp; Oil (other than farming) ($)">10000.0</fuels>
          <insurance type="text" description="Insurance - Farm ($)">6000.0</insurance>
          <vehicleexpenses type="text" description="Motor Vehicle Expenses - Farm ($)">5000.0</vehicleexpenses>
          <rates type="text" description="Rates and Rents - Farm ($)">3500.0</rates>
          <repairs type="text" description="Repairs &amp; Maintenance (extra) ($)">20000.0</repairs>
          <subs type="text" description="Subscriptions ($)">1000.0</subs>
          <telephone type="text" description="Telephone - Farm ($)">2500.0</telephone>
          <wages type="text" description="Wages (other than casual included in activity budgets) ($)">50000.0</wages>
          <other type="text" description="Other Overhead Expenses ($)">0.0</other>
          <operator type="text" description="Operators labour and management ($)">30000.0</operator>
        </ui>
        <script name="init">
          <text>
set config(economics,overheads) [expr [accountancy] + [administration] \
  + [bankcharges] + [electricity] + [freight] + [fuels] + [insurance] \
  + [vehicleexpenses] + [rates] + [repairs] + [subs] + [telephone] + [wages] \
  + [other] + [operator] ]
          </text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Costs - Fuel">
        <ui>
          <category description="Costs" />
          <fuelcosts type="text" description="Cost of fuel ($/litre net)">1.0</fuelcosts>
        </ui>
        <script name="init">
          <text>
set config(economics,fuelcosts,fuelcosts) "[fuelcosts]"
          </text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Costs - Fertilisers">
        <ui>
          <category description="Fertiliser Costs" />
          <map type="text" description="MAP (starterphos - 10n;21.9p;1.5s) ($/kg)">0.56</map>
          <starter_z type="text" description="starter z ($/kg)">0.62</starter_z>
          <urea type="text" description="Urea ($/kg)">0.6</urea>
          <no3_n type="text" description="NO3 N ($/kg)">1.0</no3_n>
        </ui>
        <script name="init">
          <text>
set config(economics,fertilisercost,map) "[map]"
set config(economics,fertilisercost,starter_z) "[starter_z]"
set config(economics,fertilisercost,urea) "[urea]"
set config(economics,fertilisercost,no3_n) "[no3_n]"
          </text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Costs - Herbicides">
        <ui>
          <category description="Herbicide Costs" />
          <roundup type="text" description="Roundup POWERMAX (glyphosate MEA salt) ($/kg)">7.64</roundup>
          <mcpalve type="text" description="MCPA LVE (MCPA ester) ($/kg)">5.0</mcpalve>
          <ally type="text" description="Ally (metsulfuron) ($/kg)">0.2</ally>
          <amicide625 type="text" description="Amicide 625 ($/kg)">5.5</amicide625>
          <simazine type="text" description="Simazine 900DF ($/kg)">5.5</simazine>
        </ui>
        <script name="init">
          <text>
set config(economics,herbicide,roundup) "[roundup]"
set config(economics,herbicide,mcpalve) "[mcpalve]"
set config(economics,herbicide,ally) "[ally]"
set config(economics,herbicide,amicide625) "[amicide625]"
set config(economics,herbicide,simazine) "[simazine]"
          </text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Costs - Insecticides">
        <ui>
          <category description="Insecticide Costs" />
          <LarvinLV type="text" description="Larvin LV ($/kg)">27.97</LarvinLV>
          <steward type="text" description="Steward (indoxacarb) ($/kg)">85.36</steward>
        </ui>
        <script name="init">
          <text>
set config(economics,insecticide,larvinlv) "[LarvinLV]"
set config(economics,insecticide,steward) "[steward]"
          </text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Costs - Seed">
        <ui>
          <category description="Seed Costs" />
          <barley type="text" description="Barley (Tallon) ($/kg)">0.78</barley>
          <chickpea type="text" description="Chickpea (Amethyst) ($/kg)">1.1</chickpea>
          <cotton type="text" description="Cotton ($/kg)">5.6</cotton>
          <foragesorghum type="text" description="Forage Sorghum (Jumbo) ($/kg)">3.96</foragesorghum>
          <lucerne type="text" description="Lucerne (sequel) ($/kg)">5.45</lucerne>
          <maize type="text" description="Maize ($/kg)">8.4</maize>
          <millet type="text" description="Millet (White frend) ($/kg)">8.4</millet>
          <mungbean type="text" description="Mungbean (Emerald) ($/kg)" />
          <sorghum type="text" description="Sorghum (Buster) ($/kg)">5.8</sorghum>
          <wheat type="text" description="Wheat (Kennedy) ($/kg)">0.9</wheat>
        </ui>
        <script name="init">
          <text>
set config(economics,seedcost,weed) "0.0"
set config(economics,seedcost,barley) "[barley]"
set config(economics,seedcost,chickpea) "[chickpea]"
set config(economics,seedcost,cotton) "[cotton]"
set config(economics,seedcost,foragesorghum) "[foragesorghum]"
set config(economics,seedcost,lucerne) "[lucerne]"
set config(economics,seedcost,maize) "[maize]"
set config(economics,seedcost,millet) "[millet]"
set config(economics,seedcost,mungbean) "[mungbean]"
set config(economics,seedcost,sorghum) "[sorghum]"
set config(economics,seedcost,wheat) "[wheat]"
          </text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Costs - Contractors">
        <ui>
          <category description="Contractor Costs" />
          <generic type="text" description="Harvesting ($/ha)">250.0</generic>
        </ui>
        <script name="init">
          <text>
set config(economics,harvesting,generic) "[generic]"
          </text>
          <event>init</event>
        </script>
      </rule>
    </tclmanager>
    <tclmanager name="Farm Manager">
      <rule name="Name">
        <ui>
          <category description="No editable parameters" />
        </ui>
        <script name="init">
          <text>

# apsim 'strings' are returned as arrays of strings and may need this
proc unlist {list} {
   if {[llength $list] == 1} {return [lindex $list 0]}
   return $list
}

set simName  [unlist [apsimGet title]]
apsimWriteToSummaryFile "title = $simName"
</text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Weeds">
        <ui>
          <category description="Simple weed model (economic impact only)" />
          <rainthresh type="text" description="Rainfall required for germination (mm / 4 days)">30</rainthresh>
          <swthresh type="text" description="Surface soil water fraction for weed death (0-1)">0.5</swthresh>
          <rrrate type="text" description="Roundup application rate (lts/ha)">5</rrrate>
        </ui>
        <script name="init">
          <text><![CDATA[# Newer version of weed germination - spray 2 weeks after a {germination event & swCrit & temp}.
proc checkWeeds {} {
   global daysSinceLastHarvest weeds paddocks config

   foreach paddock $paddocks {
      if {$paddock != "toplevel" &&
          ([currentState $paddock] == "Fallow" ) && 
          $daysSinceLastHarvest($paddock) > 30} {

         if {$weeds($paddock,GermDay) == {} && [sumLastRain 4] >= [rainthresh]} {
            set weeds($paddock,GermDay) [apsimGet day]
            set weeds($paddock,tt) 0.0
            apsimWriteToSummaryFile "Weeds germinating in $paddock"

         } elseif {$weeds($paddock,GermDay) != {}} {
            # Thermal time calc
            set weeds($paddock,tt) [expr $weeds($paddock,tt) + ([apsimGet maxt] + [apsimGet mint])/2.0]
         
            # Surface SW calc
            set ll [lindex [apsimGet $config($paddock,watBal).ll15] 0];
            set sw [lindex [apsimGet $config($paddock,watBal).sw] 0]
            set dul [lindex [apsimGet $config($paddock,watBal).dul] 0]
            set swf [expr (($sw-$ll)/($dul-$ll))]
            if {$swf < [swthresh]} {
               # kill off weeds
               set weeds($paddock,GermDay) {}
               apsimWriteToSummaryFile "Weeds die in $paddock"
         
            } elseif {$weeds($paddock,tt) > 250.0} {
               # Weeds are mature - spray them
               incr weeds($paddock,Events)
               eval apsimSendMessage economics operate [mash [concat [gatherArgs spray herbicide] \
                      area $config($paddock,area)  paddock $paddock  costtype fallow_cost]]

               apsimSendMessage economics expenditure "category herbicide" "name Roundup" \
                         "rate [rrrate]" "area $config($paddock,area)"  \
                         "paddock $paddock" {fallow_cost {}} \
                         {comment "Roundup weeds"}
               apsimWriteToSummaryFile "Weeds mature in $paddock - sprayed out."
         
               set weeds($paddock,GermDay) {}
               set weeds($paddock,tt)      0.0
            }
         }
      }   
   }
}
]]></text>
          <event>init</event>
        </script>
        <script name="process">
          <text>
checkWeeds
</text>
          <event>process</event>
        </script>
        <script name="start_simulation">
          <text>
foreach paddock $paddocks {
  set weeds($paddock,Events)  0                 ;# number of weed germination events
  set weeds($paddock,GermDay) {}                ;# date of next weed spraying
}
          </text>
          <event>start_simulation</event>
        </script>
      </rule>
      <rule name="Financial year reporting">
        <ui>
          <category description="No editable parameters" />
        </ui>
        <script name="init">
          <text>

proc do_end_financial_year {} {
   global config ef

   set year [apsimGet year]

   foreach {accumulator} {runoff drain soil_loss es} {
     foreach paddock $config(cropPaddocks) {
        global $paddock.$accumulator
        set ef($year,$paddock,$accumulator) [set $paddock.$accumulator]
     }
   }
   global accRain
   set ef($year,accRain) $accRain
   set ef($year,balance) [apsimGet balance]
   lappend ef(years) $year
}

# EF - used to be "end of financial" but has a lot more now.
proc open_ef_stuff {} {
   global ef

   set year [expr [apsimGet year] - 1 ]
   set ef(years) $year
   set ef($year,balance) [apsimGet balance] 
   set ef(states) {}
   set ef(rules) {}
}

proc close_ef_stuff {} {
   global simName config ef

   # Heading
   set fp [open $simName.financial.csv w]
   puts -nonewline $fp "year"
   foreach {accumulator} {runoff drain soil_loss es rain} {
      puts -nonewline $fp ",$accumulator"
   }
   foreach state $ef(states) {
      if {$state != {}} {
        puts -nonewline $fp ",$state"
      }
   }
   puts $fp ",profit"

   # Area weighted averages of environmental stuff
   set tfa 0.0
   foreach paddock $config(cropPaddocks) {set tfa [expr $tfa + $config($paddock,area)]}
   
   foreach year [lrange $ef(years) 2 end] {
      puts -nonewline $fp "$year"
      foreach {accumulator} {runoff drain soil_loss es} {
         set s 0.0
         foreach paddock $config(cropPaddocks) {
            set s [expr $s + $ef($year,$paddock,$accumulator) * $config($paddock,area) / $tfa]
         }
         puts -nonewline $fp ",$s"
      }
      puts -nonewline $fp ",$ef($year,accRain)"

      # Number of "state transitions" made in each year
      foreach state $ef(states) {
         if {$state != {}} {
            if {[info exists ef($year,$state)]} {
              puts -nonewline $fp ",$ef($year,$state)"
            } else {
              puts -nonewline $fp ",0"
            }  
         }
      }

      # profit = change in bank balance each year
      puts -nonewline $fp ",[expr $ef($year,balance) - $ef([expr $year-1],balance)]"
      puts $fp ""
   }
   close $fp
   
   # per-crop yields etc..
   foreach state $ef(states) {
     if {$state != {}} {
         set fp [open $simName.$state.csv w]
         if {[info exists ef($state,yield)]} {
            foreach yield $ef($state,yield) {
               puts $fp $yield
            }   
         }  
         close $fp
      }   
   }

   # Finally the rule "failures"
}
</text>
          <event>init</event>
        </script>
      </rule>
      <rule name="Farm logic">
        <ui>
          <category description="No editable parameters" />
        </ui>
        <script name="init">
          <text><![CDATA[
# Initial conditions
set myName  "FarmManager"
source $apsuite/UserInterface/APSFarm/FarmManager.tcl

set paddocks [list toplevel p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 ]
set config(cropPaddocks)    [list p1 p2 p3 p4 p5 p6 p7 p8 p9 p10]
set config(foragePaddocks)  {}

set config(toplevel,graphNames)  {}

foreach p $config(cropPaddocks) {
   set config($p,graphNames)  stateGraph
   set config($p,area)        300.0
   set weeds($p,Events)       0                      ;# number of weed germination events
   set weeds($p,GermDay)      {}                     ;# date of next weed spraying

   foreach {accumulator} {runoff drain soil_loss es} {
      set $p.$accumulator 0.0
   }
}

set accRain 0.0

foreach p $paddocks {
  set config($p,watBal)   "$p.Soil Water"
  set config($p,nModule)  "$p.Soil Nitrogen"
}


# Initialisation for MCA

   # Delete any old logfile so we dont get confused..
   catch {file delete -force $simName.log}

   # The 10 day rainfall accumulator - should be the 10 days of rain prior to start of simulation
   set rainList {0.2 1.0 0 0 0 0 15 12 0 0 0 0}

   # A list of variables to report from each paddock on each "event"
   set reportVariables [list esw no3() ]

   # Crop variables - name/event/value triplets
   set reportCropVariables [list sorghum  harvest yield \
                                 wheat    harvest yield \
                                 chickpea harvest yield]

   # Manager variables to report from each paddock on each "event"
   set reportManagerVariables [list weeds(Events) annRunoff annDrain annSoil_loss annEvap annRain state]

# Defaults for a lot of things.
# we use this table to build a list of "name/value" pairs that get fed into
# sow/fertiliser commands etc.
# ***Check the summary file for what it uses, search other files for "gatherArgs"
   set defaults(sow,sowing_depth)              30
   set defaults(fertiliser,calcMethod)         targetN
   set defaults(fertiliser,depth)              50
   set defaults(fertiliser,type)               urea

   set defaults(wheat,sow,cultivar)              Sunvale
   set defaults(Sf_earlyWheat,sow,cultivar)      Sunbri
   set defaults(Lf_earlyWheat,sow,cultivar)      Sunbri
   set defaults(lateWheat,sow,cultivar)          Sunstate
   set defaults(wheat,sow,plants)                100       ;# plants per sq mt established
   set defaults(wheat,fertiliser,amount)         140       ;# kg urea/ha
   set defaults(Lf_earlyWheat,fertiliser,amount) 180       ;# kg urea/ha
   set defaults(Lf_Wheat,fertiliser,amount)      180       ;# kg urea/ha
    
   # (same as chickpea)
   set defaults(wheat,sowingCosts)             {{category seedcost    name Wheat            rate 60  comment  "Wheat seed"} 
                                                {category fertilisercost  name map              rate 20  comment  "Wheat MAP starter"} 
                                                {category herbicide name "MCPALVE"       rate 0.5 comment  "Wheat mcpa starter"}
                                                {category herbicide name "Ally"           rate 5   comment  "Wheat metsulfuran starter"}}

   set defaults(wheat,harvestingCosts)         {{category harvesting   name generic          rate 0.16666  comment  "Wheat contract harvest"} 
                                                {category fuelcosts  name fuelcosts        rate 8.1      comment  "Wheat contract harvest fuel"}}

   set defaults(sorghum,sow,cultivar)             wray
   set defaults(Lf_earlySorghum,sow,cultivar)     wray
   set defaults(Sf_earlySorghum,sow,cultivar)     wray
   
   set defaults(sorghum,sow,tiller_no_fertile)     0
   set defaults(sorghum,sow,skip)                  "single"
   set defaults(sorghum,sow,region)                "SQ"
   set defaults(sorghum,sow,row_spacing)            1.0
   set defaults(sorghum,sow,plants)                 4.0
   set defaults(Sf_earlySorghum,sow,plants)         4.5
   set defaults(Lf_earlySorghum,sow,plants)         4.5
   
   set defaults(Sf_Sorghum,fertiliser,amount)       140
   set defaults(Sf_earlySorghum,fertiliser,amount)  140
   set defaults(sorghum,fertiliser,amount)          180
   set defaults(sorghum,sowingCosts)           {{category seedcost   name sorghum   rate 4 comment "Sorghum seed"}
                                                 {category fertilisercost  name starter_z   rate 30  comment  "Sorghum Starter_z"}}
## NBNB needs atrazine @3.5lt/ha in wet seasons
   set defaults(sorghum,harvestingCosts)       {{category harvesting   name generic         rate 0.16666 comment  "Sorghum contract harvest"} 
                                                {category herbicide  name Roundup         rate 1.5     comment  "Sorghum spray out"} 
                                                {category fuelcosts  name fuelcosts       rate 8.1     comment  "Sorghum contract harvest fuel"}}

   set defaults(CoverCrop,fertiliser,amount)   0
   
   set defaults(chickpea,sow,cultivar)         amethyst
   set defaults(chickpea,sow,plants)           30
   set defaults(chickpea,fertiliser,amount)    0
   set defaults(chickpea,sowingCosts)          {{category seedcost    name Chickpea         rate 45   comment "Chickpea Seed"}              
                                                {category herbicide   name Roundup          rate 1.3  comment "Pre plant roundup"}
                                                {category herbicide   name Amicide625       rate 0.2  comment "Pre plant 2,4D"} 
                                                {category herbicide   name "simazine"     rate 1.1    comment "Post Simazine"}
                                                {category insecticide name "LarvinLV"    rate 0.75   comment "Insecticide"}
                                                {category fertilisercost  name starter_z   rate 50  comment  "Ckpea Starter_z"}}
                                                
   set defaults(chickpea,harvestingCosts)      {{category harvesting    name generic        rate 0.1851 comment  "Chickpea contract harvest"} 
                                                {category fuelcosts   name fuelcosts      rate 9.0    comment  "Chickpea contract harvest fuel"}}

   set defaults(weed,sow,cultivar)             late
   set defaults(weed,sow,plants)               15
   set defaults(weed,sow,crop_class)           summer_grass
   set defaults(weed,fertiliser,amount)        0

   set defaults(sow,tractor)                   'tractor_1'
   set defaults(sow,implement)                 'planter'
   set defaults(spray,tractor)                 'tractor_1'
   set defaults(spray,implement)               'spray_rig'  ;# this is spray rig
   set defaults(herbicide,spray,name)          "Roundup"

   set config(CoverCrop,alias) weed
   set config(Lf_earlySorghum,alias) sorghum
   set config(Sf_earlySorghum,alias) sorghum
   set config(Lf_Sorghum,alias) sorghum
   set config(Sf_Sorghum,alias) sorghum
   set config(Sf_earlyWheat,alias) wheat
   set config(Lf_earlyWheat,alias) wheat
   set config(Sf_Wheat,alias) wheat
   set config(Lf_Wheat,alias) wheat
   set config(lateWheat,alias) wheat

   set crops {sorghum wheat chickpea}

# Initial conditions for each paddock
set config(p1,initialState)         Fallow
set config(p1,history)              {sorghum sorghum}
set config(p1,daysSinceLastHarvest) 365              ;# A long time
set config(p2,initialState)         Fallow
set config(p2,history)              {wheat sorghum}
set config(p2,daysSinceLastHarvest) 365              ;# A long time
set config(p3,initialState)         Fallow
set config(p3,history)              {wheat wheat}
set config(p3,daysSinceLastHarvest) 365              ;# A long time
set config(p4,initialState)         Fallow
set config(p4,history)              {wheat maize}
set config(p4,daysSinceLastHarvest) 365              ;# A long time
set config(p5,initialState)         Fallow
set config(p5,history)              {maize maize}
set config(p5,daysSinceLastHarvest) 365              ;# A long time
set config(p6,initialState)         Fallow
set config(p6,history)              {sorghum sorghum}
set config(p6,daysSinceLastHarvest) 365              ;# A long time
set config(p7,initialState)         Fallow
set config(p7,history)              {wheat sorghum}
set config(p7,daysSinceLastHarvest) 365              ;# A long time
set config(p8,initialState)         Fallow
set config(p8,history)              {wheat wheat}
set config(p8,daysSinceLastHarvest) 365              ;# A long time
set config(p9,initialState)         Fallow
set config(p9,history)              {wheat maize}
set config(p9,daysSinceLastHarvest) 365              ;# A long time
set config(p10,initialState)         Fallow
set config(p10,history)              {maize maize}
set config(p10,daysSinceLastHarvest) 365              ;# A long time

foreach p $config(cropPaddocks) {
   set state($p)   $config($p,initialState)
   set history($p) $config($p,history)
   set daysSinceLastHarvest($p) 60
}

set state(toplevel) {}
set daysSinceLastHarvest(toplevel) 0



# Return our reluctance to plant sorghum in the current paddock
#  - no more than 3 in a row.
proc sorghumHistory {paddock} {
   global history 
   if {"[lindex $history($paddock) end]" == "sorghum" &&
       "[lindex $history($paddock) end-1]" == "sorghum"} {
      return 0 ;# 2 in a row - no more.
   }
   return 1
}

# Last crop was a failed sorghum crop
## XXX WRONG - should be 1 only if the last sorghum crop failed
proc covercropHistory {paddock} {
   global history
   if {"[lindex $history($paddock) end]" == "sorghum"} {return 1}
   return 0
}

# Return our "reluctance" to plant wheat
proc wheatHistory {paddock} {
   global history
   if {"[lindex $history($paddock) end]" == "wheat" &&
       "[lindex $history($paddock) end-1]" == "wheat"} {
       return 0   ;# 2 in a row - no more.
   }
   return 1
}
# Return our "reluctance" to plant chickpea
proc chickpeaHistory {paddock} {
   global history
   if {[lindex $history($paddock) end] == "chickpea" } {
      return 0   ;# no more than 1 crop
   }
   return 1
}

proc getEsw {paddock} {
   global config
   return [apsimGetOptional $config($paddock,watBal).esw]
}


proc mseek2 {paddock} {
   global config
   set ll2   [lindex [apsimGet $config($paddock,watBal).ll15] 1] 
   set swat2 [lindex [apsimGet $config($paddock,watBal).sw] 1]
   set dul2  [lindex [apsimGet $config($paddock,watBal).dul] 1]
   return [expr (($swat2-$ll2)/($dul2-$ll2))]
}


proc getCover {paddock} {
   global config
   return [apsimGetOptional "$paddock.surface organic matter.surfaceom_cover"]
}

proc sprayChickpeas {paddock} {
   global defaults config
   apsimWriteToSummaryFile "spraying Chickpeas"

   apsimSendMessage economics expenditure \
             {category insecticide} {name Steward} \
             "rate 0.3" "area $config($paddock,area)"  \
             "paddock $paddock" {incrop_cost {}} \
             "crop [currentState $paddock]"     
   apsimSendMessage economics operate \
             "tractor $defaults(spray,tractor)" "implement $defaults(spray,implement)" \
             {category insecticide} {name Steward} \
             "rate 0.3" "area $config($paddock,area)"  "paddock $paddock" {incrop_cost {}} 
}


proc genericCosts {args} {

   # {{category seedcost} {name cotton} {rate 3.5} {Comment "blah blah"}} ...
   foreach {junk items} [concat [array get defaults $crop,sowCosts] [array get defaults $realCrop,sowCosts]]  {
      foreach item $items {
         eval apsimSendMessage economics expenditure \
                    [mash [concat $item area $area  \
                    paddock $paddock incrop_cost {} 
      }
   }
}

proc machineryAvailable {what} {
   return [apsimGet available_$what]
}

]]></text>
          <event>init</event>
        </script>
        <script name="prepare">
          <text>

   if {[dayIs 181]} {
      do_end_financial_year

      set accRain 0.0
      foreach {accumulator} {runoff drain soil_loss es } {
         foreach paddock $paddocks {
            set $paddock.$accumulator 0.0
         }   
      }
   }
   accumRain
          </text>
          <event>prepare</event>
        </script>
        <script name="process">
          <text>
# Housekeeping
if {[catch {doProcess} msg]} {
   apsimWriteToSummaryFile "$errorInfo"
   error "$msg\n$errorInfo"
}
</text>
          <event>process</event>
        </script>
        <script name="post">
          <text>
   set accRain [expr $accRain + [apsimGet rain]]
   
   foreach {accumulator} {runoff drain es } {
      foreach paddock $paddocks {
         if {$paddock != "toplevel"} {
            set $paddock.$accumulator [expr [set $paddock.$accumulator] + [apsimGet $config($paddock,watBal).$accumulator]]
         }
      }   
   }
   foreach {accumulator} {soil_loss} {
      foreach paddock $paddocks {
         if {$paddock != "toplevel"} {
            set $paddock.$accumulator [expr [set $paddock.$accumulator] + [apsimGet $paddock.erosion.$accumulator]]
         }
      }   
   }

          </text>
          <event>post</event>
        </script>
        <script name="start_simulation">
          <text>
 
      set accRain 0.0
      foreach {accumulator} {runoff drain soil_loss es } {
         foreach paddock $paddocks {
            set $paddock.$accumulator 0.0
         }   
      }
 
 foreach p $config(cropPaddocks) {
   set config($p,pawc) [calcPAWC "$p.Soil Water"]
}
open_ef_stuff

setupReport
</text>
          <event>start_simulation</event>
        </script>
        <script name="end_simulation">
          <text>
close_ef_stuff

</text>
          <event>end_simulation</event>
        </script>
      </rule>
      <rule name="Rugplot backend logic">
        <ui>
          <category description="No editable parameters" />
        </ui>
        <script name="init">
          <text><![CDATA[# Rug plotting facility

# 2 areas of interest:
# - logState - called when a graph is changing state, called just after the "actions" have been evaluated

# a logfile is used to generate the rugplots of farm activities. There are 2 parts:
# an xml of paddocks, states & times,
# a binary of decision rules on each evaluation cycle
proc log {msg} {
   #puts $msg
}

package require cdftcl
package require tdom

proc setupLogging {} {
   global simName config paddocks
   set config(paddocks) $paddocks

   # Find the number of graphs - 1 file for each. Delete each.
   set config(graphs) {}
   foreach paddock $config(paddocks) {
     foreach graph $config($paddock,graphNames) {
        if {[lsearch $config(graphs) $graph] < 0} {
           lappend config(graphs) $graph
        }
     }
  }
  foreach graph $config(graphs) {
    apsimWriteToSummaryFile "deleting $simName.$graph.\[xml,nc\]"
    file delete -force $simName.$graph.xml
    file delete -force $simName.$graph.nc
    foreach paddock $config(paddocks) {
       set config(history,$paddock,$graph) {}
    }
  }
  set config(states) {}
  set config(rules) {}
  set config(historyDays) {}
}

# Log a set of rule evaluations
proc logRules {paddock graph rules values } {
   global config

   set data {}
   for {set i 0} {$i < [llength $rules]} {incr i} {
      lappend data [lindex $rules $i] [lindex $values $i]
   }

   set today [apsimGet today]

   lappend config(history,$paddock,$graph,$today) $data

   if {[lsearch $config(historyDays) $today] < 0} {
       lappend config(historyDays) $today
       set config($today,ddmmyyyy) [apsimGet clock.dd/mm/yyyy]
   }
}

# Log a state transition
proc logState {graph paddock state} {
   global config
   set today [apsimGet today]
   lappend config(history,$paddock,$graph) $today $state
   if {[lsearch $config(states) $state] < 0} {lappend config(states) $state}
}

# Write the files. 
proc closeLogging {} {
   global config simName

   package require tdom
   set config(xmldoc) [dom parse [apsimGetComponentXML]]
   set config(docroot) [$config(xmldoc) documentElement]

   foreach graph $config(graphs) {
apsimWriteToSummaryFile "creating $simName.$graph.nc"
      set ncfp [ncdf create $simName.$graph.nc] 
      ncdfdim $ncfp create index [llength $config(historyDays)]
      ncdfdim $ncfp create time -1

      ncdfvar $ncfp create position long {index}
      ncdfvar $ncfp create daynum float {index}

      ncdfvar $ncfp create day     float {time}
      ncdfvar $ncfp create paddock short {time}
      ncdfvar $ncfp create rule    short {time}
      ncdfvar $ncfp create value   float {time}

      set day [lindex $config(historyDays) 0]
      ncdfatt $ncfp GLOBAL put startdate float $day
      ncdfatt $ncfp GLOBAL put startddmmyyyy char $config($day,ddmmyyyy)

      set day [lindex $config(historyDays) end]
      ncdfatt $ncfp GLOBAL put enddate float $day
      ncdfatt $ncfp GLOBAL put endddmmyyyy char $config($day,ddmmyyyy)

      ncdf enddef $ncfp
      set id 0
      foreach p $config(paddocks) {
         set pid($p) $id; incr id
      }   

      set i 0
      foreach day $config(historyDays) {
         foreach paddock $config(paddocks) {
            if {[info exists config(history,$paddock,$graph,$day)]} {
               set pos($paddock,$day) $i
               foreach data $config(history,$paddock,$graph,$day) {
                  foreach {rule value} $data {
                     ncdfvar $ncfp put day     $i $day
                     ncdfvar $ncfp put paddock $i $pid($paddock)
                     ncdfvar $ncfp put rule    $i $rule
                     ncdfvar $ncfp put value   $i $value
                     incr i
                  } 
               }
            }
         }
      }

      #Positions
      for {set i 0} {$i < [llength $config(historyDays)]} {incr i} {
         set day [lindex $config(historyDays) $i]
         set f 0
         foreach paddock $config(paddocks) {
            if {[info exists pos($paddock,$day)]} {
               ncdfvar $ncfp put position  $i $pos($paddock,$day)
               set f 1
               break
            } 
         }
         if {!$f} {
            ncdfvar $ncfp put position  $i -1
         }   
      }
      
      for {set j 0} {$j < [llength $config(historyDays)]} {incr j} {
         ncdfvar $ncfp put daynum $j [lindex $config(historyDays) $j]
      }   

      ncdf close $ncfp

      set fp [open $simName.$graph.xml w]
      puts $fp "<?xml version=\"1.0\" encoding=\"UTF-8\"?><simulation>"
      set id 0
      foreach paddock $config(paddocks) {
         puts $fp "<history id=\"$id\" name=\"$paddock\">"
         foreach {day state} $config(history,$paddock,$graph) {
            if {[info exists pos($paddock,$day)]} {
               puts $fp "<transition day=\"$day\" to=\"$state\" position=\"$pos($paddock,$day)\" />"
            } 
         }
         puts $fp "</history>"
         incr id
      }

      foreach paddock $config(paddocks) {
         puts $fp "<paddock id=\"$pid($paddock)\" name=\"$paddock\" />"
      }   
      set id 0
      foreach rule $config(rules) {
         set rule [string map {\< "&lt;"  \> "&gt;"     
                               \& "&amp;" \" "&quot;"  
                               \[ "&#91;" \] "&#93;"    } $rule]
         puts $fp "<rule id=\"$id\" name=\"$rule\" />"
         incr id
      }

      # Colours
      foreach node [$config(docroot) selectNodes //node] {
          set state [getValue $node "name"]
          set colour [getValue $node "fill"]
          puts $fp "<state name=\"$state\" colour=\"$colour\" />"
      }

      set day [lindex $config(historyDays) 0]
      puts $fp "<startdate ddmmyyyy=\"$config($day,ddmmyyyy)\" day=\"$day\" />"
      set day [lindex $config(historyDays) end]
      puts $fp "<enddate ddmmyyyy=\"$config($day,ddmmyyyy)\" day=\"$day\" />"

      puts $fp "</simulation>"
      close $fp
   }  
   # $config(xmldoc) delete
}

# Override the "standard" decision routine to keep track of state info
proc checkRules {thisPaddock} {
  global config 
  uplevel #0 set paddock $thisPaddock
  set bestScore -1.0; set bestTarget {}; set bestArc {}; set bestGraph {}
  foreach graph $config($thisPaddock,graphNames) {
     foreach arc [$graph arcs -out [currentState $thisPaddock]] {
        set values {}; set rules {}
        set target [$graph arc target $arc]
        if {[$graph arc keyexists $arc window]} {set inWindow [uplevel #0 expr [$graph arc get $arc window]]} else {set inWindow 0}
        foreach rule [$graph arc get $arc rules] {
           set value [uplevel #0 expr $rule]
           lappend values $value
           lappend rules [enCodeRule $target $rule]
        }
        logRules $thisPaddock $graph $rules $values
        if {[llength $values] > 0} {
           set score [expr [join $values "*"]]
           if {$score > $bestScore} {
              set bestScore  $score
              set bestTarget $target
              set bestArc    $arc
              set bestGraph  $graph
           }
        }
     }
  }   
  return [list  $bestScore $bestGraph $bestTarget $bestArc]
}

proc enCodeRule {target ruleText} {
  global config
  regsub -all "\," $ruleText "\-" ruleText

  for {set i 0} {$i < [llength $config(rules)]} {incr i} {
     set rule [lindex $config(rules) $i]
     if {[string equal $rule "$target,$ruleText"]} {
        return $i
     }
  }
  lappend config(rules) "$target,$ruleText"
  return [expr [llength $config(rules)] - 1]
}


# Get the value of an objects 'thing'
proc getValue {id thing} {
   foreach node [$id childNodes] {
      if {[string equal -nocase [$node nodeName] $thing]} {
         return [$node text]
      }
   }
   return ""
}

]]></text>
          <event>init</event>
        </script>
        <script name="start_simulation">
          <text>
setupLogging
foreach paddock $paddocks {
   logState stateGraph $paddock [currentState $paddock]
}
</text>
          <event>start_simulation</event>
        </script>
        <script name="end_simulation">
          <text>
closeLogging
</text>
          <event>end_simulation</event>
        </script>
      </rule>
    </tclmanager>
    <Soil name="low">
      <Comment type="multiedit" description="Comments">Soil naming structure: \State\Region\Classification-Local Name (Site/district and locator number)</Comment>
      <SoilType description="Soil description">Grey Vertosol</SoilType>
      <Site>Billa Billa</Site>
      <NearestTown description="Nearest town">Billa Billa, Q 4390</NearestTown>
      <Region>Borders and Western Downs</Region>
      <State>Queensland</State>
      <NaturalVegetation description="Natural vegetation">Brigalow, Belah, Wilga</NaturalVegetation>
      <DataSource type="multiedit" description="Data source">CSIRO Sustainable Ecosystems, Toowoomba</DataSource>
      <Sample name="Initial Nitrogen">
        <Date type="date" description="Sample date:" />
        <Thickness>
          <double>1200</double>
        </Thickness>
        <NO3>
          <double>25</double>
        </NO3>
        <NO3Units>kgha</NO3Units>
        <NH4>
          <double>0</double>
        </NH4>
      </Sample>
      <Water>
        <SoilCrop name="wheat">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
          </LL>
          <KL>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.04</double>
            <double>0.04</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop name="sorghum">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
          </LL>
          <KL>
            <double>0.07</double>
            <double>0.07</double>
            <double>0.07</double>
            <double>0.05</double>
            <double>0.05</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop name="chickpea">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
          </LL>
          <KL>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop name="weed">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
          </LL>
          <KL>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.04</double>
            <double>0.04</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <BD>
          <double>1.28</double>
          <double>1.26</double>
          <double>1.32</double>
          <double>1.34</double>
          <double>1.36</double>
        </BD>
        <AirDry>
          <double>0.11</double>
          <double>0.17</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
        </AirDry>
        <LL15>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
        </LL15>
        <DUL>
          <double>0.44</double>
          <double>0.45</double>
          <double>0.42</double>
          <double>0.3</double>
          <double>0.33</double>
        </DUL>
        <SAT>
          <double>0.49</double>
          <double>0.5</double>
          <double>0.47</double>
          <double>0.46</double>
          <double>0.46</double>
        </SAT>
      </Water>
      <SoilWater>
        <SummerCona>3.5</SummerCona>
        <SummerU>6</SummerU>
        <SummerDate>1-nov</SummerDate>
        <WinterCona>2.5</WinterCona>
        <WinterU>4</WinterU>
        <WinterDate>1-apr</WinterDate>
        <DiffusConst>40</DiffusConst>
        <DiffusSlope>16</DiffusSlope>
        <Salb>0.12</Salb>
        <CN2Bare>73</CN2Bare>
        <CNRed>20</CNRed>
        <CNCov>0.8</CNCov>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <SWCON>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
        </SWCON>
      </SoilWater>
      <SoilOrganicMatter>
        <RootCN>40</RootCN>
        <RootWt>1000</RootWt>
        <SoilCN>12</SoilCN>
        <EnrACoeff>7.4</EnrACoeff>
        <EnrBCoeff>0.2</EnrBCoeff>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <OC>
          <double>1.24</double>
          <double>1.24</double>
          <double>1.25</double>
          <double>1.1</double>
          <double>0.71</double>
        </OC>
        <FBiom>
          <double>0.04</double>
          <double>0.02</double>
          <double>0.02</double>
          <double>0.02</double>
          <double>0.01</double>
        </FBiom>
        <FInert>
          <double>0.4</double>
          <double>0.6</double>
          <double>0.8</double>
          <double>1</double>
          <double>1</double>
        </FInert>
      </SoilOrganicMatter>
      <Analysis>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <PH>
          <double>7</double>
          <double>7</double>
          <double>7</double>
          <double>7</double>
          <double>7</double>
        </PH>
      </Analysis>
      <InitialWater name="Initial water">
        <FractionFull>0.80</FractionFull>
        <PercentMethod>FilledFromTop</PercentMethod>
      </InitialWater>
    </Soil>
    <Soil name="medium">
      <Comment type="multiedit" description="Comments">Soil naming structure: \State\Region\Classification-Local Name (Site/district and locator number)</Comment>
      <SoilType description="Soil description">Grey Vertosol</SoilType>
      <Site>Billa Billa</Site>
      <NearestTown description="Nearest town">Billa Billa, Q 4390</NearestTown>
      <Region>Borders and Western Downs</Region>
      <State>Queensland</State>
      <NaturalVegetation description="Natural vegetation">Brigalow, Belah, Wilga</NaturalVegetation>
      <DataSource type="multiedit" description="Data source">CSIRO Sustainable Ecosystems, Toowoomba</DataSource>
      <Sample name="Initial Nitrogen">
        <Date type="date" description="Sample date:" />
        <Thickness>
          <double>1200</double>
        </Thickness>
        <NO3>
          <double>25</double>
        </NO3>
        <NO3Units>kgha</NO3Units>
        <NH4>
          <double>0</double>
        </NH4>
      </Sample>
      <Water>
        <SoilCrop name="wheat">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
          </LL>
          <KL>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.04</double>
            <double>0.04</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop name="sorghum">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
          </LL>
          <KL>
            <double>0.07</double>
            <double>0.07</double>
            <double>0.07</double>
            <double>0.05</double>
            <double>0.05</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop name="chickpea">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
          </LL>
          <KL>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop name="weed">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
          </LL>
          <KL>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <BD>
          <double>1.28</double>
          <double>1.26</double>
          <double>1.32</double>
          <double>1.34</double>
          <double>1.36</double>
        </BD>
        <AirDry>
          <double>0.11</double>
          <double>0.17</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
        </AirDry>
        <LL15>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
        </LL15>
        <DUL>
          <double>0.44</double>
          <double>0.45</double>
          <double>0.42</double>
          <double>0.37</double>
          <double>0.33</double>
        </DUL>
        <SAT>
          <double>0.49</double>
          <double>0.5</double>
          <double>0.47</double>
          <double>0.46</double>
          <double>0.46</double>
        </SAT>
      </Water>
      <SoilWater>
        <SummerCona>3.5</SummerCona>
        <SummerU>6</SummerU>
        <SummerDate>1-nov</SummerDate>
        <WinterCona>2.5</WinterCona>
        <WinterU>4</WinterU>
        <WinterDate>1-apr</WinterDate>
        <DiffusConst>40</DiffusConst>
        <DiffusSlope>16</DiffusSlope>
        <Salb>0.12</Salb>
        <CN2Bare>73</CN2Bare>
        <CNRed>20</CNRed>
        <CNCov>0.8</CNCov>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <SWCON>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
        </SWCON>
      </SoilWater>
      <SoilOrganicMatter>
        <RootCN>40</RootCN>
        <RootWt>1000</RootWt>
        <SoilCN>12</SoilCN>
        <EnrACoeff>7.4</EnrACoeff>
        <EnrBCoeff>0.2</EnrBCoeff>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <OC>
          <double>1.24</double>
          <double>1.24</double>
          <double>1.25</double>
          <double>1.1</double>
          <double>0.71</double>
        </OC>
        <FBiom>
          <double>0.04</double>
          <double>0.02</double>
          <double>0.02</double>
          <double>0.02</double>
          <double>0.01</double>
        </FBiom>
        <FInert>
          <double>0.4</double>
          <double>0.6</double>
          <double>0.8</double>
          <double>1</double>
          <double>1</double>
        </FInert>
      </SoilOrganicMatter>
      <Analysis>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <PH>
          <double>7</double>
          <double>7</double>
          <double>7</double>
          <double>7</double>
          <double>7</double>
        </PH>
      </Analysis>
      <InitialWater name="Initial water">
        <FractionFull>0.80</FractionFull>
        <PercentMethod>FilledFromTop</PercentMethod>
      </InitialWater>
    </Soil>
    <Soil name="high">
      <Comment type="multiedit" description="Comments">Soil naming structure: \State\Region\Classification-Local Name (Site/district and locator number)</Comment>
      <SoilType description="Soil description">Grey Vertosol</SoilType>
      <Site>Billa Billa</Site>
      <NearestTown description="Nearest town">Billa Billa, Q 4390</NearestTown>
      <Region>Borders and Western Downs</Region>
      <State>Queensland</State>
      <NaturalVegetation description="Natural vegetation">Brigalow, Belah, Wilga</NaturalVegetation>
      <DataSource type="multiedit" description="Data source">CSIRO Sustainable Ecosystems, Toowoomba</DataSource>
      <Sample name="Initial Nitrogen">
        <Date type="date" description="Sample date:" />
        <Thickness>
          <double>1200</double>
        </Thickness>
        <NO3>
          <double>25</double>
        </NO3>
        <NO3Units>kgha</NO3Units>
        <NH4>
          <double>0</double>
        </NH4>
      </Sample>
      <Water>
        <SoilCrop name="wheat">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
            <double>0.34</double>
          </LL>
          <KL>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.04</double>
            <double>0.04</double>
            <double>0.02</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop name="sorghum">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
            <double>0.34</double>
          </LL>
          <KL>
            <double>0.07</double>
            <double>0.07</double>
            <double>0.07</double>
            <double>0.05</double>
            <double>0.05</double>
            <double>0.04</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop name="chickpea">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
            <double>0.34</double>
          </LL>
          <KL>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.04</double>
            <double>0.04</double>
            <double>0.02</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop name="weed">
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <LL>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.23</double>
            <double>0.26</double>
            <double>0.33</double>
            <double>0.34</double>
          </LL>
          <KL>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.06</double>
            <double>0.04</double>
            <double>0.04</double>
            <double>0.02</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <BD>
          <double>1.28</double>
          <double>1.26</double>
          <double>1.32</double>
          <double>1.34</double>
          <double>1.36</double>
          <double>1.35</double>
        </BD>
        <AirDry>
          <double>0.11</double>
          <double>0.17</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
        </AirDry>
        <LL15>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
          <double>0.21</double>
        </LL15>
        <DUL>
          <double>0.44</double>
          <double>0.45</double>
          <double>0.42</double>
          <double>0.41</double>
          <double>0.35</double>
          <double>0.35</double>
        </DUL>
        <SAT>
          <double>0.49</double>
          <double>0.5</double>
          <double>0.47</double>
          <double>0.46</double>
          <double>0.46</double>
          <double>0.46</double>
        </SAT>
      </Water>
      <SoilWater>
        <SummerCona>3.5</SummerCona>
        <SummerU>6</SummerU>
        <SummerDate>1-nov</SummerDate>
        <WinterCona>2.5</WinterCona>
        <WinterU>4</WinterU>
        <WinterDate>1-apr</WinterDate>
        <DiffusConst>40</DiffusConst>
        <DiffusSlope>16</DiffusSlope>
        <Salb>0.12</Salb>
        <CN2Bare>73</CN2Bare>
        <CNRed>20</CNRed>
        <CNCov>0.8</CNCov>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <SWCON>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
        </SWCON>
      </SoilWater>
      <SoilOrganicMatter>
        <RootCN>40</RootCN>
        <RootWt>1000</RootWt>
        <SoilCN>12</SoilCN>
        <EnrACoeff>7.4</EnrACoeff>
        <EnrBCoeff>0.2</EnrBCoeff>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <OC>
          <double>1.24</double>
          <double>1.24</double>
          <double>1.25</double>
          <double>1.1</double>
          <double>0.71</double>
          <double>0.34</double>
        </OC>
        <FBiom>
          <double>0.04</double>
          <double>0.02</double>
          <double>0.02</double>
          <double>0.02</double>
          <double>0.01</double>
          <double>0.01</double>
        </FBiom>
        <FInert>
          <double>0.4</double>
          <double>0.6</double>
          <double>0.8</double>
          <double>1</double>
          <double>1</double>
          <double>1</double>
        </FInert>
      </SoilOrganicMatter>
      <Analysis>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
          <double>300</double>
        </Thickness>
        <PH>
          <double>7</double>
          <double>7</double>
          <double>7</double>
          <double>7</double>
          <double>7</double>
          <double>7</double>
        </PH>
      </Analysis>
      <InitialWater name="Initial water">
        <FractionFull>0.80</FractionFull>
        <PercentMethod>FilledFromTop</PercentMethod>
      </InitialWater>
    </Soil>
    <clock>
      <start_date type="date" description="Select the start date of the simulation">1/01/1970</start_date>
      <end_date type="date" description="Select the end date of the simulation">2/07/1972</end_date>
    </clock>
    <metfile name="met">
      <filename name="filename" input="yes">%apsim%/Examples/MetFiles/Goond.met</filename>
    </metfile>
  </folder>
  <simulation name="MCA plastic">
    <clock shortcut="/Simulations/Shared/clock" />
    <metfile name="met" shortcut="/Simulations/Shared/met">
      <filename shortcut="/Simulations/Shared/met/filename" input="yes" />
    </metfile>
    <summaryfile />
    <tclmanager name="Economics" shortcut="/Simulations/Shared/Economics">
      <rule name="Cash Initialisation logic" shortcut="/Simulations/Shared/Economics/Cash Initialisation logic" />
      <rule name="Initial Capital Assets" shortcut="/Simulations/Shared/Economics/Initial Capital Assets" />
      <rule name="Cash Journal" shortcut="/Simulations/Shared/Economics/Cash Journal" />
      <rule name="Prices" shortcut="/Simulations/Shared/Economics/Prices" />
      <rule name="Costs - Farm Overheads" shortcut="/Simulations/Shared/Economics/Costs - Farm Overheads" />
      <rule name="Costs - Fuel" shortcut="/Simulations/Shared/Economics/Costs - Fuel" />
      <rule name="Costs - Fertilisers" shortcut="/Simulations/Shared/Economics/Costs - Fertilisers" />
      <rule name="Costs - Herbicides" shortcut="/Simulations/Shared/Economics/Costs - Herbicides" />
      <rule name="Costs - Insecticides" shortcut="/Simulations/Shared/Economics/Costs - Insecticides" />
      <rule name="Costs - Seed" shortcut="/Simulations/Shared/Economics/Costs - Seed" />
      <rule name="Costs - Contractors" shortcut="/Simulations/Shared/Economics/Costs - Contractors" />
    </tclmanager>
    <tclmanager name="Machinery" shortcut="/Simulations/Shared/Machinery">
      <rule name="Machinery Initialisation Logic" shortcut="/Simulations/Shared/Machinery/Machinery Initialisation Logic" />
      <rule name="Machinery - 200kwFWA" shortcut="/Simulations/Shared/Machinery/Machinery - 200kwFWA" />
      <rule name="Machinery - Precision Planter" shortcut="/Simulations/Shared/Machinery/Machinery - Precision Planter" />
      <rule name="Machinery - Spray Rig" shortcut="/Simulations/Shared/Machinery/Machinery - Spray Rig" />
    </tclmanager>
    <tclmanager name="Farm Manager" shortcut="/Simulations/Shared/Farm Manager">
      <rule name="Name" shortcut="/Simulations/Shared/Farm Manager/Name" />
      <rule name="Farm Logic" shortcut="/Simulations/Shared/Farm Manager/Farm logic" />
      <rule name="Financial year reporting" shortcut="/Simulations/Shared/Farm Manager/Financial year reporting" />
      <rule name="Weeds" shortcut="/Simulations/Shared/Farm Manager/Weeds" />
      <rule name="Rugplot stuff" shortcut="/Simulations/Shared/Farm Manager/Rugplot backend logic" />
      <RotPlot name="MCA Plastic Rotation Management">
        <canvas_height>372</canvas_height>
        <rules_height>209</rules_height>
        <graph_name>stateGraph</graph_name>
        <node>
          <name>Sf_earlySorghum</name>
          <x1>10</x1>
          <y1>141</y1>
          <desc>New state</desc>
          <fill>-6639379</fill>
        </node>
        <node>
          <name>CoverCrop</name>
          <x1>16</x1>
          <y1>249</y1>
          <desc>yyy</desc>
          <fill>-16744384</fill>
        </node>
        <node>
          <name>Sf_Sorghum</name>
          <x1>183</x1>
          <y1>10</y1>
          <desc>New state</desc>
          <fill>-8323073</fill>
        </node>
        <node>
          <name>Lf_Sorghum</name>
          <x1>307</x1>
          <y1>14</y1>
          <desc>New state</desc>
          <fill>-16744193</fill>
        </node>
        <node>
          <name>Sf_earlyWheat</name>
          <x1>112</x1>
          <y1>319</y1>
          <desc>yyy</desc>
          <fill>-128</fill>
        </node>
        <node>
          <name>Spray</name>
          <x1>524</x1>
          <y1>28</y1>
          <desc>Spray chickpeas</desc>
          <fill>-657956</fill>
        </node>
        <node>
          <name>lateWheat</name>
          <x1>520</x1>
          <y1>153</y1>
          <desc>yyy</desc>
          <fill>-8355840</fill>
        </node>
        <node>
          <name>Chickpea</name>
          <x1>403</x1>
          <y1>95</y1>
          <desc>New state</desc>
          <fill>-12550016</fill>
        </node>
        <node>
          <name>Sf_Wheat</name>
          <x1>348</x1>
          <y1>314</y1>
          <desc>yyy</desc>
          <fill>-32768</fill>
        </node>
        <node>
          <name>Lf_Wheat</name>
          <x1>455</x1>
          <y1>247</y1>
          <desc>yyy</desc>
          <fill>-256</fill>
        </node>
        <node>
          <name>Lf_earlySorghum</name>
          <x1>84</x1>
          <y1>58</y1>
          <desc>New state</desc>
          <fill>-16711681</fill>
        </node>
        <node>
          <name>Fallow</name>
          <x1>232</x1>
          <y1>197</y1>
          <desc>yyy</desc>
          <fill>-657956</fill>
        </node>
        <node>
          <name>Lf_earlyWheat</name>
          <x1>232</x1>
          <y1>331</y1>
          <desc>yyy</desc>
          <fill>-8323200</fill>
        </node>
        <arc>
          <name>arc11</name>
          <source>Sf_earlyWheat</source>
          <target>Fallow</target>
          <x>234</x>
          <y>299</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc12</name>
          <source>Fallow</source>
          <target>Chickpea</target>
          <x>331</x>
          <y>203</y>
          <actions>sowCrop $paddock chickpea</actions>
          <actions>lappend history($paddock) chickpea</actions>
          <actions>set chickPeaRain($paddock) 0.0</actions>
          <actions>set numChickSprays($paddock) 0</actions>
          <rules>[dayWithin 135 151]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>[areaPlanted Chickpea] &lt;0.4</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[chickpeaHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc13</name>
          <source>Chickpea</source>
          <target>Fallow</target>
          <x>320</x>
          <y>187</y>
          <actions>harvestAndEndCrop $paddock chickpea</actions>
          <rules>[canHarvestCrop $paddock chickpea]</rules>
        </arc>
        <arc>
          <name>arc14</name>
          <source>Fallow</source>
          <target>Lf_earlyWheat</target>
          <x>254</x>
          <y>307</y>
          <actions>sowCrop $paddock Lf_earlyWheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 116 128]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>[areaPlanted wheat] &lt; 0.5</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc15</name>
          <source>Lf_earlyWheat</source>
          <target>Fallow</target>
          <x>281</x>
          <y>301</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc16</name>
          <source>Chickpea</source>
          <target>Spray</target>
          <x>516</x>
          <y>126</y>
          <actions>sprayChickpeas $paddock</actions>
          <actions>set numChickSprays($paddock) 1</actions>
          <rules>[set chickPeaRain($paddock) [expr $chickPeaRain($paddock) + [apsimGet rain]]] &gt; 150</rules>
          <rules>$numChickSprays($paddock) == 0</rules>
        </arc>
        <arc>
          <name>arc0</name>
          <source>Fallow</source>
          <target>Sf_Wheat</target>
          <x>299</x>
          <y>278</y>
          <actions>sowCrop $paddock Sf_Wheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 129 152]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[areaPlanted wheat]  &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc17</name>
          <source>Spray</source>
          <target>Chickpea</target>
          <x>494</x>
          <y>111</y>
          <rules>1</rules>
        </arc>
        <arc>
          <name>arc18</name>
          <source>Fallow</source>
          <target>Lf_Wheat</target>
          <x>324</x>
          <y>269</y>
          <actions>sowCrop $paddock Lf_Wheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 129 152]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[areaPlanted wheat]  &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc1</name>
          <source>Sf_Wheat</source>
          <target>Fallow</target>
          <x>336</x>
          <y>288</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc2</name>
          <source>Fallow</source>
          <target>Sf_earlySorghum</target>
          <x>158</x>
          <y>224</y>
          <actions>sowCrop $paddock Sf_earlySorghum; lappend history($paddock) sorghum</actions>
          <rules>[dayWithin 244 350]</rules>
          <rules>[expr [sumLastRain 4] &gt; 20 &amp;&amp; [sumLastRain 1] == 0]</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>$daysSinceLastHarvest($paddock) &lt;200</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock] &gt;  80</rules>
          <rules>[areaPlanted sorghum] &lt;0.4</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[sorghumHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc19</name>
          <source>Lf_Wheat</source>
          <target>Fallow</target>
          <x>338</x>
          <y>254</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc20</name>
          <source>Fallow</source>
          <target>Lf_earlySorghum</target>
          <x>208</x>
          <y>202</y>
          <actions>sowCrop $paddock Lf_earlySorghum; lappend history($paddock) sorghum</actions>
          <rules>[dayWithin 244 350]</rules>
          <rules>[expr [sumLastRain 4] &gt; 20 &amp;&amp; [sumLastRain 1] == 0]</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock] &gt;80</rules>
          <rules>[areaPlanted sorghum] &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[sorghumHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc3</name>
          <source>Sf_earlySorghum</source>
          <target>Fallow</target>
          <x>165</x>
          <y>198</y>
          <actions>harvestAndEndCrop $paddock sorghum</actions>
          <rules>[canHarvestCrop $paddock sorghum]</rules>
        </arc>
        <arc>
          <name>arc21</name>
          <source>Lf_earlySorghum</source>
          <target>Fallow</target>
          <x>210</x>
          <y>164</y>
          <actions>harvestAndEndCrop $paddock sorghum</actions>
          <rules>[canHarvestCrop $paddock sorghum]</rules>
        </arc>
        <arc>
          <name>arc4</name>
          <source>Fallow</source>
          <target>Sf_Sorghum</target>
          <x>240</x>
          <y>129</y>
          <actions>sowCrop $paddock Sf_Sorghum; lappend history($paddock) sorghum</actions>
          <rules>[dayWithin 244 350] </rules>
          <rules>[expr [sumLastRain 4] &gt; 20 &amp;&amp; [sumLastRain 1] == 0]</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock] &gt;80</rules>
          <rules>[areaPlanted sorghum] &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[sorghumHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc22</name>
          <source>Fallow</source>
          <target>Lf_Sorghum</target>
          <x>323</x>
          <y>145</y>
          <actions>sowCrop $paddock Lf_Sorghum; lappend history($paddock) sorghum</actions>
          <rules>[dayWithin 244  350] </rules>
          <rules>[expr [sumLastRain 4] &gt; 20 &amp;&amp; [sumLastRain 1] == 0]</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock] &gt;80</rules>
          <rules>[areaPlanted sorghum] &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[sorghumHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc5</name>
          <source>Sf_Sorghum</source>
          <target>Fallow</target>
          <x>248</x>
          <y>90</y>
          <actions>harvestAndEndCrop $paddock sorghum</actions>
          <rules>[canHarvestCrop $paddock sorghum]</rules>
        </arc>
        <arc>
          <name>arc23</name>
          <source>Lf_Sorghum</source>
          <target>Fallow</target>
          <x>289</x>
          <y>155</y>
          <actions>harvestAndEndCrop $paddock sorghum</actions>
          <rules>[canHarvestCrop $paddock sorghum]</rules>
        </arc>
        <arc>
          <name>arc6</name>
          <source>Fallow</source>
          <target>lateWheat</target>
          <x>371</x>
          <y>244</y>
          <actions>sowCrop $paddock lateWheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 153 160]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[areaPlanted wheat]  &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc7</name>
          <source>lateWheat</source>
          <target>Fallow</target>
          <x>351</x>
          <y>215</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc8</name>
          <source>Fallow</source>
          <target>CoverCrop</target>
          <x>165</x>
          <y>277</y>
          <actions>sowCrop $paddock weed; lappend history($paddock) weed</actions>
          <rules>[dayWithin 245 274]</rules>
          <rules>[expr [sumLastRain 1] == 0]</rules>
          <rules>[getCover $paddock] &lt; 0.1</rules>
          <rules>[getEsw $paddock] &gt;60</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>$daysSinceLastHarvest($paddock) &lt;14</rules>
        </arc>
        <arc>
          <name>arc10</name>
          <source>Fallow</source>
          <target>Sf_earlyWheat</target>
          <x>195</x>
          <y>299</y>
          <actions>sowCrop $paddock Sf_earlyWheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 116 128]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>[areaPlanted wheat] &lt; 0.5</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc9</name>
          <source>CoverCrop</source>
          <target>Fallow</target>
          <x>151</x>
          <y>250</y>
          <actions>harvestAndEndCrop $paddock weed</actions>
          <rules>{[apsimGet $paddock.weed.das] == 60 ||  "[apsimGet $paddock.weed.plant_status]" == "dead"}</rules>
        </arc>
        <rule name="stateGraph Init rule" invisible="yes" condition="init"><![CDATA[package require struct
::struct::graph stateGraph
stateGraph node insert "Sf_earlySorghum"
set colour(Sf_earlySorghum) "-6639379"
stateGraph node insert "CoverCrop"
set colour(CoverCrop) "-16744384"
stateGraph node insert "Sf_Sorghum"
set colour(Sf_Sorghum) "-8323073"
stateGraph node insert "Lf_Sorghum"
set colour(Lf_Sorghum) "-16744193"
stateGraph node insert "Sf_earlyWheat"
set colour(Sf_earlyWheat) "-128"
stateGraph node insert "Spray"
set colour(Spray) "-657956"
stateGraph node insert "lateWheat"
set colour(lateWheat) "-8355840"
stateGraph node insert "Chickpea"
set colour(Chickpea) "-12550016"
stateGraph node insert "Sf_Wheat"
set colour(Sf_Wheat) "-32768"
stateGraph node insert "Lf_Wheat"
set colour(Lf_Wheat) "-256"
stateGraph node insert "Lf_earlySorghum"
set colour(Lf_earlySorghum) "-16711681"
stateGraph node insert "Fallow"
set colour(Fallow) "-657956"
stateGraph node insert "Lf_earlyWheat"
set colour(Lf_earlyWheat) "-8323200"
stateGraph arc insert "Sf_earlyWheat" "Fallow" "arc11"
stateGraph arc lappend "arc11" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc11" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Fallow" "Chickpea" "arc12"
stateGraph arc lappend "arc12" actions {sowCrop $paddock chickpea}
stateGraph arc lappend "arc12" actions {lappend history($paddock) chickpea}
stateGraph arc lappend "arc12" actions {set chickPeaRain($paddock) 0.0}
stateGraph arc lappend "arc12" actions {set numChickSprays($paddock) 0}
stateGraph arc lappend "arc12" rules {[dayWithin 135 151]}
stateGraph arc lappend "arc12" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc12" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc12" rules {[areaPlanted Chickpea] <0.4}
stateGraph arc lappend "arc12" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc12" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc12" rules {[getEsw $paddock]}
stateGraph arc lappend "arc12" rules {[chickpeaHistory $paddock]}
stateGraph arc insert "Chickpea" "Fallow" "arc13"
stateGraph arc lappend "arc13" actions {harvestAndEndCrop $paddock chickpea}
stateGraph arc lappend "arc13" rules {[canHarvestCrop $paddock chickpea]}
stateGraph arc insert "Fallow" "Lf_earlyWheat" "arc14"
stateGraph arc lappend "arc14" actions {sowCrop $paddock Lf_earlyWheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc14" rules {[dayWithin 116 128]}
stateGraph arc lappend "arc14" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc14" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc14" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc14" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc14" rules {[areaPlanted wheat] < 0.5}
stateGraph arc lappend "arc14" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc14" rules {[getEsw $paddock]}
stateGraph arc lappend "arc14" rules {[wheatHistory $paddock]}
stateGraph arc insert "Lf_earlyWheat" "Fallow" "arc15"
stateGraph arc lappend "arc15" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc15" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Chickpea" "Spray" "arc16"
stateGraph arc lappend "arc16" actions {sprayChickpeas $paddock}
stateGraph arc lappend "arc16" actions {set numChickSprays($paddock) 1}
stateGraph arc lappend "arc16" rules {[set chickPeaRain($paddock) [expr $chickPeaRain($paddock) + [apsimGet rain]]] > 150}
stateGraph arc lappend "arc16" rules {$numChickSprays($paddock) == 0}
stateGraph arc insert "Fallow" "Sf_Wheat" "arc0"
stateGraph arc lappend "arc0" actions {sowCrop $paddock Sf_Wheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc0" rules {[dayWithin 129 152]}
stateGraph arc lappend "arc0" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc0" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc0" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc0" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc0" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc0" rules {[areaPlanted wheat]  <0.8}
stateGraph arc lappend "arc0" rules {[getEsw $paddock]}
stateGraph arc lappend "arc0" rules {[wheatHistory $paddock]}
stateGraph arc insert "Spray" "Chickpea" "arc17"
stateGraph arc lappend "arc17" actions {}
stateGraph arc lappend "arc17" rules {1}
stateGraph arc insert "Fallow" "Lf_Wheat" "arc18"
stateGraph arc lappend "arc18" actions {sowCrop $paddock Lf_Wheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc18" rules {[dayWithin 129 152]}
stateGraph arc lappend "arc18" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc18" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc18" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc18" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc18" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc18" rules {[areaPlanted wheat]  <0.8}
stateGraph arc lappend "arc18" rules {[getEsw $paddock]}
stateGraph arc lappend "arc18" rules {[wheatHistory $paddock]}
stateGraph arc insert "Sf_Wheat" "Fallow" "arc1"
stateGraph arc lappend "arc1" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc1" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Fallow" "Sf_earlySorghum" "arc2"
stateGraph arc lappend "arc2" actions {sowCrop $paddock Sf_earlySorghum; lappend history($paddock) sorghum}
stateGraph arc lappend "arc2" rules {[dayWithin 244 350]}
stateGraph arc lappend "arc2" rules {[expr [sumLastRain 4] > 20 && [sumLastRain 1] == 0]}
stateGraph arc lappend "arc2" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc2" rules {$daysSinceLastHarvest($paddock) <200}
stateGraph arc lappend "arc2" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc2" rules {[getEsw $paddock] >  80}
stateGraph arc lappend "arc2" rules {[areaPlanted sorghum] <0.4}
stateGraph arc lappend "arc2" rules {[getEsw $paddock]}
stateGraph arc lappend "arc2" rules {[sorghumHistory $paddock]}
stateGraph arc insert "Lf_Wheat" "Fallow" "arc19"
stateGraph arc lappend "arc19" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc19" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Fallow" "Lf_earlySorghum" "arc20"
stateGraph arc lappend "arc20" actions {sowCrop $paddock Lf_earlySorghum; lappend history($paddock) sorghum}
stateGraph arc lappend "arc20" rules {[dayWithin 244 350]}
stateGraph arc lappend "arc20" rules {[expr [sumLastRain 4] > 20 && [sumLastRain 1] == 0]}
stateGraph arc lappend "arc20" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc20" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc20" rules {[getEsw $paddock] >80}
stateGraph arc lappend "arc20" rules {[areaPlanted sorghum] <0.8}
stateGraph arc lappend "arc20" rules {[getEsw $paddock]}
stateGraph arc lappend "arc20" rules {[sorghumHistory $paddock]}
stateGraph arc insert "Sf_earlySorghum" "Fallow" "arc3"
stateGraph arc lappend "arc3" actions {harvestAndEndCrop $paddock sorghum}
stateGraph arc lappend "arc3" rules {[canHarvestCrop $paddock sorghum]}
stateGraph arc insert "Lf_earlySorghum" "Fallow" "arc21"
stateGraph arc lappend "arc21" actions {harvestAndEndCrop $paddock sorghum}
stateGraph arc lappend "arc21" rules {[canHarvestCrop $paddock sorghum]}
stateGraph arc insert "Fallow" "Sf_Sorghum" "arc4"
stateGraph arc lappend "arc4" actions {sowCrop $paddock Sf_Sorghum; lappend history($paddock) sorghum}
stateGraph arc lappend "arc4" rules {[dayWithin 244 350] }
stateGraph arc lappend "arc4" rules {[expr [sumLastRain 4] > 20 && [sumLastRain 1] == 0]}
stateGraph arc lappend "arc4" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc4" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc4" rules {[getEsw $paddock] >80}
stateGraph arc lappend "arc4" rules {[areaPlanted sorghum] <0.8}
stateGraph arc lappend "arc4" rules {[getEsw $paddock]}
stateGraph arc lappend "arc4" rules {[sorghumHistory $paddock]}
stateGraph arc insert "Fallow" "Lf_Sorghum" "arc22"
stateGraph arc lappend "arc22" actions {sowCrop $paddock Lf_Sorghum; lappend history($paddock) sorghum}
stateGraph arc lappend "arc22" rules {[dayWithin 244  350] }
stateGraph arc lappend "arc22" rules {[expr [sumLastRain 4] > 20 && [sumLastRain 1] == 0]}
stateGraph arc lappend "arc22" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc22" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc22" rules {[getEsw $paddock] >80}
stateGraph arc lappend "arc22" rules {[areaPlanted sorghum] <0.8}
stateGraph arc lappend "arc22" rules {[getEsw $paddock]}
stateGraph arc lappend "arc22" rules {[sorghumHistory $paddock]}
stateGraph arc insert "Sf_Sorghum" "Fallow" "arc5"
stateGraph arc lappend "arc5" actions {harvestAndEndCrop $paddock sorghum}
stateGraph arc lappend "arc5" rules {[canHarvestCrop $paddock sorghum]}
stateGraph arc insert "Lf_Sorghum" "Fallow" "arc23"
stateGraph arc lappend "arc23" actions {harvestAndEndCrop $paddock sorghum}
stateGraph arc lappend "arc23" rules {[canHarvestCrop $paddock sorghum]}
stateGraph arc insert "Fallow" "lateWheat" "arc6"
stateGraph arc lappend "arc6" actions {sowCrop $paddock lateWheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc6" rules {[dayWithin 153 160]}
stateGraph arc lappend "arc6" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc6" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc6" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc6" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc6" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc6" rules {[areaPlanted wheat]  <0.8}
stateGraph arc lappend "arc6" rules {[getEsw $paddock]}
stateGraph arc lappend "arc6" rules {[wheatHistory $paddock]}
stateGraph arc insert "lateWheat" "Fallow" "arc7"
stateGraph arc lappend "arc7" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc7" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Fallow" "CoverCrop" "arc8"
stateGraph arc lappend "arc8" actions {sowCrop $paddock weed; lappend history($paddock) weed}
stateGraph arc lappend "arc8" rules {[dayWithin 245 274]}
stateGraph arc lappend "arc8" rules {[expr [sumLastRain 1] == 0]}
stateGraph arc lappend "arc8" rules {[getCover $paddock] < 0.1}
stateGraph arc lappend "arc8" rules {[getEsw $paddock] >60}
stateGraph arc lappend "arc8" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc8" rules {[getEsw $paddock]}
stateGraph arc lappend "arc8" rules {$daysSinceLastHarvest($paddock) <14}
stateGraph arc insert "Fallow" "Sf_earlyWheat" "arc10"
stateGraph arc lappend "arc10" actions {sowCrop $paddock Sf_earlyWheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc10" rules {[dayWithin 116 128]}
stateGraph arc lappend "arc10" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc10" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc10" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc10" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc10" rules {[areaPlanted wheat] < 0.5}
stateGraph arc lappend "arc10" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc10" rules {[getEsw $paddock]}
stateGraph arc lappend "arc10" rules {[wheatHistory $paddock]}
stateGraph arc insert "CoverCrop" "Fallow" "arc9"
stateGraph arc lappend "arc9" actions {harvestAndEndCrop $paddock weed}
stateGraph arc lappend "arc9" rules {{[apsimGet $paddock.weed.das] == 60 ||  "[apsimGet $paddock.weed.plant_status]" == "dead"}}
]]></rule>
        <RugPlotUI name="Rug Plot Graph" />
      </RotPlot>
    </tclmanager>
    <area name="p1" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/low">
        <Water shortcut="/Simulations/Shared/low/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/low/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/low/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/low/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/low/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/low/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/low/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/low/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/low/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/low/Initial water" />
      </Soil>
    </area>
    <area name="p2" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/low">
        <Water shortcut="/Simulations/Shared/low/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/low/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/low/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/low/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/low/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/low/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/low/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/low/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/low/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/low/Initial water" />
      </Soil>
    </area>
    <area name="p3" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/low/Initial Nitrogen" />
      </Soil>
    </area>
    <area name="p4" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p5" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p6" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p7" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p8" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p9" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/high">
        <Water shortcut="/Simulations/Shared/high/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/high/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/high/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/high/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/high/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/high/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/high/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/high/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/high/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/high/Initial water" />
      </Soil>
    </area>
    <area name="p10" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/high">
        <Water shortcut="/Simulations/Shared/high/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/high/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/high/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/high/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/high/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/high/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/high/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/high/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/high/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/high/Initial water" />
      </Soil>
    </area>
  </simulation>
  <simulation name="MCA rigid">
    <clock shortcut="/Simulations/Shared/clock" />
    <metfile name="met" shortcut="/Simulations/Shared/met">
      <filename shortcut="/Simulations/Shared/met/filename" input="yes" />
    </metfile>
    <summaryfile />
    <tclmanager name="Farm Manager" shortcut="/Simulations/Shared/Farm Manager">
      <rule name="Name" shortcut="/Simulations/Shared/Farm Manager/Name" />
      <rule name="Farm Logic" shortcut="/Simulations/Shared/Farm Manager/Farm logic" />
      <rule name="Financial year reporting" shortcut="/Simulations/Shared/Farm Manager/Financial year reporting" />
      <rule name="Weeds" shortcut="/Simulations/Shared/Farm Manager/Weeds" />
      <rule name="Rugplot stuff" shortcut="/Simulations/Shared/Farm Manager/Rugplot backend logic" />
      <RotPlot name="MCA Rigid Rotation Management">
        <canvas_height>372</canvas_height>
        <rules_height>209</rules_height>
        <graph_name>stateGraph</graph_name>
        <node>
          <name>Sf_earlySorghum</name>
          <x1>10</x1>
          <y1>141</y1>
          <desc>New state</desc>
          <fill>-32640</fill>
        </node>
        <node>
          <name>CoverCrop</name>
          <x1>16</x1>
          <y1>248</y1>
          <desc>yyy</desc>
          <fill>-8355648</fill>
        </node>
        <node>
          <name>Sf_Sorghum</name>
          <x1>183</x1>
          <y1>10</y1>
          <desc>New state</desc>
          <fill>-6639379</fill>
        </node>
        <node>
          <name>Lf_Sorghum</name>
          <x1>307</x1>
          <y1>14</y1>
          <desc>New state</desc>
          <fill>-2498055</fill>
        </node>
        <node>
          <name>Sf_earlyWheat</name>
          <x1>112</x1>
          <y1>319</y1>
          <desc>yyy</desc>
          <fill>-8323200</fill>
        </node>
        <node>
          <name>Spray</name>
          <x1>524</x1>
          <y1>28</y1>
          <desc>Spray chickpeas</desc>
          <fill>-657956</fill>
        </node>
        <node>
          <name>lateWheat</name>
          <x1>520</x1>
          <y1>153</y1>
          <desc>yyy</desc>
          <fill>-8355776</fill>
        </node>
        <node>
          <name>Chickpea</name>
          <x1>402</x1>
          <y1>95</y1>
          <desc>New state</desc>
          <fill>-32768</fill>
        </node>
        <node>
          <name>Sf_Wheat</name>
          <x1>348</x1>
          <y1>314</y1>
          <desc>yyy</desc>
          <fill>-16744448</fill>
        </node>
        <node>
          <name>Lf_Wheat</name>
          <x1>455</x1>
          <y1>244</y1>
          <desc>yyy</desc>
          <fill>-16744384</fill>
        </node>
        <node>
          <name>Lf_earlySorghum</name>
          <x1>84</x1>
          <y1>57</y1>
          <desc>New state</desc>
          <fill>-8323073</fill>
        </node>
        <node>
          <name>Fallow</name>
          <x1>232</x1>
          <y1>197</y1>
          <desc>yyy</desc>
          <fill>-657956</fill>
        </node>
        <node>
          <name>Lf_earlyWheat</name>
          <x1>232</x1>
          <y1>329</y1>
          <desc>yyy</desc>
          <fill>-16711872</fill>
        </node>
        <arc>
          <name>arc11</name>
          <source>Sf_earlyWheat</source>
          <target>Fallow</target>
          <x>234</x>
          <y>299</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc12</name>
          <source>Fallow</source>
          <target>Chickpea</target>
          <x>331</x>
          <y>203</y>
          <actions>sowCrop $paddock chickpea</actions>
          <actions>lappend history($paddock) chickpea</actions>
          <actions>set chickPeaRain($paddock) 0.0</actions>
          <actions>set numChickSprays($paddock) 0</actions>
          <rules>[dayWithin 135 151]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>[areaPlanted Chickpea] &lt;0.2</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[chickpeaHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc13</name>
          <source>Chickpea</source>
          <target>Fallow</target>
          <x>320</x>
          <y>187</y>
          <actions>harvestAndEndCrop $paddock chickpea</actions>
          <rules>[canHarvestCrop $paddock chickpea]</rules>
        </arc>
        <arc>
          <name>arc14</name>
          <source>Fallow</source>
          <target>Lf_earlyWheat</target>
          <x>254</x>
          <y>307</y>
          <actions>sowCrop $paddock Lf_earlyWheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 116 128]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;300</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>[areaPlanted wheat] &lt; 0.2</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc15</name>
          <source>Lf_earlyWheat</source>
          <target>Fallow</target>
          <x>281</x>
          <y>301</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc16</name>
          <source>Chickpea</source>
          <target>Spray</target>
          <x>516</x>
          <y>126</y>
          <actions>sprayChickpeas $paddock</actions>
          <actions>set numChickSprays($paddock) 1</actions>
          <rules>[set chickPeaRain($paddock) [expr $chickPeaRain($paddock) + [apsimGet rain]]] &gt; 150</rules>
          <rules>$numChickSprays($paddock) == 0</rules>
        </arc>
        <arc>
          <name>arc0</name>
          <source>Fallow</source>
          <target>Sf_Wheat</target>
          <x>299</x>
          <y>278</y>
          <actions>sowCrop $paddock Sf_Wheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 129 152]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>$daysSinceLastHarvest($paddock)&lt;200</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[areaPlanted wheat]  &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc17</name>
          <source>Spray</source>
          <target>Chickpea</target>
          <x>494</x>
          <y>111</y>
          <rules>1</rules>
        </arc>
        <arc>
          <name>arc18</name>
          <source>Fallow</source>
          <target>Lf_Wheat</target>
          <x>324</x>
          <y>269</y>
          <actions>sowCrop $paddock Lf_Wheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 129 152]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;300</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[areaPlanted wheat]  &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc1</name>
          <source>Sf_Wheat</source>
          <target>Fallow</target>
          <x>336</x>
          <y>288</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc20</name>
          <source>Fallow</source>
          <target>Lf_earlySorghum</target>
          <x>208</x>
          <y>202</y>
          <actions>sowCrop $paddock Lf_earlySorghum; lappend history($paddock) sorghum</actions>
          <rules>[dayWithin 244 350]</rules>
          <rules>[expr [sumLastRain 4] &gt; 20 &amp;&amp; [sumLastRain 1] == 0]</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;300</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock] &gt;100</rules>
          <rules>[areaPlanted sorghum] &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[sorghumHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc19</name>
          <source>Lf_Wheat</source>
          <target>Fallow</target>
          <x>338</x>
          <y>254</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc2</name>
          <source>Fallow</source>
          <target>Sf_earlySorghum</target>
          <x>158</x>
          <y>224</y>
          <actions>sowCrop $paddock Sf_earlySorghum; lappend history($paddock) sorghum</actions>
          <rules>[dayWithin 244 350]</rules>
          <rules>[expr [sumLastRain 4] &gt; 20 &amp;&amp; [sumLastRain 1] == 0]</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>$daysSinceLastHarvest($paddock) &lt;200</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock] &gt;100</rules>
          <rules>[areaPlanted sorghum] &lt;0.2</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[sorghumHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc21</name>
          <source>Lf_earlySorghum</source>
          <target>Fallow</target>
          <x>210</x>
          <y>164</y>
          <actions>harvestAndEndCrop $paddock sorghum</actions>
          <rules>[canHarvestCrop $paddock sorghum]</rules>
        </arc>
        <arc>
          <name>arc3</name>
          <source>Sf_earlySorghum</source>
          <target>Fallow</target>
          <x>165</x>
          <y>198</y>
          <actions>harvestAndEndCrop $paddock sorghum</actions>
          <rules>[canHarvestCrop $paddock sorghum]</rules>
        </arc>
        <arc>
          <name>arc22</name>
          <source>Fallow</source>
          <target>Lf_Sorghum</target>
          <x>323</x>
          <y>145</y>
          <actions>sowCrop $paddock Lf_Sorghum; lappend history($paddock) sorghum</actions>
          <rules>[dayWithin 244  350] </rules>
          <rules>[expr [sumLastRain 4] &gt; 20 &amp;&amp; [sumLastRain 1] == 0]</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;300</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock] &gt;100</rules>
          <rules>[areaPlanted sorghum] &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[sorghumHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc4</name>
          <source>Fallow</source>
          <target>Sf_Sorghum</target>
          <x>240</x>
          <y>129</y>
          <actions>sowCrop $paddock Sf_Sorghum; lappend history($paddock) sorghum</actions>
          <rules>[dayWithin 244 350] </rules>
          <rules>[expr [sumLastRain 4] &gt; 20 &amp;&amp; [sumLastRain 1] == 0]</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>$daysSinceLastHarvest($paddock)&lt;200</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock] &gt;100</rules>
          <rules>[areaPlanted sorghum] &lt;0.2</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[sorghumHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc23</name>
          <source>Lf_Sorghum</source>
          <target>Fallow</target>
          <x>289</x>
          <y>155</y>
          <actions>harvestAndEndCrop $paddock sorghum</actions>
          <rules>[canHarvestCrop $paddock sorghum]</rules>
        </arc>
        <arc>
          <name>arc5</name>
          <source>Sf_Sorghum</source>
          <target>Fallow</target>
          <x>248</x>
          <y>90</y>
          <actions>harvestAndEndCrop $paddock sorghum</actions>
          <rules>[canHarvestCrop $paddock sorghum]</rules>
        </arc>
        <arc>
          <name>arc6</name>
          <source>Fallow</source>
          <target>lateWheat</target>
          <x>371</x>
          <y>244</y>
          <actions>sowCrop $paddock lateWheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 153 160]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[expr [sumLastRain 4] &gt; 20 &amp;&amp; [sumLastRain 1] == 0]</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[areaPlanted wheat]  &lt;0.8</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <arc>
          <name>arc7</name>
          <source>lateWheat</source>
          <target>Fallow</target>
          <x>351</x>
          <y>215</y>
          <actions>harvestAndEndCrop $paddock wheat</actions>
          <rules>[canHarvestCrop $paddock wheat]</rules>
        </arc>
        <arc>
          <name>arc8</name>
          <source>Fallow</source>
          <target>CoverCrop</target>
          <x>165</x>
          <y>277</y>
          <actions>sowCrop $paddock weed; lappend history($paddock) weed</actions>
          <rules>[dayWithin 245 274]</rules>
          <rules>[expr [sumLastRain 1] == 0]</rules>
          <rules>[getCover $paddock] &lt; 0.1</rules>
          <rules>[getEsw $paddock] &gt;60</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>$daysSinceLastHarvest($paddock) &lt;14</rules>
        </arc>
        <arc>
          <name>arc9</name>
          <source>CoverCrop</source>
          <target>Fallow</target>
          <x>151</x>
          <y>250</y>
          <actions>harvestAndEndCrop $paddock weed</actions>
          <rules>{[apsimGet $paddock.weed.das] == 60 ||  "[apsimGet $paddock.weed.plant_status]" == "dead"}</rules>
        </arc>
        <arc>
          <name>arc10</name>
          <source>Fallow</source>
          <target>Sf_earlyWheat</target>
          <x>195</x>
          <y>299</y>
          <actions>sowCrop $paddock Sf_earlyWheat; lappend history($paddock) wheat</actions>
          <rules>[dayWithin 116 128]</rules>
          <rules>[getEsw $paddock] &gt; 80</rules>
          <rules>[sumLastRain 1] == 0</rules>
          <rules>$daysSinceLastHarvest($paddock) &gt;30</rules>
          <rules>$daysSinceLastHarvest($paddock)&lt;200</rules>
          <rules>[mseek2 $paddock] &gt; 0.8</rules>
          <rules>[areaPlanted wheat] &lt; 0.2</rules>
          <rules>[machineryAvailable tractor1_planter]</rules>
          <rules>[getEsw $paddock]</rules>
          <rules>[wheatHistory $paddock]</rules>
        </arc>
        <rule name="stateGraph Init rule" invisible="yes" condition="init"><![CDATA[package require struct
::struct::graph stateGraph
stateGraph node insert "Sf_earlySorghum"
set colour(Sf_earlySorghum) "-32640"
stateGraph node insert "CoverCrop"
set colour(CoverCrop) "-8355648"
stateGraph node insert "Sf_Sorghum"
set colour(Sf_Sorghum) "-6639379"
stateGraph node insert "Lf_Sorghum"
set colour(Lf_Sorghum) "-2498055"
stateGraph node insert "Sf_earlyWheat"
set colour(Sf_earlyWheat) "-8323200"
stateGraph node insert "Spray"
set colour(Spray) "-657956"
stateGraph node insert "lateWheat"
set colour(lateWheat) "-8355776"
stateGraph node insert "Chickpea"
set colour(Chickpea) "-32768"
stateGraph node insert "Sf_Wheat"
set colour(Sf_Wheat) "-16744448"
stateGraph node insert "Lf_Wheat"
set colour(Lf_Wheat) "-16744384"
stateGraph node insert "Lf_earlySorghum"
set colour(Lf_earlySorghum) "-8323073"
stateGraph node insert "Fallow"
set colour(Fallow) "-657956"
stateGraph node insert "Lf_earlyWheat"
set colour(Lf_earlyWheat) "-16711872"
stateGraph arc insert "Sf_earlyWheat" "Fallow" "arc11"
stateGraph arc lappend "arc11" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc11" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Fallow" "Chickpea" "arc12"
stateGraph arc lappend "arc12" actions {sowCrop $paddock chickpea}
stateGraph arc lappend "arc12" actions {lappend history($paddock) chickpea}
stateGraph arc lappend "arc12" actions {set chickPeaRain($paddock) 0.0}
stateGraph arc lappend "arc12" actions {set numChickSprays($paddock) 0}
stateGraph arc lappend "arc12" rules {[dayWithin 135 151]}
stateGraph arc lappend "arc12" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc12" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc12" rules {[areaPlanted Chickpea] <0.2}
stateGraph arc lappend "arc12" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc12" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc12" rules {[getEsw $paddock]}
stateGraph arc lappend "arc12" rules {[chickpeaHistory $paddock]}
stateGraph arc insert "Chickpea" "Fallow" "arc13"
stateGraph arc lappend "arc13" actions {harvestAndEndCrop $paddock chickpea}
stateGraph arc lappend "arc13" rules {[canHarvestCrop $paddock chickpea]}
stateGraph arc insert "Fallow" "Lf_earlyWheat" "arc14"
stateGraph arc lappend "arc14" actions {sowCrop $paddock Lf_earlyWheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc14" rules {[dayWithin 116 128]}
stateGraph arc lappend "arc14" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc14" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc14" rules {$daysSinceLastHarvest($paddock) >300}
stateGraph arc lappend "arc14" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc14" rules {[areaPlanted wheat] < 0.2}
stateGraph arc lappend "arc14" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc14" rules {[getEsw $paddock]}
stateGraph arc lappend "arc14" rules {[wheatHistory $paddock]}
stateGraph arc insert "Lf_earlyWheat" "Fallow" "arc15"
stateGraph arc lappend "arc15" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc15" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Chickpea" "Spray" "arc16"
stateGraph arc lappend "arc16" actions {sprayChickpeas $paddock}
stateGraph arc lappend "arc16" actions {set numChickSprays($paddock) 1}
stateGraph arc lappend "arc16" rules {[set chickPeaRain($paddock) [expr $chickPeaRain($paddock) + [apsimGet rain]]] > 150}
stateGraph arc lappend "arc16" rules {$numChickSprays($paddock) == 0}
stateGraph arc insert "Fallow" "Sf_Wheat" "arc0"
stateGraph arc lappend "arc0" actions {sowCrop $paddock Sf_Wheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc0" rules {[dayWithin 129 152]}
stateGraph arc lappend "arc0" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc0" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc0" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc0" rules {$daysSinceLastHarvest($paddock)<200}
stateGraph arc lappend "arc0" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc0" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc0" rules {[areaPlanted wheat]  <0.8}
stateGraph arc lappend "arc0" rules {[getEsw $paddock]}
stateGraph arc lappend "arc0" rules {[wheatHistory $paddock]}
stateGraph arc insert "Spray" "Chickpea" "arc17"
stateGraph arc lappend "arc17" actions {}
stateGraph arc lappend "arc17" rules {1}
stateGraph arc insert "Fallow" "Lf_Wheat" "arc18"
stateGraph arc lappend "arc18" actions {sowCrop $paddock Lf_Wheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc18" rules {[dayWithin 129 152]}
stateGraph arc lappend "arc18" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc18" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc18" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc18" rules {$daysSinceLastHarvest($paddock) >300}
stateGraph arc lappend "arc18" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc18" rules {[areaPlanted wheat]  <0.8}
stateGraph arc lappend "arc18" rules {[getEsw $paddock]}
stateGraph arc lappend "arc18" rules {[wheatHistory $paddock]}
stateGraph arc insert "Sf_Wheat" "Fallow" "arc1"
stateGraph arc lappend "arc1" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc1" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Fallow" "Lf_earlySorghum" "arc20"
stateGraph arc lappend "arc20" actions {sowCrop $paddock Lf_earlySorghum; lappend history($paddock) sorghum}
stateGraph arc lappend "arc20" rules {[dayWithin 244 350]}
stateGraph arc lappend "arc20" rules {[expr [sumLastRain 4] > 20 && [sumLastRain 1] == 0]}
stateGraph arc lappend "arc20" rules {$daysSinceLastHarvest($paddock) >300}
stateGraph arc lappend "arc20" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc20" rules {[getEsw $paddock] >100}
stateGraph arc lappend "arc20" rules {[areaPlanted sorghum] <0.8}
stateGraph arc lappend "arc20" rules {[getEsw $paddock]}
stateGraph arc lappend "arc20" rules {[sorghumHistory $paddock]}
stateGraph arc insert "Lf_Wheat" "Fallow" "arc19"
stateGraph arc lappend "arc19" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc19" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Fallow" "Sf_earlySorghum" "arc2"
stateGraph arc lappend "arc2" actions {sowCrop $paddock Sf_earlySorghum; lappend history($paddock) sorghum}
stateGraph arc lappend "arc2" rules {[dayWithin 244 350]}
stateGraph arc lappend "arc2" rules {[expr [sumLastRain 4] > 20 && [sumLastRain 1] == 0]}
stateGraph arc lappend "arc2" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc2" rules {$daysSinceLastHarvest($paddock) <200}
stateGraph arc lappend "arc2" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc2" rules {[getEsw $paddock] >100}
stateGraph arc lappend "arc2" rules {[areaPlanted sorghum] <0.2}
stateGraph arc lappend "arc2" rules {[getEsw $paddock]}
stateGraph arc lappend "arc2" rules {[sorghumHistory $paddock]}
stateGraph arc insert "Lf_earlySorghum" "Fallow" "arc21"
stateGraph arc lappend "arc21" actions {harvestAndEndCrop $paddock sorghum}
stateGraph arc lappend "arc21" rules {[canHarvestCrop $paddock sorghum]}
stateGraph arc insert "Sf_earlySorghum" "Fallow" "arc3"
stateGraph arc lappend "arc3" actions {harvestAndEndCrop $paddock sorghum}
stateGraph arc lappend "arc3" rules {[canHarvestCrop $paddock sorghum]}
stateGraph arc insert "Fallow" "Lf_Sorghum" "arc22"
stateGraph arc lappend "arc22" actions {sowCrop $paddock Lf_Sorghum; lappend history($paddock) sorghum}
stateGraph arc lappend "arc22" rules {[dayWithin 244  350] }
stateGraph arc lappend "arc22" rules {[expr [sumLastRain 4] > 20 && [sumLastRain 1] == 0]}
stateGraph arc lappend "arc22" rules {$daysSinceLastHarvest($paddock) >300}
stateGraph arc lappend "arc22" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc22" rules {[getEsw $paddock] >100}
stateGraph arc lappend "arc22" rules {[areaPlanted sorghum] <0.8}
stateGraph arc lappend "arc22" rules {[getEsw $paddock]}
stateGraph arc lappend "arc22" rules {[sorghumHistory $paddock]}
stateGraph arc insert "Fallow" "Sf_Sorghum" "arc4"
stateGraph arc lappend "arc4" actions {sowCrop $paddock Sf_Sorghum; lappend history($paddock) sorghum}
stateGraph arc lappend "arc4" rules {[dayWithin 244 350] }
stateGraph arc lappend "arc4" rules {[expr [sumLastRain 4] > 20 && [sumLastRain 1] == 0]}
stateGraph arc lappend "arc4" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc4" rules {$daysSinceLastHarvest($paddock)<200}
stateGraph arc lappend "arc4" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc4" rules {[getEsw $paddock] >100}
stateGraph arc lappend "arc4" rules {[areaPlanted sorghum] <0.2}
stateGraph arc lappend "arc4" rules {[getEsw $paddock]}
stateGraph arc lappend "arc4" rules {[sorghumHistory $paddock]}
stateGraph arc insert "Lf_Sorghum" "Fallow" "arc23"
stateGraph arc lappend "arc23" actions {harvestAndEndCrop $paddock sorghum}
stateGraph arc lappend "arc23" rules {[canHarvestCrop $paddock sorghum]}
stateGraph arc insert "Sf_Sorghum" "Fallow" "arc5"
stateGraph arc lappend "arc5" actions {harvestAndEndCrop $paddock sorghum}
stateGraph arc lappend "arc5" rules {[canHarvestCrop $paddock sorghum]}
stateGraph arc insert "Fallow" "lateWheat" "arc6"
stateGraph arc lappend "arc6" actions {sowCrop $paddock lateWheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc6" rules {[dayWithin 153 160]}
stateGraph arc lappend "arc6" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc6" rules {[expr [sumLastRain 4] > 20 && [sumLastRain 1] == 0]}
stateGraph arc lappend "arc6" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc6" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc6" rules {[areaPlanted wheat]  <0.8}
stateGraph arc lappend "arc6" rules {[getEsw $paddock]}
stateGraph arc lappend "arc6" rules {[wheatHistory $paddock]}
stateGraph arc insert "lateWheat" "Fallow" "arc7"
stateGraph arc lappend "arc7" actions {harvestAndEndCrop $paddock wheat}
stateGraph arc lappend "arc7" rules {[canHarvestCrop $paddock wheat]}
stateGraph arc insert "Fallow" "CoverCrop" "arc8"
stateGraph arc lappend "arc8" actions {sowCrop $paddock weed; lappend history($paddock) weed}
stateGraph arc lappend "arc8" rules {[dayWithin 245 274]}
stateGraph arc lappend "arc8" rules {[expr [sumLastRain 1] == 0]}
stateGraph arc lappend "arc8" rules {[getCover $paddock] < 0.1}
stateGraph arc lappend "arc8" rules {[getEsw $paddock] >60}
stateGraph arc lappend "arc8" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc8" rules {[getEsw $paddock]}
stateGraph arc lappend "arc8" rules {$daysSinceLastHarvest($paddock) <14}
stateGraph arc insert "CoverCrop" "Fallow" "arc9"
stateGraph arc lappend "arc9" actions {harvestAndEndCrop $paddock weed}
stateGraph arc lappend "arc9" rules {{[apsimGet $paddock.weed.das] == 60 ||  "[apsimGet $paddock.weed.plant_status]" == "dead"}}
stateGraph arc insert "Fallow" "Sf_earlyWheat" "arc10"
stateGraph arc lappend "arc10" actions {sowCrop $paddock Sf_earlyWheat; lappend history($paddock) wheat}
stateGraph arc lappend "arc10" rules {[dayWithin 116 128]}
stateGraph arc lappend "arc10" rules {[getEsw $paddock] > 80}
stateGraph arc lappend "arc10" rules {[sumLastRain 1] == 0}
stateGraph arc lappend "arc10" rules {$daysSinceLastHarvest($paddock) >30}
stateGraph arc lappend "arc10" rules {$daysSinceLastHarvest($paddock)<200}
stateGraph arc lappend "arc10" rules {[mseek2 $paddock] > 0.8}
stateGraph arc lappend "arc10" rules {[areaPlanted wheat] < 0.2}
stateGraph arc lappend "arc10" rules {[machineryAvailable tractor1_planter]}
stateGraph arc lappend "arc10" rules {[getEsw $paddock]}
stateGraph arc lappend "arc10" rules {[wheatHistory $paddock]}
]]></rule>
        <RugPlotUI name="Rug Plot Graph" />
      </RotPlot>
    </tclmanager>
    <tclmanager name="Economics" shortcut="/Simulations/Shared/Economics">
      <rule name="Cash Initialisation logic" shortcut="/Simulations/Shared/Economics/Cash Initialisation logic" />
      <rule name="Initial Capital Assets" shortcut="/Simulations/Shared/Economics/Initial Capital Assets" />
      <rule name="Cash Journal" shortcut="/Simulations/Shared/Economics/Cash Journal" />
      <rule name="Prices" shortcut="/Simulations/Shared/Economics/Prices" />
      <rule name="Costs - Farm Overheads" shortcut="/Simulations/Shared/Economics/Costs - Farm Overheads" />
      <rule name="Costs - Fuel" shortcut="/Simulations/Shared/Economics/Costs - Fuel" />
      <rule name="Costs - Fertilisers" shortcut="/Simulations/Shared/Economics/Costs - Fertilisers" />
      <rule name="Costs - Herbicides" shortcut="/Simulations/Shared/Economics/Costs - Herbicides" />
      <rule name="Costs - Insecticides" shortcut="/Simulations/Shared/Economics/Costs - Insecticides" />
      <rule name="Costs - Seed" shortcut="/Simulations/Shared/Economics/Costs - Seed" />
      <rule name="Costs - Contractors" shortcut="/Simulations/Shared/Economics/Costs - Contractors" />
    </tclmanager>
    <tclmanager name="Machinery" shortcut="/Simulations/Shared/Machinery">
      <rule name="Machinery Initialisation Logic" shortcut="/Simulations/Shared/Machinery/Machinery Initialisation Logic" />
      <rule name="Machinery - 200kwFWA" shortcut="/Simulations/Shared/Machinery/Machinery - 200kwFWA" />
      <rule name="Machinery - Precision Planter" shortcut="/Simulations/Shared/Machinery/Machinery - Precision Planter" />
      <rule name="Machinery - Spray Rig" shortcut="/Simulations/Shared/Machinery/Machinery - Spray Rig" />
    </tclmanager>
    <area name="p1" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/low">
        <Water shortcut="/Simulations/Shared/low/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/low/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/low/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/low/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/low/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/low/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/low/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/low/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/low/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/low/Initial water" />
      </Soil>
    </area>
    <area name="p2" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/low">
        <Water shortcut="/Simulations/Shared/low/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/low/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/low/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/low/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/low/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/low/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/low/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/low/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/low/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/low/Initial water" />
      </Soil>
    </area>
    <area name="p3" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p4" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p5" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p6" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p7" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p8" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/medium">
        <Water shortcut="/Simulations/Shared/medium/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/medium/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/medium/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/medium/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/medium/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/medium/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/medium/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/medium/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/medium/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/medium/Initial water" />
      </Soil>
    </area>
    <area name="p9" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/high">
        <Water shortcut="/Simulations/Shared/high/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/high/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/high/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/high/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/high/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/high/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/high/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/high/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/high/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/high/Initial water" />
      </Soil>
    </area>
    <area name="p10" shortcut="/Simulations/Shared/p">
      <wheat shortcut="/Simulations/Shared/p/wheat" />
      <chickpea shortcut="/Simulations/Shared/p/chickpea" />
      <sweetsorghum name="sorghum" shortcut="/Simulations/Shared/p/sweetsorghum" />
      <weed shortcut="/Simulations/Shared/p/weed" />
      <surfaceom name="surface organic matter" shortcut="/Simulations/Shared/p/surface organic matter" />
      <fertiliser shortcut="/Simulations/Shared/p/fertiliser" />
      <erosion shortcut="/Simulations/Shared/p/Erosion" />
      <Soil shortcut="/Simulations/Shared/high">
        <Water shortcut="/Simulations/Shared/high/Water">
          <SoilCrop name="wheat" shortcut="/Simulations/Shared/high/Water/wheat" />
          <SoilCrop name="sorghum" shortcut="/Simulations/Shared/high/Water/sorghum" />
          <SoilCrop name="chickpea" shortcut="/Simulations/Shared/high/Water/chickpea" />
          <SoilCrop name="weed" shortcut="/Simulations/Shared/high/Water/weed" />
        </Water>
        <SoilWater shortcut="/Simulations/Shared/high/SoilWater" />
        <SoilOrganicMatter shortcut="/Simulations/Shared/high/SoilOrganicMatter" />
        <Analysis shortcut="/Simulations/Shared/high/Analysis" />
        <Sample name="Initial Nitrogen" shortcut="/Simulations/Shared/high/Initial Nitrogen" />
        <InitialWater name="Initial Water" shortcut="/Simulations/Shared/high/Initial water" />
      </Soil>
    </area>
  </simulation>
</folder>