<folder version="34" name="simulations">
  <simulation name="Rotation Sample (Directed Graph)">
    <metfile name="met">
      <filename name="filename" input="yes">%apsim%/Examples/MetFiles/Goond.met</filename>
    </metfile>
    <clock>
      <start_date name="start_date" description="Enter the start date of the simulation" type="date" lbound="1/01/1940" ubound="31/12/1989">1/01/1940</start_date>
      <end_date name="end_date" description="Enter the end date of the simulation" type="date" lbound="1/01/1940" ubound="31/12/1989">31/12/1950</end_date>
    </clock>
    <summaryfile />
    <area name="Paddock">
      <Soil>
        <Comment type="multiedit" description="Comments">oc and ph not measured</Comment>
        <SoilType description="Soil description">Grey Vertosol</SoilType>
        <LocalName>Brigalow</LocalName>
        <Site>Kupunn</Site>
        <NearestTown description="Nearest town">Dalby, Q 4405</NearestTown>
        <Region>South East Queensland</Region>
        <NaturalVegetation description="Natural vegetation">Brigalow, belah, wilga</NaturalVegetation>
        <InitialWater name="Initial water">
          <FractionFull>1</FractionFull>
          <PercentMethod>FilledFromTop</PercentMethod>
        </InitialWater>
        <Water>
          <SoilCrop name="Chickpea">
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <LL>
              <double>0.21</double>
              <double>0.21</double>
              <double>0.22</double>
              <double>0.27</double>
              <double>0.29</double>
              <double>0.34</double>
              <double>0.38</double>
            </LL>
            <KL>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.08</double>
              <double>0.06</double>
              <double>0.04</double>
              <double>0.02</double>
              <double>0.01</double>
            </KL>
            <XF>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
            </XF>
          </SoilCrop>
          <SoilCrop name="Cotton">
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <LL>
              <double>0.21</double>
              <double>0.21</double>
              <double>0.22</double>
              <double>0.25</double>
              <double>0.27</double>
              <double>0.31</double>
              <double>0.36</double>
            </LL>
            <KL>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.09</double>
              <double>0.07</double>
              <double>0.05</double>
            </KL>
            <XF>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
            </XF>
          </SoilCrop>
          <SoilCrop name="Sorghum">
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <LL>
              <double>0.21</double>
              <double>0.21</double>
              <double>0.26</double>
              <double>0.26</double>
              <double>0.28</double>
              <double>0.34</double>
              <double>0.36</double>
            </LL>
            <KL>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.08</double>
              <double>0.06</double>
              <double>0.04</double>
              <double>0.02</double>
            </KL>
            <XF>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
            </XF>
          </SoilCrop>
          <SoilCrop name="Wheat">
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <LL>
              <double>0.21</double>
              <double>0.21</double>
              <double>0.25</double>
              <double>0.28</double>
              <double>0.31</double>
              <double>0.37</double>
              <double>0.38</double>
            </LL>
            <KL>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.08</double>
              <double>0.06</double>
              <double>0.04</double>
              <double>0.02</double>
              <double>0.01</double>
            </KL>
            <XF>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
              <double>1</double>
            </XF>
          </SoilCrop>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <BD>
            <double>1.4</double>
            <double>1.39</double>
            <double>1.37</double>
            <double>1.36</double>
            <double>1.38</double>
            <double>1.39</double>
            <double>1.42</double>
          </BD>
          <AirDry>
            <double>0.105</double>
            <double>0.189</double>
            <double>0.22</double>
            <double>0.25</double>
            <double>0.27</double>
            <double>0.31</double>
            <double>0.36</double>
          </AirDry>
          <LL15>
            <double>0.21</double>
            <double>0.21</double>
            <double>0.22</double>
            <double>0.25</double>
            <double>0.27</double>
            <double>0.31</double>
            <double>0.36</double>
          </LL15>
          <DUL>
            <double>0.39</double>
            <double>0.39</double>
            <double>0.4</double>
            <double>0.41</double>
            <double>0.4</double>
            <double>0.39</double>
            <double>0.38</double>
          </DUL>
          <SAT>
            <double>0.44</double>
            <double>0.44</double>
            <double>0.45</double>
            <double>0.46</double>
            <double>0.45</double>
            <double>0.44</double>
            <double>0.43</double>
          </SAT>
        </Water>
        <SoilWater>
          <SummerCona>3.5</SummerCona>
          <SummerU>6</SummerU>
          <SummerDate>1-Nov</SummerDate>
          <WinterCona>3.5</WinterCona>
          <WinterU>6</WinterU>
          <WinterDate>1-Apr</WinterDate>
          <DiffusConst>40</DiffusConst>
          <DiffusSlope>16</DiffusSlope>
          <Salb>0.13</Salb>
          <CN2Bare>73</CN2Bare>
          <CNRed>20</CNRed>
          <CNCov>0.8</CNCov>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <SWCON>
            <double>0.3</double>
            <double>0.3</double>
            <double>0.3</double>
            <double>0.3</double>
            <double>0.3</double>
            <double>0.3</double>
            <double>0.3</double>
          </SWCON>
        </SoilWater>
        <SoilOrganicMatter>
          <RootCN>40</RootCN>
          <RootWt>200</RootWt>
          <SoilCN>12.5</SoilCN>
          <EnrACoeff>7.4</EnrACoeff>
          <EnrBCoeff>0.2</EnrBCoeff>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <OC>
            <double>1.24</double>
            <double>1.24</double>
            <double>1.25</double>
            <double>1.1</double>
            <double>0.71</double>
            <double>0.34</double>
            <double>0.26</double>
          </OC>
          <FBiom>
            <double>0.03</double>
            <double>0.02</double>
            <double>0.01</double>
            <double>0.01</double>
            <double>0.01</double>
            <double>0.01</double>
            <double>0.01</double>
          </FBiom>
          <FInert>
            <double>0.4</double>
            <double>0.6</double>
            <double>0.8</double>
            <double>0.9</double>
            <double>0.95</double>
            <double>0.95</double>
            <double>0.95</double>
          </FInert>
        </SoilOrganicMatter>
        <Analysis>
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <PH>
            <double>7</double>
            <double>7</double>
            <double>7</double>
            <double>7</double>
            <double>7</double>
            <double>7</double>
            <double>7</double>
          </PH>
        </Analysis>
        <Sample name="Initial nitrogen">
          <Date type="date" description="Sample date:" />
          <Thickness>
            <double>150</double>
            <double>150</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
            <double>300</double>
          </Thickness>
          <NO3>
            <double>6.500</double>
            <double>2.100</double>
            <double>2.100</double>
            <double>1.700</double>
            <double>1.700</double>
            <double>1.700</double>
            <double>1.700</double>
          </NO3>
          <NH4>
            <double>0.600</double>
            <double>0.100</double>
            <double>0.100</double>
            <double>0.100</double>
            <double>0.100</double>
            <double>0.100</double>
            <double>0.100</double>
          </NH4>
        </Sample>
      </Soil>
      <fertiliser />
      <chickpea />
      <cotton />
      <wheat />
      <tclmanager name="Manager">
        <rule name="Rotation Initialisation">
          <script>
            <text>
source $apsuite/UserInterface/APSFarm/RotationInitialisation.tcl
set state "WinterFallow"
</text>
            <event>init</event>
          </script>
          <script>
            <text>
checkSetup
doProcess
</text>
            <event>process</event>
          </script>
        </rule>
        <rotplot name="Rotation Management">
          <canvas_height>401</canvas_height>
          <rules_height>227</rules_height>
          <graph_name>stateGraph</graph_name>
          <node>
            <name>SummerFallow2</name>
            <x1>68</x1>
            <y1>331</y1>
            <desc>New state</desc>
            <fill>-657956</fill>
          </node>
          <node>
            <name>Chickpea</name>
            <x1>390</x1>
            <y1>27</y1>
            <desc>Chickpea</desc>
            <fill>-657956</fill>
          </node>
          <node>
            <name>Wheat</name>
            <x1>275</x1>
            <y1>332</y1>
            <desc>Wheat Crop</desc>
            <fill>-657956</fill>
          </node>
          <node>
            <name>WinterFallow</name>
            <x1>10</x1>
            <y1>198</y1>
            <desc>New state</desc>
            <fill>-657956</fill>
          </node>
          <node>
            <name>SummerFallow1</name>
            <x1>338</x1>
            <y1>201</y1>
            <desc>New state</desc>
            <fill>-657956</fill>
          </node>
          <node>
            <name>F1</name>
            <x1>198</x1>
            <y1>10</y1>
            <desc>New state</desc>
            <fill>-657956</fill>
          </node>
          <node>
            <name>Cotton</name>
            <x1>34</x1>
            <y1>38</y1>
            <desc>A Cotton Crop</desc>
            <fill>-657956</fill>
          </node>
          <arc>
            <name>arc2</name>
            <source>SummerFallow1</source>
            <target>WinterFallow</target>
            <x>218</x>
            <y>368</y>
            <rules>[apsimGet day]  == 192</rules>
          </arc>
          <arc>
            <name>arc6</name>
            <source>WinterFallow</source>
            <target>Cotton</target>
            <x>27</x>
            <y>161</y>
            <actions>sow_cotton</actions>
            <rules>[canPlant_cotton]</rules>
          </arc>
          <arc>
            <name>arc3</name>
            <source>Wheat</source>
            <target>SummerFallow2</target>
            <x>224</x>
            <y>422</y>
            <actions>apsimSendMessage wheat harvest</actions>
            <actions>apsimSendMessage wheat end_crop</actions>
            <rules>{[apsimGet wheat.stageName] == "harvest_ripe" || [apsimGet wheat.PlantStatus] == "dead"}</rules>
          </arc>
          <arc>
            <name>arc7</name>
            <source>F1</source>
            <target>SummerFallow1</target>
            <x>372</x>
            <y>84</y>
            <rules>[apsimGet day]  == 192</rules>
          </arc>
          <arc>
            <name>arc0</name>
            <source>F1</source>
            <target>Chickpea</target>
            <x>330</x>
            <y>35</y>
            <actions>sow_chickpea</actions>
            <rules>[canPlant_chickpea]</rules>
          </arc>
          <arc>
            <name>arc8</name>
            <source>Chickpea</source>
            <target>SummerFallow1</target>
            <x>463</x>
            <y>168</y>
            <actions>apsimSendMessage chickpea harvest</actions>
            <actions>apsimSendMessage chickpea end_crop</actions>
            <rules>{[apsimGet chickpea.stageName] == "harvest_ripe" || [apsimGet chickpea.PlantStatus] == "dead"}</rules>
          </arc>
          <arc>
            <name>arc1</name>
            <source>SummerFallow1</source>
            <target>Wheat</target>
            <x>380</x>
            <y>327</y>
            <actions>sow_wheat</actions>
            <rules>[canPlant_wheat]</rules>
          </arc>
          <arc>
            <name>arc5</name>
            <source>Cotton</source>
            <target>F1</target>
            <x>156</x>
            <y>43</y>
            <actions>apsimSendMessage cotton harvest</actions>
            <rules>[apsimGet ozcot_status] &gt; 0</rules>
          </arc>
          <arc>
            <name>arc9</name>
            <source>SummerFallow2</source>
            <target>WinterFallow</target>
            <x>74</x>
            <y>325</y>
            <rules>[apsimGet day]  == 74</rules>
          </arc>
          <rule name="stateGraph Init rule" invisible="yes" condition="init"><![CDATA[package require struct
::struct::graph stateGraph
stateGraph node insert "SummerFallow2"
set colour(SummerFallow2) "-657956"
stateGraph node insert "Chickpea"
set colour(Chickpea) "-657956"
stateGraph node insert "Wheat"
set colour(Wheat) "-657956"
stateGraph node insert "WinterFallow"
set colour(WinterFallow) "-657956"
stateGraph node insert "SummerFallow1"
set colour(SummerFallow1) "-657956"
stateGraph node insert "F1"
set colour(F1) "-657956"
stateGraph node insert "Cotton"
set colour(Cotton) "-657956"
stateGraph arc insert "SummerFallow1" "WinterFallow" "arc2"
stateGraph arc lappend "arc2" actions {}
stateGraph arc lappend "arc2" rules {[apsimGet day]  == 192}
stateGraph arc insert "WinterFallow" "Cotton" "arc6"
stateGraph arc lappend "arc6" actions {sow_cotton}
stateGraph arc lappend "arc6" rules {[canPlant_cotton]}
stateGraph arc insert "Wheat" "SummerFallow2" "arc3"
stateGraph arc lappend "arc3" actions {apsimSendMessage wheat harvest}
stateGraph arc lappend "arc3" actions {apsimSendMessage wheat end_crop}
stateGraph arc lappend "arc3" rules {{[apsimGet wheat.stageName] == "harvest_ripe" || [apsimGet wheat.PlantStatus] == "dead"}}
stateGraph arc insert "F1" "SummerFallow1" "arc7"
stateGraph arc lappend "arc7" actions {}
stateGraph arc lappend "arc7" rules {[apsimGet day]  == 192}
stateGraph arc insert "F1" "Chickpea" "arc0"
stateGraph arc lappend "arc0" actions {sow_chickpea}
stateGraph arc lappend "arc0" rules {[canPlant_chickpea]}
stateGraph arc insert "Chickpea" "SummerFallow1" "arc8"
stateGraph arc lappend "arc8" actions {apsimSendMessage chickpea harvest}
stateGraph arc lappend "arc8" actions {apsimSendMessage chickpea end_crop}
stateGraph arc lappend "arc8" rules {{[apsimGet chickpea.stageName] == "harvest_ripe" || [apsimGet chickpea.PlantStatus] == "dead"}}
stateGraph arc insert "SummerFallow1" "Wheat" "arc1"
stateGraph arc lappend "arc1" actions {sow_wheat}
stateGraph arc lappend "arc1" rules {[canPlant_wheat]}
stateGraph arc insert "Cotton" "F1" "arc5"
stateGraph arc lappend "arc5" actions {apsimSendMessage cotton harvest}
stateGraph arc lappend "arc5" rules {[apsimGet ozcot_status] > 0}
stateGraph arc insert "SummerFallow2" "WinterFallow" "arc9"
stateGraph arc lappend "arc9" actions {}
stateGraph arc lappend "arc9" rules {[apsimGet day]  == 74}
]]></rule>
        </rotplot>
        <rule name="Cotton Sowing Rule">
          <ui>
            <state>Cotton</state>
            <crop>cotton</crop>
            <date1>15-oct</date1>
            <date2>15-dec</date2>
            <raincrit>10</raincrit>
            <rainnumdays>3</rainnumdays>
            <esw_amount>100</esw_amount>
            <must_sow>yes</must_sow>
            <cultivar>Siok</cultivar>
            <plants>100</plants>
            <sowing_depth>30</sowing_depth>
            <row_spacing>1000</row_spacing>
            <sowing_costs />
            <sow_tractor />
            <sow_implement />
            <fert_type />
            <fert_cost>???</fert_cost>
            <target_n />
            <harvest_costs />
            <price />
            <moisture />
            <harv_tractor />
            <harv_implement />
            <criteria>variable</criteria>
            <plants_pm>10</plants_pm>
            <skiprow>0</skiprow>
            <module>ozcot</module>
            <skipplant>0</skipplant>
            <class>plant</class>
          </ui>
          <script>
            <text>
# Support procedures
# Can we plant a crop today?
proc canPlant_cotton {} {
  if {"variable" == "variable"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "15-oct-$year"] -format %j]
     set d2 [clock format [clock scan "15-dec-$year"] -format %j]

     if {"yes" == "yes" &amp;&amp; $day == $d2} {return 1}

     if {$d1 &gt; $d2} {
        set dateOK [expr $day &gt;= $d1 || $day &lt;= $d2]
     } else {
        set dateOK [expr $day &gt;= $d1 &amp;&amp; $day &lt;= $d2]
     }
     set rainOK [expr [apsimGet rain\[3\]] &gt;= 10]
     set eswOK [expr [apsimGet esw] &gt;= 100]
     return [expr $dateOK &amp;&amp; $rainOK &amp;&amp; $eswOK]
  } elseif {"variable" == "fixed"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "15-oct-$year"] -format %j]
     return [expr $day == $d1]
  } else {
     error "Unknown sowing criteria \"variable\"."
  }
  return "notreached"
}

# Plant a crop now
proc sow_cotton {} {
  if {"ozcot" == "plant"} {
     apsimSendMessage cotton sow {Population 100} {sowing_depth 30} \
             {cultivar Siok} {row_spacing 1000} \
             {skipplant 0} {skiprow 0} {crop_class plant}
  } elseif {"ozcot" == "cropmod"} {
     apsimSendMessage cotton sow {Population [density]} {sowing_depth [depth]} \
             {cultivar Siok} {row_spacing 1000} {skiprow 0}
  } elseif {"ozcot" == "growth"} {
     apsimSendMessage cotton ???
  } elseif {"ozcot" == "ozcot"} {
     apsimSendMessage cotton sow {plants_pm 10} {sowing_depth 30} \
             {row_spacing 1000} {skiprow 0} {cultivar Siok}
  } elseif {"ozcot" == "oryza"} {
     apsimSendMessage cotton sow {cultivar Siok}
  } elseif {"ozcot" == "sorghum"} {
     apsimSendMessage cotton sow {Population 100} {sowing_depth 30} \
             {cultivar Siok} {row_spacing 1000} {skiprow 0} \
             {tiller_no_fertile [tiller_no_fertile]}
  } elseif {"ozcot" == "sugar"} {
     apsimSendMessage cotton sow {Population 100} {cultivar Siok} {sowing_depth 30}
  } else {
    error "Unknown crop module \"ozcot\"."
  }
}

</text>
            <event>init</event>
          </script>
        </rule>
        <rule name="Chickpea Sowing Rule">
          <ui>
            <state>Chickpea</state>
            <crop>chickpea</crop>
            <date1>15-may</date1>
            <date2>10-jul</date2>
            <raincrit>15</raincrit>
            <rainnumdays>3</rainnumdays>
            <esw_amount>50</esw_amount>
            <must_sow>no</must_sow>
            <cultivar>amethyst</cultivar>
            <plants>25</plants>
            <sowing_depth>30</sowing_depth>
            <row_spacing>500</row_spacing>
            <sowing_costs />
            <sow_tractor />
            <sow_implement />
            <fert_type />
            <fert_cost>???</fert_cost>
            <target_n />
            <harvest_costs />
            <price />
            <moisture />
            <harv_tractor />
            <harv_implement />
            <criteria>variable</criteria>
            <skipplant>0</skipplant>
            <skiprow>0</skiprow>
            <class>plant</class>
            <module>plant</module>
            <plants_pm />
          </ui>
          <script>
            <text>
# Support procedures
# Can we plant a crop today?
proc canPlant_[crop] {} {
  if {"[criteria]" == "variable"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "[date1]-$year"] -format %j]
     set d2 [clock format [clock scan "[date2]-$year"] -format %j]

     if {"[must_sow]" == "yes" &amp;&amp; $day == $d2} {return 1}

     if {$d1 &gt; $d2} {
        set dateOK [expr $day &gt;= $d1 || $day &lt;= $d2]
     } else {
        set dateOK [expr $day &gt;= $d1 &amp;&amp; $day &lt;= $d2]
     }
     set rainOK [expr [apsimGet rain\[[rainnumdays]\]] &gt;= [raincrit]]
     set eswOK [expr [apsimGet esw] &gt;= [esw_amount]]
     return [expr $dateOK &amp;&amp; $rainOK &amp;&amp; $eswOK]
  } elseif {"[criteria]" == "fixed"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "[date1]-$year"] -format %j]
     return [expr $day == $d1]
  } else {
     error "Unknown sowing criteria \"[criteria]\"."
  }
  return "notreached"
}

# Plant a crop now
proc sow_[crop] {} {
  if {"[module]" == "plant"} {
     apsimSendMessage [crop] sow {Population [plants]} {sowing_depth [sowing_depth]} \
             {cultivar [cultivar]} {row_spacing [row_spacing]} \
             {skipplant [skipplant]} {skiprow [skiprow]} {crop_class [class]}
  } elseif {"[module]" == "cropmod"} {
     apsimSendMessage [crop] sow {Population [density]} {sowing_depth [depth]} \
             {cultivar [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]}
  } elseif {"[module]" == "growth"} {
     apsimSendMessage [crop] ???
  } elseif {"[module]" == "ozcot"} {
     apsimSendMessage [crop] sow {plants_pm [plants_pm]} {sowing_depth [sowing_depth]} \
             {row_spacing [row_spacing]} {skiprow [skiprow]} {cultivar [cultivar]}
  } elseif {"[module]" == "oryza"} {
     apsimSendMessage [crop] sow {cultivar [cultivar]}
  } elseif {"[module]" == "sorghum"} {
     apsimSendMessage [crop] sow {Population [plants]} {sowing_depth [sowing_depth]} \
             {cultivar [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]} \
             {tiller_no_fertile [tiller_no_fertile]}
  } elseif {"[module]" == "sugar"} {
     apsimSendMessage [crop] sow {Population [plants]} {cultivar [cultivar]} {sowing_depth [sowing_depth]}
  } else {
    error "Unknown crop module \"[module]\"."
  }
}

</text>
            <event>init</event>
          </script>
        </rule>
        <rule name="Wheat Sowing Rule">
          <ui>
            <state>Wheat</state>
            <crop>wheat</crop>
            <date1>15-may</date1>
            <date2>10-jul</date2>
            <raincrit>25</raincrit>
            <rainnumdays>3</rainnumdays>
            <esw_amount>50</esw_amount>
            <must_sow>no</must_sow>
            <cultivar>hartog</cultivar>
            <plants>100</plants>
            <sowing_depth>30</sowing_depth>
            <row_spacing>250</row_spacing>
            <sowing_costs />
            <sow_tractor />
            <sow_implement />
            <fert_type />
            <fert_cost>???</fert_cost>
            <target_n />
            <harvest_costs />
            <price />
            <moisture />
            <harv_tractor />
            <harv_implement />
            <criteria>variable</criteria>
            <skipplant>0</skipplant>
            <skiprow>0</skiprow>
            <class>plant</class>
            <module>plant</module>
          </ui>
          <script>
            <text>
# Support procedures
# Can we plant a crop today?
proc canPlant_[crop] {} {
  if {"[criteria]" == "variable"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "[date1]-$year"] -format %j]
     set d2 [clock format [clock scan "[date2]-$year"] -format %j]

     if {"[must_sow]" == "yes" &amp;&amp; $day == $d2} {return 1}

     if {$d1 &gt; $d2} {
        set dateOK [expr $day &gt;= $d1 || $day &lt;= $d2]
     } else {
        set dateOK [expr $day &gt;= $d1 &amp;&amp; $day &lt;= $d2]
     }
     set rainOK [expr [apsimGet rain\[[rainnumdays]\]] &gt;= [raincrit]]
     set eswOK [expr [apsimGet esw] &gt;= [esw_amount]]
     return [expr $dateOK &amp;&amp; $rainOK &amp;&amp; $eswOK]
  } elseif {"[criteria]" == "fixed"} {
     set year [apsimGet year]; set day [apsimGet day]
     set d1 [clock format [clock scan "[date1]-$year"] -format %j]
     return [expr $day == $d1]
  } else {
     error "Unknown sowing criteria \"[criteria]\"."
  }
  return "notreached"
}

# Plant a crop now
proc sow_[crop] {} {
  if {"[module]" == "plant"} {
     apsimSendMessage [crop] sow {Population [plants]} {sowing_depth [sowing_depth]} \
             {cultivar [cultivar]} {row_spacing [row_spacing]} \
             {skipplant [skipplant]} {skiprow [skiprow]} {crop_class [class]}
  } elseif {"[module]" == "cropmod"} {
     apsimSendMessage [crop] sow {Population [density]} {sowing_depth [depth]} \
             {cultivar [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]}
  } elseif {"[module]" == "growth"} {
     apsimSendMessage [crop] ???
  } elseif {"[module]" == "ozcot"} {
     apsimSendMessage [crop] sow {plants_pm [plants_pm]} {sowing_depth [sowing_depth]} \
             {row_spacing [row_spacing]} {skiprow [skiprow]} {cultivar [cultivar]}
  } elseif {"[module]" == "oryza"} {
     apsimSendMessage [crop] sow {cultivar [cultivar]}
  } elseif {"[module]" == "sorghum"} {
     apsimSendMessage [crop] sow {Population [plants]} {sowing_depth [sowing_depth]} \
             {cultivar [cultivar]} {row_spacing [row_spacing]} {skiprow [skiprow]} \
             {tiller_no_fertile [tiller_no_fertile]}
  } elseif {"[module]" == "sugar"} {
     apsimSendMessage [crop] sow {Population [plants]} {cultivar [cultivar]} {sowing_depth [sowing_depth]}
  } else {
    error "Unknown crop module \"[module]\"."
  }
}
</text>
            <event>init</event>
          </script>
        </rule>
      </tclmanager>
      <outputfile>
        <filename output="yes">Rotation Sample (Directed Graph).out</filename>
        <title>Rotation Sample (Directed Graph)</title>
        <variables name="Variables">
          <variable array="?" description="Date (dd/mm/yyyy)">dd/mm/yyyy as Date</variable>
          <variable>Yield</variable>
          <variable>Biomass</variable>
        </variables>
        <events name="Reporting Frequency">
          <event description="">harvesting</event>
        </events>
      </outputfile>
    </area>
  </simulation>
</folder>
