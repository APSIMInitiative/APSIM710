rm(list=ls())
setwd("~/work/Projects/GRDC Pulse 2019/Chickpeas/")
library(xml2)
library(dplyr)
library(DEoptim)
options(stringsAsFactors = F)
setwd("/opt/uqpdevo1/src/APSIMClassic-pdev/Tests/Validation/Chickpeas/PA 2019")
rm(list=ls())
library(data.table)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
options(stringsAsFactors = F)
# Generic function to read apsim output files. Adds factor levels if found.
read.apsim <- function(apsim.name) {
header<-readLines(apsim.name, n=25)
if (length(header) == 0 ) {return(NULL)}
i<-3  # 4th line
apsim <- read.table(apsim.name,skip=i+1,na.strings=c("NA","?"))
names(apsim) <- unlist(strsplit(trimws(header[i]), " +"))
#  cat(apsim.name, " = ", ncol(apsim), "\n")
return(cbind(filename=apsim.name, apsim))
}
capitalise <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), tolower(substring(s, 2)),
sep="", collapse=" ")
}
df.obs<-  read.csv("Chickpea Phenology.csv")
df.obs$SimulationName<- tolower(apply(df.obs[,c("site", "Irrigation_level", "TOS", "cultivar")], 1, paste, collapse="."))
df.obs$sowDate<- as.Date(df.obs$sowDate, format = "%d/%m/%Y")
ggplot(df.obs) +
geom_boxplot(aes(x=cultivar,y=MaturityDAS, color=site)) +
scale_x_discrete() + theme_minimal()  + theme_minimal()
# merge in predicted
df.pred<- do.call(rbind, lapply(list.files(pattern="^.*Harvest\\.out$"), read.apsim))
df.pred$SimulationName<- tolower(sapply(strsplit(df.pred$filename, " "), function (x) {return(x[1])}))
df.pred$TOS <- toupper(df.pred$TOS)
df.pred$site <- sapply(df.pred$site, capitalise)
df.pred$cultivar <- sapply(df.pred$cultivar, capitalise)
df.pred<- df.pred[,c("SimulationName", "site", "TOS", "cultivar", "PoddingDAS","BuddingDAS","FloweringDAS", "MaturityDAS", "biomass", "yield", "MaxLAI")]
df <- df.obs %>% left_join(df.pred[,!names(df.pred) %in% c("site", "Irrigation_level",  "TOS", "cultivar")],
by=c("SimulationName"),
suffix = c(".obs", ".pred"))
# Table of site x cultivar simulations. JFC this is awful.
Z <- table(df$site, df$cultivar)
rn<- rownames(Z)
Z[Z==0] <- NA
Z<-apply(Z,2,as.character)
Z[is.na(Z)]<-""
Z<-as.data.frame(Z)
rownames(Z)<- rn
# order by maturity group found above
Z<- Z[,order(m$fd)]
grid.newpage()
pushViewport(viewport(height=0.8,width=0.9))
mytheme <- gridExtra::ttheme_default( base_size = 10 )
g<- arrangeGrob(tableGrob(Z, theme = mytheme),
top = textGrob('Locations x cultivar', gp=gpar(cex=1.5)))
grid.draw(g)
cc <- df[complete.cases(df[,c("BuddingDAS.obs", "BuddingDAS.pred")]),]
g<-ggplot(cc) + geom_point(aes(x=BuddingDAS.obs, y=BuddingDAS.pred,
color=interaction(cultivar, TOS))) +
scale_x_continuous(limits=range(c(cc$BuddingDAS.obs, cc$BuddingDAS.pred))) +
scale_y_continuous(limits=range(c(cc$BuddingDAS.obs, cc$BuddingDAS.pred))) +
labs(title="Budding DAS (Greenethorpe)", x="Observed", y = "Predicted") +
geom_abline(intercept=0, colour="grey") + theme_minimal()
print(g)
g<-ggplot(df[!is.na(df$FloweringDAS.obs),]) + geom_point(aes(x=FloweringDAS.obs, y=FloweringDAS.pred, color=site)) +
scale_x_continuous(limits=range(na.omit(c(df$FloweringDAS.obs, df$FloweringDAS.pred)))) +
scale_y_continuous(limits=range(na.omit(c(df$FloweringDAS.obs, df$FloweringDAS.pred)))) +
labs(title="Flowering DAS", x="Observed", y = "Predicted") +
geom_abline(intercept=0, colour="grey") + theme_minimal()
print(g)
g<-ggplot(df[!is.na(df$FloweringDAS.obs),]) + geom_point(aes(x=FloweringDAS.obs, y=FloweringDAS.pred, color=cultivar)) +
scale_x_continuous(limits=range(na.omit(c(df$FloweringDAS.obs, df$FloweringDAS.pred)))) +
scale_y_continuous(limits=range(na.omit(c(df$FloweringDAS.obs, df$FloweringDAS.pred)))) +
labs(title="Flowering DAS", x="Observed", y = "Predicted") +
geom_abline(intercept=0, colour="grey") +
theme_minimal()
print(g)
g<-ggplot(df) + geom_point(aes(x=PoddingDAS.obs, y=PoddingDAS.pred, color=site)) +
scale_x_continuous(limits=range(na.omit(c(df$PoddingDAS.obs, df$PoddingDAS.pred)))) +
scale_y_continuous(limits=range(na.omit(c(df$PoddingDAS.obs, df$PoddingDAS.pred)))) +
labs(title="Podding DAS", x="Observed", y = "Predicted") +
geom_abline(intercept=0, colour="grey") + theme_minimal()
print(g)
cc <- df[complete.cases(df[,c("MaturityDAS.obs", "MaturityDAS.pred")]),]
g<-ggplot(cc) +
geom_point(aes(x=MaturityDAS.obs, y=MaturityDAS.pred, color=TOS)) +
scale_x_continuous(limits=range(c(cc$MaturityDAS.obs, cc$MaturityDAS.pred))) +
scale_y_continuous(limits=range(na.omit(cc$MaturityDAS.obs, cc$MaturityDAS.pred))) +
labs(title="Maturity DAS (gatton)", x="Observed", y = "Predicted") +
geom_abline(intercept=0, colour="grey") +
theme_minimal()
print(g)
# Now all the crop data
df.obs<-  read.csv("Chickpea.csv")
df.obs<- df.obs[df.obs$cultivar=="HatTrick" | df.obs$cultivar=="Genesis" ,]
df.obs$SimulationName<- tolower(apply(df.obs[,c("site", "Irrigation_level", "TOS", "cultivar")], 1, paste, collapse="."))
df.obs$Date<- as.Date(df.obs$Date, format = "%d/%m/%Y")
df.obs$sowDate<- as.Date(df.obs$sowDate, format = "%d/%m/%Y")
df.harv<- df.obs[df.obs$Phase=="Mat",]
df.harv$biomass <- df.harv$tot_biom_m2 * 10
df.harv$yield <- df.harv$yield_per_m2 * 10
# merge in predicted
df <- df.harv %>% left_join(df.pred[,!names(df.pred) %in% c("site", "Irrigation_level",  "TOS", "cultivar")],
by=c("SimulationName"),
suffix = c(".obs", ".pred"))
g1<-ggplot(df) + geom_point(aes(x=biomass.obs, y=biomass.pred, color=site), na.rm = T) +
scale_x_continuous(limits=range(na.omit(c(df$biomass.obs, df$biomass.pred)))) +
scale_y_continuous(limits=range(na.omit(c(df$biomass.obs, df$biomass.pred)))) +
labs(title="Harvest Biomass (kg/ha)", x="Observed", y = "Predicted") +
geom_abline(intercept=0, colour="grey") + facet_wrap(~cultivar) +
theme_minimal()
g2<-ggplot(df) + geom_point(aes(x=biomass.obs, y=biomass.pred, color=cultivar)) +
scale_x_continuous(limits=range(na.omit(c(df$biomass.obs, df$biomass.pred)))) +
scale_y_continuous(limits=range(na.omit(c(df$biomass.obs, df$biomass.pred)))) +
labs(title="Harvest Biomass (kg/ha)", x="Observed", y = "Predicted") +
geom_abline(intercept=0, colour="grey") + facet_wrap(~site) +
theme_minimal()
grid.arrange(g1,g2,nrow=2)
g1<-ggplot(df) + geom_point(aes(x=yield.obs, y=yield.pred, color=site)) +
scale_x_continuous(limits=range(na.omit(c(df$yield.obs, df$yield.pred)))) +
scale_y_continuous(limits=range(na.omit(c(df$yield.obs, df$yield.pred)))) +
labs(title="Harvest Yield (kg/ha)", x="Observed", y = "Predicted") +
geom_abline(intercept=0, colour="grey") + facet_wrap(~cultivar) +
theme_minimal()
g2<-ggplot(df) + geom_point(aes(x=yield.obs, y=yield.pred, color=cultivar)) +
scale_x_continuous(limits=range(na.omit(c(df$yield.obs, df$yield.pred)))) +
scale_y_continuous(limits=range(na.omit(c(df$yield.obs, df$yield.pred)))) +
labs(title="Harvest Yield (kg/ha)", x="Observed", y = "Predicted") +
geom_abline(intercept=0, colour="grey") + facet_wrap(~site) +
theme_minimal()
grid.arrange(g1,g2,nrow=2)
# merge in daily predicted
df.pred<- rbindlist( lapply(list.files(pattern="^.*Daily\\.out$"), read.apsim), fill = T)
df.pred$SimulationName<- tolower(sapply(strsplit(df.pred$filename, " "), function (x) {return(x[1])}))
df.pred$TOS <- toupper(df.pred$TOS)
df.pred$site <- sapply(df.pred$site, capitalise)
df.pred$cultivar <- sapply(df.pred$cultivar, capitalise)
df.pred$Date<- as.Date(df.pred$Date, format = "%d/%m/%Y")
df.obs$Yield <- df.obs$yield_per_m2 * 10
df.obs$Biomass <- df.obs$tot_biom_m2 * 10
df.obs$leaf_no <- df.obs$AvPlantLeaf
df.obs$leafGreenWt <- df.obs$greenleaf_dwt_m2
df.obs$leafSenescedWt <- df.obs$yellowleaf_dwt_m2
df.obs$leafTotalWt <- df.obs$leafGreenWt +df.obs$leafSenescedWt
df.obs$podTotalWt <- df.obs$pod_dwt_m2
df.obs$stemTotalWt <- df.obs$stem_dwt_m2
# Apsim's "pods" are just the pod walls without seed
df.pred$podTotalWt <- df.pred$podTotalWt + df.pred$grainTotalWt
df <- df.pred %>% left_join(df.obs[,!names(df.obs) %in% c("site", "Irrigation_level",  "TOS", "cultivar")],
by=c("SimulationName", "Date"),
suffix = c(".pred", ".obs"))
