<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Linking APSIM and VENSIM using the Venlink module</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../ApsimWebStyle.css" rel="stylesheet" type="text/css"></head>

<body>
<p class="Title1">Linking APSIM and VENSIM using the Venlink module </p>
<p class="Normal"><strong>Patrick Smith and Dean Holzworth </strong></p>
<p class="Normal">&nbsp;</p>
<p class="Title2">Overview </p>
<p class="Normal">The ability to integrate diverse modules through the so-called “plug-in-pull-out” approach is one of APSIM's key strengths. This guide describes an enhancement of this functionality through the linkage of APSIM with VENSIM, an ‘off the shelf' modelling package produced by Ventana Systems Inc. Enabling APSIM to call and execute VENSIM models allows researchers to quickly and easily develop new modules for APSIM, making full use of the functionality and intuitive icon-based interface of VENSIM. New VENSIM based modules fully interact with the APSIM Manager in the same manner as existing modules, but may be developed by the user without the need for significant interaction with the APSIM software engineers. </p>
<p class="Normal">&nbsp;</p>
<p class="Title2">Procedure for producing a VENSIM-based module </p>
<p class="Normal">To produce a new VENSIM-based module for APSIM the following three steps are recommended: </p>
<ol>
  <li>
    <p class="Normal">Construct and test a fully functional stand-alone model in VENSIM </p>
  </li>
  <li>
    <p class="Normal">Convert the ‘shared' variables within the VENSIM model to ‘APSIM settable' types </p>
  </li>
  <li>
    <p class="Normal">Add the necessary sections and commands to the APSIM files. </p>
  </li>
</ol>
<p class="Normal"><strong>Step 1. Construct and test a fully functional stand-alone model in VENSIM </strong></p>
<p class="Normal">VENSIM is quite intuitive to use and previous users of icon-type modelling software should have little difficulty getting up to speed with it. New users are recommended to do the tutorials provided under VENSIM Help. As you design and build your model distinguish between two types of variables – those variables that will be used exclusively within the VENSIM module, and those variable that will be passed from VENSIM to APSIM and <em>vice versa </em>. It may be helpful to visually identify the latter “shared” variables in your VENSIM model diagram by using a special font, colour or outline. </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">Before attempting to link a VENSIM model to APSIM it is important to ensure that the model is working properly in isolation. This means that all variables that eventually will be shared between the programs will initially need to have values allocated within VENSIM. For constants this is simply a matter of specifying a value in the VENSIM equation editor. For variables that require sequential data it may be useful to dynamically link VENSIM to a spreadsheet using the GET XLS DATA or GET 123 DATA functions in VENSIM. Doing a dummy APSIM run may be a convenient way to generate the data you need to test your VENSIM model, and in many cases it may be the same data that is eventually passed to VENSIM by APSIM (e.g. daily rainfall, soil moisture or crop biomass). </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">The only rule that must be followed when constructing your VENSIM model is that: </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">The initial value of all ‘levels' (= ‘stocks' or ‘state variables') in VENSIM must be set indirectly by means of a constant linked to the level with a connecting arrow . This is because APSIM cannot set VENSIM levels directly. </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">In addition to the rule concerning levels, the following naming convention is encouraged: </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">Names of variables in VENSIM models should be as descriptive as possible to assist other users and to help ‘self document' the model. Spaces are permitted in VENSIM and these will be automatically converted within APSIM to underscores (eg. initial htt in VENSIM will become initial_htt in APSIM.. </p>
<p class="Normal">&nbsp;</p>
<p class="Normal"><strong>Step 2. Convert the ‘shared' variables within the VENSIM model to ‘APSIM settable' types </strong></p>
<p class="Normal">Having established that your VENSIM model is working properly it is a simple matter to enable communication with APSIM. </p>
<p class="Normal">Variables that need to be set by APSIM during the course of a run should be converted to one of two variable types: </p>
<ol>
  <li>
    <p class="Normal">Variables that require only the initial value to be set by APSIM (namely constants, including those that specify the initial values of levels (as described in Step 1)) should be set to “Constant” and “Normal” under the variable type selectors in the equation editor </p>
  </li>
  <li>
    <p class="Normal">Variables that are required to be set by APSIM on a daily basis should be set to “Auxiliary” and “Gaming” under the variable type selectors in the equation editor. </p>
  </li>
</ol>
<p class="Normal">Note that variables owned exclusively by VENSIM do not need to be changed from Auxiliary/Normal or Constant/Normal types. Such variables can still be retrieved by APSIM for calculations and reporting. </p>
<p class="Normal">&nbsp;</p>
<p class="Normal"><strong>Step 3. Add necessary sections to the APSIM files. </strong></p>
<p class="Normal"><u>Control / Parameter file instructions</u></p>
<p class="Normal">To call and execute a VENSIM module within APSIM various commands need to be added to the APSIM ‘.par', ‘.man', ‘.ini' and ‘.con' files. </p>
<p class="Normal">The manager logic in the ‘.par' or ‘.man' file should specify the VENSIM model file ( .vmf) and the vensim variables that APSIM will get or set during the simulation. </p>
<p class="Normal">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;[all.venlink.parameters] </p>
<p class="Code">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;model_filename = HTTcalculator.vmf </p>
<p class="Code">&nbsp;&nbsp;variable = st1 </p>
<p class="Code">&nbsp;&nbsp;variable = sw1 </p>
<p class="Code">&nbsp;&nbsp;variable = daily htt </p>
<p class="Code">&nbsp;&nbsp;variable = sum htt </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">Also, any variables that APSIM needs to set on a daily basis should be mapped as in the following example: </p>
<p class="Normal">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;[venlink.manager.start_of_day] </p>
<p class="Code">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;venlink.st1 = st(1) </p>
<p class="Code">&nbsp;&nbsp;venlink.sw1 = sw(1) </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">An ‘.ini' file should list all VENSIM constants that need to be set by APSIM as in the following example: </p>
<p class="Normal">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;[standard.venlink.constants] </p>
<p class="Code">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;initial_sum_htt = 0 </p>
<p class="Code">&nbsp;&nbsp;soil_moisture_threshold = -0.9 </p>
<p class="Code">&nbsp;&nbsp;ll15 = 0.5 </p>
<p class="Code">&nbsp;&nbsp;soil_temp_threshold = 20 </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">The control file should invoke the Venlink module and point to the appropriate sections in the .par/.man and .ini files described above, e.g. </p>
<p class="Normal">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;Module = venlink venlink.par [all] venlink.ini [standard] </p>
<p class="Code">&nbsp;</p>
<p class="Code"><u>User interface instructions</u></p>
<p class="Code">&nbsp;</p>
<p class="Code">Firstly you need to drag and drop a VenLink component from the standard toolbox and drop it on your paddock. Next you need to specify the model file name and the VENSIM variable names that you want to access from APSIM. This can be done by clicking on VenLink and editing the parameters on the right hand side.</p>
<p class="Code">&nbsp;</p>
<p class="Code">Next you need to give the VENSIM  &quot;constants&quot; an initial value. Click on the <em>ini</em> node under VenLink and browse to a .ini file. The contents of the .ini file should look something like the following example::</p>
<p class="Code">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;[standard.venlink.constants] </p>
<p class="Code">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;initial_sum_htt = 0 </p>
<p class="Code">&nbsp;&nbsp;soil_moisture_threshold = -0.9 </p>
<p class="Code">&nbsp;&nbsp;ll15 = 0.5 </p>
<p class="Code">&nbsp;&nbsp;soil_temp_threshold = 20 </p>
<p class="Normal"></p>
<p class="Normal">Finally, VENSIM variables that need to be set every day must be done through a <em>logic</em> component. After dropping a <em>Logic</em> component from the standard toolbox onto your paddock enter script in the &quot;Start_of_day&quot; tab that looks like this example: </p>
<p class="Code">&nbsp;</p>
<p class="Code">&nbsp;&nbsp;venlink.st1 = st(1) </p>
<p class="Code">&nbsp;&nbsp;venlink.sw1 = sw(1) </p>
<p class="Normal"></p>
<p class="Code">&nbsp; </p>
</body>
</html>
