<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>TCL/Apsim</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../ApsimWebStyle.css" rel="stylesheet" type="text/css">
</head>

<body>
<p class="Title1">TCL/Apsim </p>
<p class="Normal">&nbsp;</p>
<p class="Title2">Description </p>
<p class="Normal">This module provides a simple link between apsim and TCL interpreters. Variables are exchanged through a Get/Set mechanism. </p>
<p class="Normal">&nbsp;</p>
<p class="Title2">Settings </p>
<p class="Normal">Rules are defined just like the manager: the rules in [xyz.tcllink.init] will be evaluated at the simulation's initialisation. The other rules of interest are “init”, “prepare”, “start_of_day”, “process”,“ post”, “end_of_day”, and "exit". </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">Apsim messages are generated with the TCL procedure apsimSendMessage. It has two mandatory arguments, the destination module, the message name, and optional message name/value pairs are encoded as list elements. For example, </p>
<p class="Normal">&nbsp;</p>
<p class="Normal">apsimSendMessage wheat sow {cultivar hartog} {plants 120} {sowing_depth 30} </p>
<p class="Normal">Apsim variables are set/get with apsimGet, apsimSet. </p>
<p class="Normal">The procedure <tt>apsimWriteToSummaryFile</tt> sends a log message to the current summary file</p>

<p class="Normal">A simple “command line” debugger is provided in the sample directory. It demonstrates the ability to examine apsim variables, step through simulations and set breakpoints. </p>

<p class="Normal">&nbsp;</p>
<p class="Code">(Sample) 1 % <strong>link clock.day day </strong></p>
<p class="Normal">Link the apsim variable “clock.day” to the tcl variable “day”. </p>
<p class="Code">(Sample) 2 % <strong>b {$day == 182} </strong></p>
<p class="Code">{$day == 182} </p>
<p class="Normal">Set a breakpoint for day 182. Equivalent to <br>
  <span class="Code">“ b {[apsimGet clock.day] == 182} ” </span></p>
<p class="Code">(Sample) 3 % <strong>c </strong></p>
<p class="Code">-1 </p>
<p class="Normal">Continue. Control returns after a crop is planted </p>
<p class="Code">(Sample) 4 % <strong>p wheat.biomass </strong></p>
<p class="Code">12.874 </p>
<p class="Normal">Print an apsim variable </p>
<p class="Code">(Sample) 5 % <strong>s </strong></p>
<p class="Code">1 </p>
<p class="Normal">Single step </p>
<p class="Code">(Sample) 6 % <strong>p wheat.biomass </strong></p>
<p class="Code">14.095 </p>
<p class="Normal">etc.. </p>
<p class="Code">(Sample) 7 % </p>
<p class="Normal">&nbsp;</p>
<p class="Title2">Missing features </p>
<p class="Normal">Cannot uncrack messageData structures (eg newmet) </p>
</body>
</html>
